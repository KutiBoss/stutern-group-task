(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[13883],{613709:function(e,o,t){var n={"./checkbox-pt.json":414458,"./checkbox-zh.json":799495,"./checkbox.json":965014,"docs/translations/api-docs/checkbox/checkbox-pt.json":414458,"docs/translations/api-docs/checkbox/checkbox-zh.json":799495,"docs/translations/api-docs/checkbox/checkbox.json":965014};function i(e){var o=c(e);return t(o)}function c(e){if(!t.o(n,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=c,e.exports=i,i.id=613709},384132:function(e,o,t){"use strict";t.r(o),t.d(o,{default:function(){return d}});t(827378);var n=t(888233),i=t(631506),c=JSON.parse('{"props":{"checked":{"type":{"name":"bool"}},"checkedIcon":{"type":{"name":"node"},"default":"<CheckBoxIcon />"},"classes":{"type":{"name":"object"}},"color":{"type":{"name":"union","description":"\'default\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;\'error\'<br>&#124;&nbsp;\'info\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'primary\'"},"defaultChecked":{"type":{"name":"bool"}},"disabled":{"type":{"name":"bool"}},"disableRipple":{"type":{"name":"bool"}},"icon":{"type":{"name":"node"},"default":"<CheckBoxOutlineBlankIcon />"},"id":{"type":{"name":"string"}},"indeterminate":{"type":{"name":"bool"}},"indeterminateIcon":{"type":{"name":"node"},"default":"<IndeterminateCheckBoxIcon />"},"inputProps":{"type":{"name":"object"}},"inputRef":{"type":{"name":"custom","description":"ref"}},"onChange":{"type":{"name":"func"}},"required":{"type":{"name":"bool"}},"size":{"type":{"name":"union","description":"\'medium\'<br>&#124;&nbsp;\'small\'<br>&#124;&nbsp;string"},"default":"\'medium\'"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"}},"value":{"type":{"name":"any"}}},"name":"Checkbox","styles":{"classes":["root","checked","disabled","indeterminate","colorPrimary","colorSecondary"],"globalClasses":{"checked":"Mui-checked","disabled":"Mui-disabled"},"name":"MuiCheckbox"},"spread":true,"forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-material/src/Checkbox/Checkbox.js","inheritance":{"component":"ButtonBase","pathname":"/material-ui/api/button-base/"},"demos":"<ul><li><a href=\\"/material-ui/react-checkbox/\\">Checkbox</a></li>\\n<li><a href=\\"/material-ui/react-transfer-list/\\">Transfer List</a></li></ul>","cssComponent":false}'),s=t(824246);function d(e){var o=e.descriptions,t=e.pageContent;return(0,s.jsx)(n.Z,{descriptions:o,pageContent:t})}d.getInitialProps=function(){var e=t(613709);return{descriptions:(0,i.Z)(e),pageContent:c}}},192547:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/checkbox",function(){return t(384132)}])},414458:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":"If <code>true</code>, the component is checked.","checkedIcon":"The icon to display when the component is checked.","classes":"Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\\"#css\\">API CSS</a> abaixo para maiores detalhes.","color":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#adding-new-colors\\">palette customization guide</a>.","defaultChecked":"The default checked state. Use when the component is not controlled.","disabled":"Se <code>true</code>, o componente est\xe1 desabilitado.","disableRipple":"If <code>true</code>, the ripple effect is disabled.","icon":"The icon to display when the component is unchecked.","id":"The id of the <code>input</code> element.","indeterminate":"If <code>true</code>, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a <code>data-indeterminate</code> attribute on the <code>input</code>.","indeterminateIcon":"The icon to display when the component is indeterminate.","inputProps":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element.","inputRef":"Pass a ref to the <code>input</code> element.","onChange":"Callback fired when the state is changed.<br><br><strong>Signature:</strong><br><code>function(event: object) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean).","required":"If <code>true</code>, the <code>input</code> element is required.","size":"The size of the checkbox. <code>small</code> is equivalent to the dense checkbox styling.","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/getting-started/the-sx-prop/\\">`sx` page</a> for more details.","value":"The value of the component. The DOM API casts this to a string. The browser uses &quot;on&quot; as the default value."},"classDescriptions":{"root":{"description":"Estilos aplicados ao elemento raiz."},"checked":{"description":"Pseudo-class aplicada a {{nodeName}} se {{conditions}}.","nodeName":"o elemento raiz","conditions":"<code>checked={true}</code>"},"disabled":{"description":"Pseudo-class aplicada a {{nodeName}} se {{conditions}}.","nodeName":"o elemento raiz","conditions":"<code>disabled={true}</code>"},"indeterminate":{"description":"Pseudo-class aplicada a {{nodeName}} se {{conditions}}.","nodeName":"o elemento raiz","conditions":"<code>indeterminate={true}</code>"},"colorPrimary":{"description":"Estilos aplicados para {{nodeName}} se {{conditions}}.","nodeName":"o elemento raiz","conditions":"<code>color=\\"primary\\"</code>"},"colorSecondary":{"description":"Estilos aplicados para {{nodeName}} se {{conditions}}.","nodeName":"o elemento raiz","conditions":"<code>color=\\"secondary\\"</code>"}}}')},799495:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":"If <code>true</code>, the component is checked.","checkedIcon":"The icon to display when the component is checked.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","color":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#adding-new-colors\\">palette customization guide</a>.","defaultChecked":"The default checked state. Use when the component is not controlled.","disabled":"\u5982\u679c\u88ab\u8bbe\u7f6e\u4e3a <code>true</code>\uff0c\u90a3\u4e48\u8be5\u7ec4\u4ef6\u5c06\u4f1a\u88ab\u7981\u7528\u3002","disableRipple":"If <code>true</code>, the ripple effect is disabled.","icon":"The icon to display when the component is unchecked.","id":"The id of the <code>input</code> element.","indeterminate":"If <code>true</code>, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a <code>data-indeterminate</code> attribute on the <code>input</code>.","indeterminateIcon":"The icon to display when the component is indeterminate.","inputProps":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element.","inputRef":"Pass a ref to the <code>input</code> element.","onChange":"Callback fired when the state is changed.<br><br><strong>Signature:</strong><br><code>function(event: object) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean).","required":"If <code>true</code>, the <code>input</code> element is required.","size":"The size of the checkbox. <code>small</code> is equivalent to the dense checkbox styling.","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/getting-started/the-sx-prop/\\">`sx` page</a> for more details.","value":"The value of the component. The DOM API casts this to a string. The browser uses &quot;on&quot; as the default value."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"checked":{"description":"Pseudo-class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>checked={true}</code>"},"disabled":{"description":"Pseudo-class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"indeterminate":{"description":"Pseudo-class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>indeterminate={true}</code>"},"colorPrimary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"secondary\\"</code>"}}}')},965014:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":"If <code>true</code>, the component is checked.","checkedIcon":"The icon to display when the component is checked.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","color":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#adding-new-colors\\">palette customization guide</a>.","defaultChecked":"The default checked state. Use when the component is not controlled.","disabled":"If <code>true</code>, the component is disabled.","disableRipple":"If <code>true</code>, the ripple effect is disabled.","icon":"The icon to display when the component is unchecked.","id":"The id of the <code>input</code> element.","indeterminate":"If <code>true</code>, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a <code>data-indeterminate</code> attribute on the <code>input</code>.","indeterminateIcon":"The icon to display when the component is indeterminate.","inputProps":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element.","inputRef":"Pass a ref to the <code>input</code> element.","onChange":"Callback fired when the state is changed.<br><br><strong>Signature:</strong><br><code>function(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean).","required":"If <code>true</code>, the <code>input</code> element is required.","size":"The size of the component. <code>small</code> is equivalent to the dense checkbox styling.","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/getting-started/the-sx-prop/\\">`sx` page</a> for more details.","value":"The value of the component. The DOM API casts this to a string. The browser uses &quot;on&quot; as the default value."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"checked":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>checked={true}</code>"},"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code>"},"indeterminate":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>indeterminate={true}</code>"},"colorPrimary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"primary\\"</code>"},"colorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>color=\\"secondary\\"</code>"}}}')}},function(e){e.O(0,[75760,31194,36634,35408,85992,59771,78491,3381,63756,94617,68182,9448,43785,55898,26035,35396,11486,10552,70121,59430,84445,42697,49774,92888,40179],(function(){return o=192547,e(e.s=o);var o}));var o=e.O();_N_E=o}]);