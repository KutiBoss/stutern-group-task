(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[37290],{57861:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return d}});var s={};a.r(s),a.d(s,{demoComponents:function(){return l},demos:function(){return i},docs:function(){return p},srcComponents:function(){return c}});var t=a(295649),o=(a(827378),a(307391)),p={en:{description:"This is a reference guide to all of the breaking changes introduced in Material v5, and how to handle them when migrating from v4. This part covers changes to styling and theming.",location:"/docs/data/material/migration/migration-v4/v5-style-changes.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Breaking changes in v5, part one: styles and themes</h1><p class="description">This is a reference guide to all of the breaking changes introduced in Material v5, and how to handle them when migrating from v4. This part covers changes to styling and theming.</p>\n\n<h2 id="material-ui-v5-migration">Material UI v5 migration<a aria-labelledby="material-ui-v5-migration" class="anchor-link-style" href="#material-ui-v5-migration" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ol>\n<li><a href="/material-ui/migration/migration-v4/">Getting started</a></li>\n<li>Breaking changes part one: style and theme \ud83d\udc48 <em>you are here</em></li>\n<li><a href="/material-ui/migration/v5-component-changes/">Breaking changes part two: components</a></li>\n<li><a href="/material-ui/migration/migrating-from-jss/">Migrating from JSS</a></li>\n<li><a href="/material-ui/migration/troubleshooting/">Troubleshooting</a></li>\n</ol>\n<h2 id="breaking-changes-part-one">Breaking changes, part one<a aria-labelledby="breaking-changes-part-one" class="anchor-link-style" href="#breaking-changes-part-one" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Material UI v5 introduces a number of breaking changes from v4.\nMany of these changes can be resolved automatically using <a href="/material-ui/migration/migration-v4/#run-codemods">the codemods</a> described in the <a href="/material-ui/migration/migration-v4/">main migration guide</a>.</p>\n<p>The following document lists all breaking changes related to styles and themes in v5 and how to address them.</p>\n<p>After you&#39;re finished here, please move on to <a href="/material-ui/migration/v5-component-changes/">Breaking changes in v5 part two: components</a> to continue the migration process.</p>\n<aside class="MuiCallout-root MuiCallout-warning"><p>Breaking changes that are handled by codemods are denoted by a \u2705 emoji in the table of contents on the right side of the screen.</p>\n<p>If you have already followed the instructions in the main migration guide and run the codemods, then you should not need to take any further action on these items.</p>\n<p>All other changes must be handled manually.</p>\n\n</aside><h2 id="migrate-theme-styleoverrides-to-emotion">Migrate theme styleOverrides to Emotion<a aria-labelledby="migrate-theme-styleoverrides-to-emotion" class="anchor-link-style" href="#migrate-theme-styleoverrides-to-emotion" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Although your style overrides defined in the theme may partially work, there is an important difference regarding how the nested elements are styled.</p>\n<p>The <code>$</code> syntax (local rule reference) used with JSS will not work with Emotion.\nYou need to replace those selectors with a valid class selector.</p>\n<h3 id="replace-state-class-names">Replace state class names<a aria-labelledby="replace-state-class-names" class="anchor-link-style" href="#replace-state-class-names" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp;$focused\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          \'&amp;.Mui-focused\': {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="replace-nested-classes-selectors-with-global-class-names">Replace nested classes selectors with global class names<a aria-labelledby="replace-nested-classes-selectors-with-global-class-names" class="anchor-link-style" href="#replace-nested-classes-selectors-with-global-class-names" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp; $notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          \'&amp; .MuiOutlinedInput-notchedOutline\': {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info"><p>For each component, we export a <code>[component]Classes</code> constant that contains all nested classes for that component.</p>\n<p>You can rely on this instead of hardcoding the classes.</p>\n\n</aside><div class="MuiCode-root"><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { outlinedInputClasses } from \'@mui/material/OutlinedInput\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp; $notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          [`&amp; .${outlinedInputClasses.notchedOutline}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Take a look at the complete <a href="/material-ui/customization/how-to-customize/#state-classes">list of global state classnames</a> available.</p>\n<h2 id="ref">ref<a aria-labelledby="ref" class="anchor-link-style" href="#ref" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="refactor-non-ref-forwarding-class-components">Refactor non-ref-forwarding class components<a aria-labelledby="refactor-non-ref-forwarding-class-components" class="anchor-link-style" href="#refactor-non-ref-forwarding-class-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Support for non-ref-forwarding class components in the <code>component</code> prop or as immediate <code>children</code> has been dropped.</p>\n<p>If you were using <code>unstable_createStrictModeTheme</code> or didn&#39;t see any warnings related to <code>findDOMNode</code> in <code>React.StrictMode</code> then you don&#39;t need to take any further action.</p>\n<p>Otherwise check out the <a href="/material-ui/guides/composition/#caveat-with-refs">Caveat with refs</a> section in the Composition guide to find out how to migrate.\nThis change affects almost all components where you&#39;re using the <code>component</code> prop or passing <code>children</code> to components that require <code>children</code> to be elements (e.g. <code>&lt;MenuList&gt;&lt;CustomMenuItem /&gt;&lt;/MenuList&gt;</code>).</p>\n<h3 id="fix-ref-type-specificity">Fix ref type specificity<a aria-labelledby="fix-ref-type-specificity" class="anchor-link-style" href="#fix-ref-type-specificity" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For some components, you may get a type error when passing <code>ref</code>.\nTo avoid the error, you should use a specific element type.\nFor example, <code>Card</code> expects the type of <code>ref</code> to be <code>HTMLDivElement</code>, and <code>ListItem</code> expects its <code>ref</code> type to be <code>HTMLLIElement</code>.</p>\n<p>Here is an example:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Card from \'@mui/material/Card\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import ListItem from \'@mui/material/ListItem\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function SpecificRefType() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const cardRef = React.useRef&lt;HTMLElement>(null);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const cardRef = React.useRef&lt;HTMLDivElement>(null);\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const listItemRef = React.useRef&lt;HTMLElement>(null);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const listItemRef = React.useRef&lt;HTMLLIElement>(null);\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;div>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;Card ref={cardRef}>&lt;/Card>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;ListItem ref={listItemRef}>&lt;/ListItem>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/div>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Here are the specific element types that each component expects:</p>\n<h4>@mui/material</h4><ul>\n<li><a href="/material-ui/api/accordion/">Accordion</a> - <code>HTMLDivElement</code></li>\n<li><a href="/material-ui/api/alert/">Alert</a> - <code>HTMLDivElement</code></li>\n<li><a href="/material-ui/api/avatar/">Avatar</a> - <code>HTMLDivElement</code></li>\n<li><a href="/material-ui/api/button-group/">ButtonGroup</a> - <code>HTMLDivElement</code></li>\n<li><a href="/material-ui/api/card/">Card</a> - <code>HTMLDivElement</code></li>\n<li><a href="/material-ui/api/dialog/">Dialog</a> - <code>HTMLDivElement</code></li>\n<li><a href="/material-ui/api/image-list/">ImageList</a> - <code>HTMLUListElement</code></li>\n<li><a href="/material-ui/api/list/">List</a> - <code>HTMLUListElement</code></li>\n<li><a href="/material-ui/api/tab/">Tab</a> - <code>HTMLDivElement</code></li>\n<li><a href="/material-ui/api/tabs/">Tabs</a> - <code>HTMLDivElement</code></li>\n<li><a href="/material-ui/api/toggle-button/">ToggleButton</a> - <code>HTMLButtonElement</code></li>\n</ul>\n<h4>@mui/lab</h4><ul>\n<li><a href="/material-ui/api/timeline/">Timeline</a> - <code>HTMLUListElement</code></li>\n</ul>\n<h2 id="style-library">Style library<a aria-labelledby="style-library" class="anchor-link-style" href="#style-library" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-adjust-css-injection-order">\u2705 Adjust CSS injection order<a aria-labelledby="%E2%9C%85-adjust-css-injection-order" class="anchor-link-style" href="#%E2%9C%85-adjust-css-injection-order" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The style library used by default in v5 is <a href="https://emotion.sh/docs/introduction">Emotion</a>.</p>\n<p>If you were using JSS for the style overrides of Material UI components\u2014for example, those created by <code>makeStyles</code>\u2014you will need to take care of the CSS injection order.\nJSS <code>&lt;style</code>&gt;&#39; elements need to be injected in the <code>&lt;head&gt;</code> after Emotion <code>&lt;style&gt;</code>&#39; elements.</p>\n<p>To do so, you need to have the <code>StyledEngineProvider</code> with the <code>injectFirst</code> option at the top of your component tree, as shown here:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token punctuation">{</span><span class="token comment">/* Inject Emotion before JSS */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-add-prepend-to-createcache">\u2705 Add prepend to createCache<a aria-labelledby="%E2%9C%85-add-prepend-to-createcache" class="anchor-link-style" href="#%E2%9C%85-add-prepend-to-createcache" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you have a custom cache and are using Emotion to style your app, it will override the cache provided by Material UI.</p>\n<p>To correct the injection order, add the <code>prepend</code> option to <code>createCache</code>, as shown below:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import { CacheProvider } from \'@emotion/react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import createCache from \'@emotion/cache\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const cache = createCache({\n</span><span class="token prefix unchanged"> </span><span class="token line">  key: \'css\',\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  prepend: true,\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function PlainCssPriority() {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;CacheProvider value={cache}>\n</span><span class="token prefix unchanged"> </span><span class="token line">      {/* Your component tree. Now you can override Material UI\'s styles. */}\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/CacheProvider>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info"><p>If you are using styled-components and have a <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>.</p>\n<p>To see how it can be done, take a look at the <a href="https://github.com/mui/material-ui/blob/master/packages/mui-styled-engine-sc/src/StyledEngineProvider/StyledEngineProvider.js"><code>StyledEngineProvider</code> implementation</a> in the <code>@mui/styled-engine-sc</code> package.</p>\n\n</aside><h2 id="theme-structure">Theme structure<a aria-labelledby="theme-structure" class="anchor-link-style" href="#theme-structure" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-add-adaptv4theme-helper">\u2705 Add adaptV4Theme helper<a aria-labelledby="%E2%9C%85-add-adaptv4theme-helper" class="anchor-link-style" href="#%E2%9C%85-add-adaptv4theme-helper" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The structure of the theme has changed in v5. You need to update its shape.\nFor a smoother transition, the <code>adaptV4Theme</code> helper allows you to iteratively upgrade some of the theme changes to the new theme structure.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createMuiTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createTheme, adaptV4Theme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createMuiTheme({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme(adaptV4Theme({\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // v4 theme\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">});\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">}));</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>This adapter only handles the input arguments of <code>createTheme</code>.\nIf you modify the shape of the theme after its creation, you need to migrate the structure manually.</p>\n\n</aside><p>The following changes are supported by the adapter:</p>\n<h3 id="remove-gutters">Remove gutters<a aria-labelledby="remove-gutters" class="anchor-link-style" href="#remove-gutters" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The &quot;gutters&quot; abstraction hasn&#39;t proven to be used frequently enough to be valuable.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">theme.mixins.gutters(),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">paddingLeft: theme.spacing(2),\n</span><span class="token prefix inserted">+</span><span class="token line">paddingRight: theme.spacing(2),\n</span><span class="token prefix inserted">+</span><span class="token line">[theme.breakpoints.up(\'sm\')]: {\n</span><span class="token prefix inserted">+</span><span class="token line">  paddingLeft: theme.spacing(3),\n</span><span class="token prefix inserted">+</span><span class="token line">  paddingRight: theme.spacing(3),\n</span><span class="token prefix inserted">+</span><span class="token line">},</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-remove-px-suffix">\u2705 Remove px suffix<a aria-labelledby="%E2%9C%85-remove-px-suffix" class="anchor-link-style" href="#%E2%9C%85-remove-px-suffix" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>theme.spacing</code> now returns single values with px units by default.\nThis change improves the integration with styled-components &amp; Emotion.</p>\n<p>Before:</p>\n<div class="MuiCode-root"><pre><code class="language-js">theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">16</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>After:</p>\n<div class="MuiCode-root"><pre><code class="language-js">theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'16px\'</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-rename-theme-palette-type">\u2705 Rename theme.palette.type<a aria-labelledby="%E2%9C%85-rename-theme-palette-type" class="anchor-link-style" href="#%E2%9C%85-rename-theme-palette-type" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>theme.palette.type</code> key was renamed to <code>theme.palette.mode</code>, to better follow the &quot;dark mode&quot; terminology that is usually used for describing this feature.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createTheme({ palette: { type: \'dark\' } }),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({ palette: { mode: \'dark\' } }),</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-info-colors">Change default theme.palette.info colors<a aria-labelledby="change-default-theme-palette-info-colors" class="anchor-link-style" href="#change-default-theme-palette-info-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.info</code> colors were changed to pass the AA accessibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> info = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: cyan[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: lightBlue[700], // lightBlue[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: cyan[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: lightBlue[500], // lightBlue[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: cyan[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: lightBlue[900], // lightBlue[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-success-colors">Change default theme.palette.success colors<a aria-labelledby="change-default-theme-palette-success-colors" class="anchor-link-style" href="#change-default-theme-palette-success-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.success</code> colors were changed to pass the AA accessibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> success = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: green[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: green[800], // green[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: green[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: green[500], // green[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: green[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: green[900], // green[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-warning-colors">Change default theme.palette.warning colors<a aria-labelledby="change-default-theme-palette-warning-colors" class="anchor-link-style" href="#change-default-theme-palette-warning-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.warning</code> colors were changed to pass the AA accesibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> warning = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: orange[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: \'#ED6C02\', // orange[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: orange[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: orange[500], // orange[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: orange[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: orange[900], // orange[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="restore-theme-palette-text-hint-key-if-needed">Restore theme.palette.text.hint key (if needed)<a aria-labelledby="restore-theme-palette-text-hint-key-if-needed" class="anchor-link-style" href="#restore-theme-palette-text-hint-key-if-needed" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>theme.palette.text.hint</code> key was unused in Material UI components, and has been removed.\nIf you depend on it, you can add it back:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createTheme(),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({\n</span><span class="token prefix inserted">+</span><span class="token line">  palette: { text: { hint: \'rgba(0, 0, 0, 0.38)\' } },\n</span><span class="token prefix inserted">+</span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="restructure-component-definitions">Restructure component definitions<a aria-labelledby="restructure-component-definitions" class="anchor-link-style" href="#restructure-component-definitions" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The component definitions in the theme were restructured under the <code>components</code> key to make them easier to find.</p>\n<h4>1. props</h4><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  props: {\n</span><span class="token prefix deleted">-</span><span class="token line">    MuiButton: {\n</span><span class="token prefix deleted">-</span><span class="token line">      disableRipple: true,\n</span><span class="token prefix deleted">-</span><span class="token line">    },\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  components: {\n</span><span class="token prefix inserted">+</span><span class="token line">    MuiButton: {\n</span><span class="token prefix inserted">+</span><span class="token line">      defaultProps: {\n</span><span class="token prefix inserted">+</span><span class="token line">        disableRipple: true,\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>2. overrides</h4><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  overrides: {\n</span><span class="token prefix deleted">-</span><span class="token line">    MuiButton: {\n</span><span class="token prefix deleted">-</span><span class="token line">      root: { padding: 0 },\n</span><span class="token prefix deleted">-</span><span class="token line">    },\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  components: {\n</span><span class="token prefix inserted">+</span><span class="token line">    MuiButton: {\n</span><span class="token prefix inserted">+</span><span class="token line">      styleOverrides: {\n</span><span class="token prefix inserted">+</span><span class="token line">        root: { padding: 0 },\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-styles">@mui/styles<a aria-labelledby="mui-styles" class="anchor-link-style" href="#mui-styles" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="update-themeprovider-import">Update ThemeProvider import<a aria-labelledby="update-themeprovider-import" class="anchor-link-style" href="#update-themeprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using the utilities from <code>@mui/styles</code> together with the <code>@mui/material</code>, you should replace the use of <code>ThemeProvider</code> from <code>@mui/styles</code> with the one exported from <code>@mui/material/styles</code>.</p>\n<p>This way, the <code>theme</code> provided in the context will be available in both the styling utilities exported from <code>@mui/styles</code>, like <code>makeStyles</code>, <code>withStyles</code>, etc., along with the Material UI components.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { ThemeProvider } from \'@mui/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ThemeProvider } from \'@mui/material/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available in the utilities coming from <code>@mui/styles</code>.</p>\n<h3 id="%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript">\u2705 Add module augmentation for DefaultTheme (TypeScript)<a aria-labelledby="%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript" class="anchor-link-style" href="#%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>@mui/styles</code> package is no longer part of <code>@mui/material/styles</code>.</p>\n<p>If you are using <code>@mui/styles</code> together with <code>@mui/material</code> you need to add a module augmentation for the <code>DefaultTheme</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token comment">// in the file where you are creating the theme (invoking the function `createTheme()`)</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Theme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\ndeclare module <span class="token string">\'@mui/styles\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">DefaultTheme</span> <span class="token keyword">extends</span> <span class="token class-name">Theme</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-material-colors">@mui/material/colors<a aria-labelledby="mui-material-colors" class="anchor-link-style" href="#mui-material-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-change-color-imports">\u2705 Change color imports<a aria-labelledby="%E2%9C%85-change-color-imports" class="anchor-link-style" href="#%E2%9C%85-change-color-imports" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Nested imports of more than one level are private. For example, you can no longer import <code>red</code> from <code>@mui/material/colors/red</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import red from \'@mui/material/colors/red\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { red } from \'@mui/material/colors\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-material-styles">@mui/material/styles<a aria-labelledby="mui-material-styles" class="anchor-link-style" href="#mui-material-styles" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-rename-fade-to-alpha">\u2705 Rename fade to alpha<a aria-labelledby="%E2%9C%85-rename-fade-to-alpha" class="anchor-link-style" href="#%E2%9C%85-rename-fade-to-alpha" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>fade</code> was renamed to <code>alpha</code> to better describe its functionality.</p>\n<p>The previous name caused confusion when the input color already had an alpha value. The helper overrides the alpha value of the color.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { fade } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { alpha } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const classes = makeStyles(theme => ({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }));</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-createstyles-import">\u2705 Update createStyles import<a aria-labelledby="%E2%9C%85-update-createstyles-import" class="anchor-link-style" href="#%E2%9C%85-update-createstyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createStyles</code> function from <code>@mui/material/styles</code> was moved to the one exported from <code>@mui/styles</code>. It is necessary for removing the dependency on <code>@mui/styles</code> in the Material UI npm package.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createStyles } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-creategenerateclassname-import">\u2705 Update createGenerateClassName import<a aria-labelledby="%E2%9C%85-update-creategenerateclassname-import" class="anchor-link-style" href="#%E2%9C%85-update-creategenerateclassname-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createGenerateClassName</code> function is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createGenerateClassName } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createGenerateClassName } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>To generate custom class names without using <code>@mui/styles</code>, check out <a href="/material-ui/experimental-api/classname-generator/">ClassName Generator</a> for more details.</p>\n<h3 id="%E2%9C%85-rename-createmuitheme">\u2705 Rename createMuiTheme<a aria-labelledby="%E2%9C%85-rename-createmuitheme" class="anchor-link-style" href="#%E2%9C%85-rename-createmuitheme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The function <code>createMuiTheme</code> was renamed to <code>createTheme</code> to make it more intuitive to use with <code>ThemeProvider</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createMuiTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createMuiTheme({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-muithemeprovider-import">\u2705 Update MuiThemeProvider import<a aria-labelledby="%E2%9C%85-update-muithemeprovider-import" class="anchor-link-style" href="#%E2%9C%85-update-muithemeprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>MuiThemeProvider</code> component is no longer exported from <code>@mui/material/styles</code>. Use <code>ThemeProvider</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { MuiThemeProvider } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ThemeProvider } from \'@mui/material/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-jsspreset-import">\u2705 Update jssPreset import<a aria-labelledby="%E2%9C%85-update-jsspreset-import" class="anchor-link-style" href="#%E2%9C%85-update-jsspreset-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>jssPreset</code> object is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { jssPreset } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { jssPreset } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-makestyles-import">\u2705 Update <code>makeStyles</code> import<a aria-labelledby="%E2%9C%85-update-makestyles-import" class="anchor-link-style" href="#%E2%9C%85-update-makestyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>makeStyles</code> JSS utility is no longer exported from <code>@mui/material/styles</code>.\nYou can use <code>@mui/styles/makeStyles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended that you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { makeStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { makeStyles } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const useStyles = makeStyles((theme) => ({\n</span><span class="token prefix unchanged"> </span><span class="token line">   background: theme.palette.primary.main,\n</span><span class="token prefix unchanged"> </span><span class="token line"> }));\n</span><span class="token prefix unchanged"> </span><span class="token line"> function Component() {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const classes = useStyles();\n</span><span class="token prefix unchanged"> </span><span class="token line">   return &lt;div className={classes.root} />\n</span><span class="token prefix unchanged"> </span><span class="token line"> }\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // In the root of your app\n</span><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;Component />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;Component {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-serverstylesheets-import">\u2705 Update ServerStyleSheets import<a aria-labelledby="%E2%9C%85-update-serverstylesheets-import" class="anchor-link-style" href="#%E2%9C%85-update-serverstylesheets-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>ServerStyleSheets</code> component is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { ServerStyleSheets } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ServerStyleSheets } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="styled">styled<a aria-labelledby="styled" class="anchor-link-style" href="#styled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>styled</code> JSS utility is no longer exported from <code>@mui/material/styles</code>. You can use the one exported from <code>@mui/styles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { styled } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { styled } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = styled(\'div\')(({ theme }) => ({ background: theme.palette.primary.main }));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;MyComponent {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-stylesprovider-import">\u2705 Update StylesProvider import<a aria-labelledby="%E2%9C%85-update-stylesprovider-import" class="anchor-link-style" href="#%E2%9C%85-update-stylesprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>StylesProvider</code> component is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { StylesProvider } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { StylesProvider } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-usethemevariants-import">\u2705 Update useThemeVariants import<a aria-labelledby="%E2%9C%85-update-usethemevariants-import" class="anchor-link-style" href="#%E2%9C%85-update-usethemevariants-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>useThemeVariants</code> hook is no longer exported from <code>@mui/material/styles</code>.\nYou should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { useThemeVariants } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { useThemeVariants } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-withstyles-import">\u2705 Update withStyles import<a aria-labelledby="%E2%9C%85-update-withstyles-import" class="anchor-link-style" href="#%E2%9C%85-update-withstyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>withStyles</code> JSS utility is no longer exported from <code>@mui/material/styles</code>.\nYou can use <code>@mui/styles/withStyles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, you should use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { withStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { withStyles } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const defaultTheme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withStyles((props) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const { classes, className, ...other } = props;\n</span><span class="token prefix unchanged"> </span><span class="token line">   return &lt;div className={clsx(className, classes.root)} {...other} />\n</span><span class="token prefix unchanged"> </span><span class="token line"> })(({ theme }) => ({ root: { background: theme.palette.primary.main }}));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={defaultTheme}>&lt;MyComponent />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-replace-innerref-with-ref">\u2705 Replace innerRef with ref<a aria-labelledby="%E2%9C%85-replace-innerref-with-ref" class="anchor-link-style" href="#%E2%9C%85-replace-innerref-with-ref" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Replace the <code>innerRef</code> prop with the <code>ref</code> prop. Refs are now automatically forwarded to the inner component.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line"> import { withStyles } from \'@mui/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withStyles({\n</span><span class="token prefix unchanged"> </span><span class="token line">   root: {\n</span><span class="token prefix unchanged"> </span><span class="token line">     backgroundColor: \'red\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   },\n</span><span class="token prefix unchanged"> </span><span class="token line"> })(({ classes }) => &lt;div className={classes.root} />);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function MyOtherComponent(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const ref = React.useRef();\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent innerRef={ref} />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;MyComponent ref={ref} />;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="update-withtheme-import">Update withTheme import<a aria-labelledby="update-withtheme-import" class="anchor-link-style" href="#update-withtheme-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>withTheme</code> HOC utility has been removed from the <code>@mui/material/styles</code> package. You can use <code>@mui/styles/withTheme</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { withTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { withTheme } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withTheme(({ theme }) => &lt;div>{props.theme.direction}&lt;/div>);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;MyComponent {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-remove-withwidth">\u2705 Remove withWidth<a aria-labelledby="%E2%9C%85-remove-withwidth" class="anchor-link-style" href="#%E2%9C%85-remove-withwidth" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>This HOC was removed. If you need this feature, you can try <a href="/material-ui/react-use-media-query/#migrating-from-withwidth">the alternative that uses the <code>useMediaQuery</code> hook</a>.</p>\n<h2 id="mui-icons-material">@mui/icons-material<a aria-labelledby="mui-icons-material" class="anchor-link-style" href="#mui-icons-material" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="reduce-github-icon-size">Reduce GitHub icon size<a aria-labelledby="reduce-github-icon-size" class="anchor-link-style" href="#reduce-github-icon-size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The GitHub icon was reduced in size from 24px to 22px wide to match the size of the other icons.</p>\n<h2 id="material-ui-pickers">@material-ui/pickers<a aria-labelledby="material-ui-pickers" class="anchor-link-style" href="#material-ui-pickers" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>We have a <a href="/material-ui/guides/pickers-migration/">dedicated page</a> for migrating <code>@material-ui/pickers</code> to v5.</p>\n<h2 id="system">System<a aria-labelledby="system" class="anchor-link-style" href="#system" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-rename-gap-props">\u2705 Rename gap props<a aria-labelledby="%E2%9C%85-rename-gap-props" class="anchor-link-style" href="#%E2%9C%85-rename-gap-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The following system functions and properties were renamed because they are considered deprecated CSS:</p>\n<ul>\n<li><code>gridGap</code> becomes <code>gap</code></li>\n<li><code>gridRowGap</code> becomes <code>rowGap</code></li>\n<li><code>gridColumnGap</code> becomes <code>columnGap</code></li>\n</ul>\n<h3 id="%E2%9C%85-add-spacing-units-to-gap-props">\u2705 Add spacing units to gap props<a aria-labelledby="%E2%9C%85-add-spacing-units-to-gap-props" class="anchor-link-style" href="#%E2%9C%85-add-spacing-units-to-gap-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use a spacing unit in <code>gap</code>, <code>rowGap</code>, and <code>columnGap</code>. If you were using a number previously, you need to mention the px to bypass the new transformation with <code>theme.spacing</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &lt;Box\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  gap={2}\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  gap="2px"\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Replace <code>css</code> prop with <code>sx</code> to avoid collision with styled-components and Emotion&#39;s <code>css</code> prop.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">&lt;Box css={{ color: \'primary.main\' }} />\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">&lt;Box sx={{ color: \'primary.main\' }} /></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>The system grid function was not documented in v4.</p>\n\n</aside>'],toc:[{text:"Material UI v5 migration",level:2,hash:"material-ui-v5-migration",children:[]},{text:"Breaking changes, part one",level:2,hash:"breaking-changes-part-one",children:[]},{text:"Migrate theme styleOverrides to Emotion",level:2,hash:"migrate-theme-styleoverrides-to-emotion",children:[{text:"Replace state class names",level:3,hash:"replace-state-class-names"},{text:"Replace nested classes selectors with global class names",level:3,hash:"replace-nested-classes-selectors-with-global-class-names"}]},{text:"ref",level:2,hash:"ref",children:[{text:"Refactor non-ref-forwarding class components",level:3,hash:"refactor-non-ref-forwarding-class-components"},{text:"Fix ref type specificity",level:3,hash:"fix-ref-type-specificity"}]},{text:"Style library",level:2,hash:"style-library",children:[{text:"\u2705 Adjust CSS injection order",level:3,hash:"%E2%9C%85-adjust-css-injection-order"},{text:"\u2705 Add prepend to createCache",level:3,hash:"%E2%9C%85-add-prepend-to-createcache"}]},{text:"Theme structure",level:2,hash:"theme-structure",children:[{text:"\u2705 Add adaptV4Theme helper",level:3,hash:"%E2%9C%85-add-adaptv4theme-helper"},{text:"Remove gutters",level:3,hash:"remove-gutters"},{text:"\u2705 Remove px suffix",level:3,hash:"%E2%9C%85-remove-px-suffix"},{text:"\u2705 Rename theme.palette.type",level:3,hash:"%E2%9C%85-rename-theme-palette-type"},{text:"Change default theme.palette.info colors",level:3,hash:"change-default-theme-palette-info-colors"},{text:"Change default theme.palette.success colors",level:3,hash:"change-default-theme-palette-success-colors"},{text:"Change default theme.palette.warning colors",level:3,hash:"change-default-theme-palette-warning-colors"},{text:"Restore theme.palette.text.hint key (if needed)",level:3,hash:"restore-theme-palette-text-hint-key-if-needed"},{text:"Restructure component definitions",level:3,hash:"restructure-component-definitions"}]},{text:"@mui/styles",level:2,hash:"mui-styles",children:[{text:"Update ThemeProvider import",level:3,hash:"update-themeprovider-import"},{text:"\u2705 Add module augmentation for DefaultTheme (TypeScript)",level:3,hash:"%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript"}]},{text:"@mui/material/colors",level:2,hash:"mui-material-colors",children:[{text:"\u2705 Change color imports",level:3,hash:"%E2%9C%85-change-color-imports"}]},{text:"@mui/material/styles",level:2,hash:"mui-material-styles",children:[{text:"\u2705 Rename fade to alpha",level:3,hash:"%E2%9C%85-rename-fade-to-alpha"},{text:"\u2705 Update createStyles import",level:3,hash:"%E2%9C%85-update-createstyles-import"},{text:"\u2705 Update createGenerateClassName import",level:3,hash:"%E2%9C%85-update-creategenerateclassname-import"},{text:"\u2705 Rename createMuiTheme",level:3,hash:"%E2%9C%85-rename-createmuitheme"},{text:"\u2705 Update MuiThemeProvider import",level:3,hash:"%E2%9C%85-update-muithemeprovider-import"},{text:"\u2705 Update jssPreset import",level:3,hash:"%E2%9C%85-update-jsspreset-import"},{text:"\u2705 Update makeStyles import",level:3,hash:"%E2%9C%85-update-makestyles-import"},{text:"\u2705 Update ServerStyleSheets import",level:3,hash:"%E2%9C%85-update-serverstylesheets-import"},{text:"styled",level:3,hash:"styled"},{text:"\u2705 Update StylesProvider import",level:3,hash:"%E2%9C%85-update-stylesprovider-import"},{text:"\u2705 Update useThemeVariants import",level:3,hash:"%E2%9C%85-update-usethemevariants-import"},{text:"\u2705 Update withStyles import",level:3,hash:"%E2%9C%85-update-withstyles-import"},{text:"\u2705 Replace innerRef with ref",level:3,hash:"%E2%9C%85-replace-innerref-with-ref"},{text:"Update withTheme import",level:3,hash:"update-withtheme-import"},{text:"\u2705 Remove withWidth",level:3,hash:"%E2%9C%85-remove-withwidth"}]},{text:"@mui/icons-material",level:2,hash:"mui-icons-material",children:[{text:"Reduce GitHub icon size",level:3,hash:"reduce-github-icon-size"}]},{text:"@material-ui/pickers",level:2,hash:"material-ui-pickers",children:[]},{text:"System",level:2,hash:"system",children:[{text:"\u2705 Rename gap props",level:3,hash:"%E2%9C%85-rename-gap-props"},{text:"\u2705 Add spacing units to gap props",level:3,hash:"%E2%9C%85-add-spacing-units-to-gap-props"}]}],title:"Breaking changes in v5, part one: styles and themes",headers:{components:[]}},pt:{description:"This is a reference guide to all of the breaking changes introduced in Material v5, and how to handle them when migrating from v4. This part covers changes to styling and theming.",location:"/docs/data/material/migration/migration-v4/v5-style-changes-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Breaking changes in v5, part one: styles and themes</h1><p class="description">This is a reference guide to all of the breaking changes introduced in Material v5, and how to handle them when migrating from v4. This part covers changes to styling and theming.</p>\n\n<h2 id="material-ui-v5-migration">Material UI v5 migration<a aria-labelledby="material-ui-v5-migration" class="anchor-link-style" href="#material-ui-v5-migration" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ol>\n<li><a href="/pt/material-ui/migration/migration-v4/">Getting started</a></li>\n<li>Breaking changes part one: style and theme \ud83d\udc48 <em>you are here</em></li>\n<li><a href="/pt/material-ui/migration/v5-component-changes/">Breaking changes part two: components</a></li>\n<li><a href="/pt/material-ui/migration/migrating-from-jss/">Migrating from JSS</a></li>\n<li><a href="/pt/material-ui/migration/troubleshooting/">Troubleshooting</a></li>\n</ol>\n<h2 id="breaking-changes-part-one">Breaking changes, part one<a aria-labelledby="breaking-changes-part-one" class="anchor-link-style" href="#breaking-changes-part-one" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Material UI v5 introduces a number of breaking changes from v4. Many of these changes can be resolved automatically using <a href="/pt/material-ui/migration/migration-v4/#run-codemods">the codemods</a> described in the <a href="/pt/material-ui/migration/migration-v4/">main migration guide</a>.</p>\n<p>The following document lists all breaking changes related to styles and themes in v5 and how to address them.</p>\n<p>After you&#39;re finished here, please move on to <a href="/pt/material-ui/migration/v5-component-changes/">Breaking changes in v5 part two: components</a> to continue the migration process.</p>\n<aside class="MuiCallout-root MuiCallout-warning"><p>Breaking changes that are handled by codemods are denoted by a \u2705 emoji in the table of contents on the right side of the screen.</p>\n<p>If you have already followed the instructions in the main migration guide and run the codemods, then you should not need to take any further action on these items.</p>\n<p>All other changes must be handled manually.</p>\n\n</aside><h2 id="migrate-theme-styleoverrides-to-emotion">Migrate theme styleOverrides to Emotion<a aria-labelledby="migrate-theme-styleoverrides-to-emotion" class="anchor-link-style" href="#migrate-theme-styleoverrides-to-emotion" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Although your style overrides defined in the theme may partially work, there is an important difference regarding how the nested elements are styled.</p>\n<p>The <code>$</code> syntax (local rule reference) used with JSS will not work with Emotion. You need to replace those selectors with a valid class selector.</p>\n<h3 id="replace-state-class-names">Replace state class names<a aria-labelledby="replace-state-class-names" class="anchor-link-style" href="#replace-state-class-names" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp;$focused\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          \'&amp;.Mui-focused\': {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="replace-nested-classes-selectors-with-global-class-names">Replace nested classes selectors with global class names<a aria-labelledby="replace-nested-classes-selectors-with-global-class-names" class="anchor-link-style" href="#replace-nested-classes-selectors-with-global-class-names" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><div class="MuiCode-root"><pre><code class="language-diff">const theme = createTheme({\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">   MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">     styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">       root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">         \'&amp; $notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">         \'&amp; .MuiOutlinedInput-notchedOutline\': {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">           borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">         }\n</span><span class="token prefix unchanged"> </span><span class="token line">       }\n</span><span class="token prefix unchanged"> </span><span class="token line">     }\n</span><span class="token prefix unchanged"> </span><span class="token line">   }\n</span><span class="token prefix unchanged"> </span><span class="token line"> }\n</span></span>});\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info"><p>For each component, we export a <code>[component]Classes</code> constant that contains all nested classes for that component.</p>\n<p>You can rely on this instead of hardcoding the classes.</p>\n\n</aside><div class="MuiCode-root"><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { outlinedInputClasses } from \'@mui/material/OutlinedInput\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp; $notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          [`&amp; .${outlinedInputClasses.notchedOutline}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Take a look at the complete <a href="/pt/material-ui/customization/how-to-customize/#state-classes">list of global state classnames</a> available.</p>\n<h2 id="ref">ref<a aria-labelledby="ref" class="anchor-link-style" href="#ref" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="refactor-non-ref-forwarding-class-components">Refactor non-ref-forwarding class components<a aria-labelledby="refactor-non-ref-forwarding-class-components" class="anchor-link-style" href="#refactor-non-ref-forwarding-class-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Support for non-ref-forwarding class components in the <code>component</code> prop or as immediate <code>children</code> has been dropped.</p>\n<p>If you were using <code>unstable_createStrictModeTheme</code> or didn&#39;t see any warnings related to <code>findDOMNode</code> in <code>React.StrictMode</code> then you don&#39;t need to take any further action.</p>\n<p>Otherwise check out the <a href="/pt/material-ui/guides/composition/#caveat-with-refs">Caveat with refs</a> section in the Composition guide to find out how to migrate. This change affects almost all components where you&#39;re using the <code>component</code> prop or passing <code>children</code> to components that require <code>children</code> to be elements (e.g. <code>&lt;MenuList&gt;&lt;CustomMenuItem /&gt;&lt;/MenuList&gt;</code>).</p>\n<h3 id="fix-ref-type-specificity">Fix ref type specificity<a aria-labelledby="fix-ref-type-specificity" class="anchor-link-style" href="#fix-ref-type-specificity" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For some components, you may get a type error when passing <code>ref</code>. To avoid the error, you should use a specific element type. For example, <code>Card</code> expects the type of <code>ref</code> to be <code>HTMLDivElement</code>, and <code>ListItem</code> expects its <code>ref</code> type to be <code>HTMLLIElement</code>.</p>\n<p>Here is an example:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Card from \'@mui/material/Card\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import ListItem from \'@mui/material/ListItem\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function SpecificRefType() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const cardRef = React.useRef&lt;HTMLElement>(null);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const cardRef = React.useRef&lt;HTMLDivElement>(null);\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const listItemRef = React.useRef&lt;HTMLElement>(null);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const listItemRef = React.useRef&lt;HTMLLIElement>(null);\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;div>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;Card ref={cardRef}>&lt;/Card>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;ListItem ref={listItemRef}>&lt;/ListItem>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/div>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Here are the specific element types that each component expects:</p>\n<h4>@mui/material</h4><ul>\n<li><a href="/pt/material-ui/api/accordion/">Accordion</a> - <code>HTMLDivElement</code></li>\n<li><a href="/pt/material-ui/api/alert/">Alert</a> - <code>HTMLDivElement</code></li>\n<li><a href="/pt/material-ui/api/avatar/">Avatar</a> - <code>HTMLDivElement</code></li>\n<li><a href="/pt/material-ui/api/button-group/">ButtonGroup</a> - <code>HTMLDivElement</code></li>\n<li><a href="/pt/material-ui/api/card/">Card</a> - <code>HTMLDivElement</code></li>\n<li><a href="/pt/material-ui/api/dialog/">Dialog</a> - <code>HTMLDivElement</code></li>\n<li><a href="/pt/material-ui/api/image-list/">ImageList</a> - <code>HTMLUListElement</code></li>\n<li><a href="/pt/material-ui/api/list/">List</a> - <code>HTMLUListElement</code></li>\n<li><a href="/pt/material-ui/api/tab/">Tab</a> - <code>HTMLDivElement</code></li>\n<li><a href="/pt/material-ui/api/tabs/">Tabs</a> - <code>HTMLDivElement</code></li>\n<li><a href="/pt/material-ui/api/toggle-button/">ToggleButton</a> - <code>HTMLButtonElement</code></li>\n</ul>\n<h4>@mui/lab</h4><ul>\n<li><a href="/pt/material-ui/api/timeline/">Timeline</a> - <code>HTMLUListElement</code></li>\n</ul>\n<h2 id="style-library">Style library<a aria-labelledby="style-library" class="anchor-link-style" href="#style-library" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-adjust-css-injection-order">\u2705 Adjust CSS injection order<a aria-labelledby="%E2%9C%85-adjust-css-injection-order" class="anchor-link-style" href="#%E2%9C%85-adjust-css-injection-order" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The style library used by default in v5 is <a href="https://emotion.sh/docs/introduction">Emotion</a>.</p>\n<p>If you were using JSS for the style overrides of Material UI components\u2014for example, those created by <code>makeStyles</code>\u2014you will need to take care of the CSS injection order. JSS <code>&lt;style</code>&gt;&#39; elements need to be injected in the <code>&lt;head&gt;</code> after Emotion <code>&lt;style&gt;</code>&#39; elements.</p>\n<p>To do so, you need to have the <code>StyledEngineProvider</code> with the <code>injectFirst</code> option at the top of your component tree, as shown here:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token punctuation">{</span><span class="token comment">/* Inject Emotion before JSS */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-add-prepend-to-createcache">\u2705 Add prepend to createCache<a aria-labelledby="%E2%9C%85-add-prepend-to-createcache" class="anchor-link-style" href="#%E2%9C%85-add-prepend-to-createcache" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you have a custom cache and are using Emotion to style your app, it will override the cache provided by Material UI.</p>\n<p>To correct the injection order, add the <code>prepend</code> option to <code>createCache</code>, as shown below:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import { CacheProvider } from \'@emotion/react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import createCache from \'@emotion/cache\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const cache = createCache({\n</span><span class="token prefix unchanged"> </span><span class="token line">  key: \'css\',\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  prepend: true,\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function PlainCssPriority() {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;CacheProvider value={cache}>\n</span><span class="token prefix unchanged"> </span><span class="token line">      {/* Your component tree. Now you can override Material UI\'s styles. */}\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/CacheProvider>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info"><p>If you are using styled-components and have a <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>.</p>\n<p>To see how it can be done, take a look at the <a href="https://github.com/mui/material-ui/blob/master/packages/mui-styled-engine-sc/src/StyledEngineProvider/StyledEngineProvider.js"><code>StyledEngineProvider</code> implementation</a> in the <code>@mui/styled-engine-sc</code> package.</p>\n\n</aside><h2 id="theme-structure">Theme structure<a aria-labelledby="theme-structure" class="anchor-link-style" href="#theme-structure" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-add-adaptv4theme-helper">\u2705 Add adaptV4Theme helper<a aria-labelledby="%E2%9C%85-add-adaptv4theme-helper" class="anchor-link-style" href="#%E2%9C%85-add-adaptv4theme-helper" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The structure of the theme has changed in v5. You need to update its shape. For a smoother transition, the <code>adaptV4Theme</code> helper allows you to iteratively upgrade some of the theme changes to the new theme structure.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createMuiTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createTheme, adaptV4Theme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createMuiTheme({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme(adaptV4Theme({\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // v4 theme\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">});\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">}));</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>This adapter only handles the input arguments of <code>createTheme</code>. If you modify the shape of the theme after its creation, you need to migrate the structure manually.</p>\n\n</aside><p>The following changes are supported by the adapter:</p>\n<h3 id="remove-gutters">Remove gutters<a aria-labelledby="remove-gutters" class="anchor-link-style" href="#remove-gutters" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The &quot;gutters&quot; abstraction hasn&#39;t proven to be used frequently enough to be valuable.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">theme.mixins.gutters(),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">paddingLeft: theme.spacing(2),\n</span><span class="token prefix inserted">+</span><span class="token line">paddingRight: theme.spacing(2),\n</span><span class="token prefix inserted">+</span><span class="token line">[theme.breakpoints.up(\'sm\')]: {\n</span><span class="token prefix inserted">+</span><span class="token line">  paddingLeft: theme.spacing(3),\n</span><span class="token prefix inserted">+</span><span class="token line">  paddingRight: theme.spacing(3),\n</span><span class="token prefix inserted">+</span><span class="token line">},</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-remove-px-suffix">\u2705 Remove px suffix<a aria-labelledby="%E2%9C%85-remove-px-suffix" class="anchor-link-style" href="#%E2%9C%85-remove-px-suffix" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>theme.spacing</code> now returns single values with px units by default. This change improves the integration with styled-components &amp; Emotion.</p>\n<p>Before:</p>\n<div class="MuiCode-root"><pre><code class="language-js">theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">16</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>After:</p>\n<div class="MuiCode-root"><pre><code class="language-js">theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'16px\'</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-rename-theme-palette-type">\u2705 Rename theme.palette.type<a aria-labelledby="%E2%9C%85-rename-theme-palette-type" class="anchor-link-style" href="#%E2%9C%85-rename-theme-palette-type" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>theme.palette.type</code> key was renamed to <code>theme.palette.mode</code>, to better follow the &quot;dark mode&quot; terminology that is usually used for describing this feature.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createTheme({palette: { type: \'dark\' }}),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({palette: { mode: \'dark\' }}),</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-info-colors">Change default theme.palette.info colors<a aria-labelledby="change-default-theme-palette-info-colors" class="anchor-link-style" href="#change-default-theme-palette-info-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.info</code> colors were changed to pass the AA accessibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> info = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: cyan[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: lightBlue[700], // lightBlue[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: cyan[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: lightBlue[500], // lightBlue[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: cyan[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: lightBlue[900], // lightBlue[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-success-colors">Change default theme.palette.success colors<a aria-labelledby="change-default-theme-palette-success-colors" class="anchor-link-style" href="#change-default-theme-palette-success-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.success</code> colors were changed to pass the AA accessibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> success = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: green[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: green[800], // green[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: green[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: green[500], // green[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: green[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: green[900], // green[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-warning-colors">Change default theme.palette.warning colors<a aria-labelledby="change-default-theme-palette-warning-colors" class="anchor-link-style" href="#change-default-theme-palette-warning-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.warning</code> colors were changed to pass the AA accesibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> warning = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: orange[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: \'#ED6C02\', // orange[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: orange[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: orange[500], // orange[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: orange[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: orange[900], // orange[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="restore-theme-palette-text-hint-key-if-needed">Restore theme.palette.text.hint key (if needed)<a aria-labelledby="restore-theme-palette-text-hint-key-if-needed" class="anchor-link-style" href="#restore-theme-palette-text-hint-key-if-needed" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>theme.palette.text.hint</code> key was unused in Material UI components, and has been removed. If you depend on it, you can add it back:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createTheme(),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({\n</span><span class="token prefix inserted">+</span><span class="token line">  palette: { text: { hint: \'rgba(0, 0, 0, 0.38)\' } },\n</span><span class="token prefix inserted">+</span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="restructure-component-definitions">Restructure component definitions<a aria-labelledby="restructure-component-definitions" class="anchor-link-style" href="#restructure-component-definitions" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The component definitions in the theme were restructured under the <code>components</code> key to make them easier to find.</p>\n<h4>1. props</h4><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  props: {\n</span><span class="token prefix deleted">-</span><span class="token line">    MuiButton: {\n</span><span class="token prefix deleted">-</span><span class="token line">      disableRipple: true,\n</span><span class="token prefix deleted">-</span><span class="token line">    },\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  components: {\n</span><span class="token prefix inserted">+</span><span class="token line">    MuiButton: {\n</span><span class="token prefix inserted">+</span><span class="token line">      defaultProps: {\n</span><span class="token prefix inserted">+</span><span class="token line">        disableRipple: true,\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>2. overrides</h4><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  overrides: {\n</span><span class="token prefix deleted">-</span><span class="token line">    MuiButton: {\n</span><span class="token prefix deleted">-</span><span class="token line">      root: { padding: 0 },\n</span><span class="token prefix deleted">-</span><span class="token line">    },\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  components: {\n</span><span class="token prefix inserted">+</span><span class="token line">    MuiButton: {\n</span><span class="token prefix inserted">+</span><span class="token line">      styleOverrides: {\n</span><span class="token prefix inserted">+</span><span class="token line">        root: { padding: 0 },\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-styles">@mui/styles<a aria-labelledby="mui-styles" class="anchor-link-style" href="#mui-styles" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="update-themeprovider-import">Update ThemeProvider import<a aria-labelledby="update-themeprovider-import" class="anchor-link-style" href="#update-themeprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using the utilities from <code>@mui/styles</code> together with the <code>@mui/material</code>, you should replace the use of <code>ThemeProvider</code> from <code>@mui/styles</code> with the one exported from <code>@mui/material/styles</code>.</p>\n<p>This way, the <code>theme</code> provided in the context will be available in both the styling utilities exported from <code>@mui/styles</code>, like <code>makeStyles</code>, <code>withStyles</code>, etc., along with the Material UI components.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { ThemeProvider } from \'@mui/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ThemeProvider } from \'@mui/material/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available in the utilities coming from <code>@mui/styles</code>.</p>\n<h3 id="%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript">\u2705 Add module augmentation for DefaultTheme (TypeScript)<a aria-labelledby="%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript" class="anchor-link-style" href="#%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>@mui/styles</code> package is no longer part of <code>@mui/material/styles</code>.</p>\n<p>If you are using <code>@mui/styles</code> together with <code>@mui/material</code> you need to add a module augmentation for the <code>DefaultTheme</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token comment">// in the file where you are creating the theme (invoking the function `createTheme()`)</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Theme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\ndeclare module <span class="token string">\'@mui/styles\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">DefaultTheme</span> <span class="token keyword">extends</span> <span class="token class-name">Theme</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-material-colors">@mui/material/colors<a aria-labelledby="mui-material-colors" class="anchor-link-style" href="#mui-material-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-change-color-imports">\u2705 Change color imports<a aria-labelledby="%E2%9C%85-change-color-imports" class="anchor-link-style" href="#%E2%9C%85-change-color-imports" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Nested imports of more than one level are private. For example, you can no longer import <code>red</code> from <code>@mui/material/colors/red</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import red from \'@mui/material/colors/red\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { red } from \'@mui/material/colors\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-material-styles">@mui/material/styles<a aria-labelledby="mui-material-styles" class="anchor-link-style" href="#mui-material-styles" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-rename-fade-to-alpha">\u2705 Rename fade to alpha<a aria-labelledby="%E2%9C%85-rename-fade-to-alpha" class="anchor-link-style" href="#%E2%9C%85-rename-fade-to-alpha" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>fade</code> was renamed to <code>alpha</code> to better describe its functionality.</p>\n<p>The previous name caused confusion when the input color already had an alpha value. The helper overrides the alpha value of the color.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { fade } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { alpha } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const classes = makeStyles(theme => ({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }));</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-createstyles-import">\u2705 Update createStyles import<a aria-labelledby="%E2%9C%85-update-createstyles-import" class="anchor-link-style" href="#%E2%9C%85-update-createstyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createStyles</code> function from <code>@mui/material/styles</code> was moved to the one exported from <code>@mui/styles</code>. It is necessary for removing the dependency on <code>@mui/styles</code> in the Material UI npm package.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createStyles } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-creategenerateclassname-import">\u2705 Update createGenerateClassName import<a aria-labelledby="%E2%9C%85-update-creategenerateclassname-import" class="anchor-link-style" href="#%E2%9C%85-update-creategenerateclassname-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createGenerateClassName</code> function is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createGenerateClassName } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createGenerateClassName } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>To generate custom class names without using <code>@mui/styles</code>, check out <a href="/pt/material-ui/experimental-api/classname-generator/">ClassName Generator</a> for more details.</p>\n<h3 id="%E2%9C%85-rename-createmuitheme">\u2705 Rename createMuiTheme<a aria-labelledby="%E2%9C%85-rename-createmuitheme" class="anchor-link-style" href="#%E2%9C%85-rename-createmuitheme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The function <code>createMuiTheme</code> was renamed to <code>createTheme</code> to make it more intuitive to use with <code>ThemeProvider</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createMuiTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createMuiTheme({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-muithemeprovider-import">\u2705 Update MuiThemeProvider import<a aria-labelledby="%E2%9C%85-update-muithemeprovider-import" class="anchor-link-style" href="#%E2%9C%85-update-muithemeprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>MuiThemeProvider</code> component is no longer exported from <code>@mui/material/styles</code>. Use <code>ThemeProvider</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { MuiThemeProvider } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ThemeProvider } from \'@mui/material/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-jsspreset-import">\u2705 Update jssPreset import<a aria-labelledby="%E2%9C%85-update-jsspreset-import" class="anchor-link-style" href="#%E2%9C%85-update-jsspreset-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>jssPreset</code> object is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { jssPreset } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { jssPreset } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-makestyles-import">\u2705 Update <code>makeStyles</code> import<a aria-labelledby="%E2%9C%85-update-makestyles-import" class="anchor-link-style" href="#%E2%9C%85-update-makestyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>makeStyles</code> JSS utility is no longer exported from <code>@mui/material/styles</code>. You can use <code>@mui/styles/makeStyles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended that you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { makeStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { makeStyles } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const useStyles = makeStyles((theme) => ({\n</span><span class="token prefix unchanged"> </span><span class="token line">   background: theme.palette.primary.main,\n</span><span class="token prefix unchanged"> </span><span class="token line"> }));\n</span><span class="token prefix unchanged"> </span><span class="token line"> function Component() {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const classes = useStyles();\n</span><span class="token prefix unchanged"> </span><span class="token line">   return &lt;div className={classes.root} />\n</span><span class="token prefix unchanged"> </span><span class="token line"> }\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // In the root of your app\n</span><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;Component />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;Component {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-serverstylesheets-import">\u2705 Update ServerStyleSheets import<a aria-labelledby="%E2%9C%85-update-serverstylesheets-import" class="anchor-link-style" href="#%E2%9C%85-update-serverstylesheets-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>ServerStyleSheets</code> component is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { ServerStyleSheets } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ServerStyleSheets } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="styled">styled<a aria-labelledby="styled" class="anchor-link-style" href="#styled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>styled</code> JSS utility is no longer exported from <code>@mui/material/styles</code>. You can use the one exported from <code>@mui/styles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { styled } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { styled } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = styled(\'div\')(({ theme }) => ({ background: theme.palette.primary.main }));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;MyComponent {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-stylesprovider-import">\u2705 Update StylesProvider import<a aria-labelledby="%E2%9C%85-update-stylesprovider-import" class="anchor-link-style" href="#%E2%9C%85-update-stylesprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>StylesProvider</code> component is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { StylesProvider } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { StylesProvider } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-usethemevariants-import">\u2705 Update useThemeVariants import<a aria-labelledby="%E2%9C%85-update-usethemevariants-import" class="anchor-link-style" href="#%E2%9C%85-update-usethemevariants-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>useThemeVariants</code> hook is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { useThemeVariants } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { useThemeVariants } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-withstyles-import">\u2705 Update withStyles import<a aria-labelledby="%E2%9C%85-update-withstyles-import" class="anchor-link-style" href="#%E2%9C%85-update-withstyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>withStyles</code> JSS utility is no longer exported from <code>@mui/material/styles</code>. You can use <code>@mui/styles/withStyles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, you should use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { withStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { withStyles } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const defaultTheme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withStyles((props) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const { classes, className, ...other } = props;\n</span><span class="token prefix unchanged"> </span><span class="token line">   return &lt;div className={clsx(className, classes.root)} {...other} />\n</span><span class="token prefix unchanged"> </span><span class="token line"> })(({ theme }) => ({ root: { background: theme.palette.primary.main }}));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={defaultTheme}>&lt;MyComponent />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-replace-innerref-with-ref">\u2705 Replace innerRef with ref<a aria-labelledby="%E2%9C%85-replace-innerref-with-ref" class="anchor-link-style" href="#%E2%9C%85-replace-innerref-with-ref" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Replace the <code>innerRef</code> prop with the <code>ref</code> prop. Refs are now automatically forwarded to the inner component.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line"> import { withStyles } from \'@mui/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withStyles({\n</span><span class="token prefix unchanged"> </span><span class="token line">   root: {\n</span><span class="token prefix unchanged"> </span><span class="token line">     backgroundColor: \'red\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   },\n</span><span class="token prefix unchanged"> </span><span class="token line"> })(({ classes }) => &lt;div className={classes.root} />);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function MyOtherComponent(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const ref = React.useRef();\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent innerRef={ref} />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;MyComponent ref={ref} />;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="update-withtheme-import">Update withTheme import<a aria-labelledby="update-withtheme-import" class="anchor-link-style" href="#update-withtheme-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>withTheme</code> HOC utility has been removed from the <code>@mui/material/styles</code> package. You can use <code>@mui/styles/withTheme</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { withTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { withTheme } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withTheme(({ theme }) => &lt;div>{props.theme.direction}&lt;/div>);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;MyComponent {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-remove-withwidth">\u2705 Remove withWidth<a aria-labelledby="%E2%9C%85-remove-withwidth" class="anchor-link-style" href="#%E2%9C%85-remove-withwidth" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>This HOC was removed. If you need this feature, you can try <a href="/pt/material-ui/react-use-media-query/#migrating-from-withwidth">the alternative that uses the <code>useMediaQuery</code> hook</a>.</p>\n<h2 id="mui-icons-material">@mui/icons-material<a aria-labelledby="mui-icons-material" class="anchor-link-style" href="#mui-icons-material" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="reduce-github-icon-size">Reduce GitHub icon size<a aria-labelledby="reduce-github-icon-size" class="anchor-link-style" href="#reduce-github-icon-size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The GitHub icon was reduced in size from 24px to 22px wide to match the size of the other icons.</p>\n<h2 id="material-ui-pickers">@material-ui/pickers<a aria-labelledby="material-ui-pickers" class="anchor-link-style" href="#material-ui-pickers" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>We have a <a href="/pt/material-ui/guides/pickers-migration/">dedicated page</a> for migrating <code>@material-ui/pickers</code> to v5.</p>\n<h2 id="system">System<a aria-labelledby="system" class="anchor-link-style" href="#system" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-rename-gap-props">\u2705 Rename gap props<a aria-labelledby="%E2%9C%85-rename-gap-props" class="anchor-link-style" href="#%E2%9C%85-rename-gap-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The following system functions and properties were renamed because they are considered deprecated CSS:</p>\n<ul>\n<li><code>gridGap</code> becomes <code>gap</code></li>\n<li><code>gridRowGap</code> becomes <code>rowGap</code></li>\n<li><code>gridColumnGap</code> becomes <code>columnGap</code></li>\n</ul>\n<h3 id="%E2%9C%85-add-spacing-units-to-gap-props">\u2705 Add spacing units to gap props<a aria-labelledby="%E2%9C%85-add-spacing-units-to-gap-props" class="anchor-link-style" href="#%E2%9C%85-add-spacing-units-to-gap-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use a spacing unit in <code>gap</code>, <code>rowGap</code>, and <code>columnGap</code>. If you were using a number previously, you need to mention the px to bypass the new transformation with <code>theme.spacing</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &lt;Box\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  gap={2}\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  gap="2px"\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Replace <code>css</code> prop with <code>sx</code> to avoid collision with styled-components and Emotion&#39;s <code>css</code> prop.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">&lt;Box css={{ color: \'primary.main\' }} />\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">&lt;Box sx={{ color: \'primary.main\' }} /></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>The system grid function was not documented in v4.</p>\n\n</aside>'],toc:[{text:"Material UI v5 migration",level:2,hash:"material-ui-v5-migration",children:[]},{text:"Breaking changes, part one",level:2,hash:"breaking-changes-part-one",children:[]},{text:"Migrate theme styleOverrides to Emotion",level:2,hash:"migrate-theme-styleoverrides-to-emotion",children:[{text:"Replace state class names",level:3,hash:"replace-state-class-names"},{text:"Replace nested classes selectors with global class names",level:3,hash:"replace-nested-classes-selectors-with-global-class-names"}]},{text:"ref",level:2,hash:"ref",children:[{text:"Refactor non-ref-forwarding class components",level:3,hash:"refactor-non-ref-forwarding-class-components"},{text:"Fix ref type specificity",level:3,hash:"fix-ref-type-specificity"}]},{text:"Style library",level:2,hash:"style-library",children:[{text:"\u2705 Adjust CSS injection order",level:3,hash:"%E2%9C%85-adjust-css-injection-order"},{text:"\u2705 Add prepend to createCache",level:3,hash:"%E2%9C%85-add-prepend-to-createcache"}]},{text:"Theme structure",level:2,hash:"theme-structure",children:[{text:"\u2705 Add adaptV4Theme helper",level:3,hash:"%E2%9C%85-add-adaptv4theme-helper"},{text:"Remove gutters",level:3,hash:"remove-gutters"},{text:"\u2705 Remove px suffix",level:3,hash:"%E2%9C%85-remove-px-suffix"},{text:"\u2705 Rename theme.palette.type",level:3,hash:"%E2%9C%85-rename-theme-palette-type"},{text:"Change default theme.palette.info colors",level:3,hash:"change-default-theme-palette-info-colors"},{text:"Change default theme.palette.success colors",level:3,hash:"change-default-theme-palette-success-colors"},{text:"Change default theme.palette.warning colors",level:3,hash:"change-default-theme-palette-warning-colors"},{text:"Restore theme.palette.text.hint key (if needed)",level:3,hash:"restore-theme-palette-text-hint-key-if-needed"},{text:"Restructure component definitions",level:3,hash:"restructure-component-definitions"}]},{text:"@mui/styles",level:2,hash:"mui-styles",children:[{text:"Update ThemeProvider import",level:3,hash:"update-themeprovider-import"},{text:"\u2705 Add module augmentation for DefaultTheme (TypeScript)",level:3,hash:"%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript"}]},{text:"@mui/material/colors",level:2,hash:"mui-material-colors",children:[{text:"\u2705 Change color imports",level:3,hash:"%E2%9C%85-change-color-imports"}]},{text:"@mui/material/styles",level:2,hash:"mui-material-styles",children:[{text:"\u2705 Rename fade to alpha",level:3,hash:"%E2%9C%85-rename-fade-to-alpha"},{text:"\u2705 Update createStyles import",level:3,hash:"%E2%9C%85-update-createstyles-import"},{text:"\u2705 Update createGenerateClassName import",level:3,hash:"%E2%9C%85-update-creategenerateclassname-import"},{text:"\u2705 Rename createMuiTheme",level:3,hash:"%E2%9C%85-rename-createmuitheme"},{text:"\u2705 Update MuiThemeProvider import",level:3,hash:"%E2%9C%85-update-muithemeprovider-import"},{text:"\u2705 Update jssPreset import",level:3,hash:"%E2%9C%85-update-jsspreset-import"},{text:"\u2705 Update makeStyles import",level:3,hash:"%E2%9C%85-update-makestyles-import"},{text:"\u2705 Update ServerStyleSheets import",level:3,hash:"%E2%9C%85-update-serverstylesheets-import"},{text:"styled",level:3,hash:"styled"},{text:"\u2705 Update StylesProvider import",level:3,hash:"%E2%9C%85-update-stylesprovider-import"},{text:"\u2705 Update useThemeVariants import",level:3,hash:"%E2%9C%85-update-usethemevariants-import"},{text:"\u2705 Update withStyles import",level:3,hash:"%E2%9C%85-update-withstyles-import"},{text:"\u2705 Replace innerRef with ref",level:3,hash:"%E2%9C%85-replace-innerref-with-ref"},{text:"Update withTheme import",level:3,hash:"update-withtheme-import"},{text:"\u2705 Remove withWidth",level:3,hash:"%E2%9C%85-remove-withwidth"}]},{text:"@mui/icons-material",level:2,hash:"mui-icons-material",children:[{text:"Reduce GitHub icon size",level:3,hash:"reduce-github-icon-size"}]},{text:"@material-ui/pickers",level:2,hash:"material-ui-pickers",children:[]},{text:"System",level:2,hash:"system",children:[{text:"\u2705 Rename gap props",level:3,hash:"%E2%9C%85-rename-gap-props"},{text:"\u2705 Add spacing units to gap props",level:3,hash:"%E2%9C%85-add-spacing-units-to-gap-props"}]}],title:"Breaking changes in v5, part one: styles and themes",headers:{components:[]}},zh:{description:"This is a reference guide to all of the breaking changes introduced in Material v5, and how to handle them when migrating from v4. This part covers changes to styling and theming.",location:"/docs/data/material/migration/migration-v4/v5-style-changes-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Breaking changes in v5, part one: styles and themes</h1><p class="description">This is a reference guide to all of the breaking changes introduced in Material v5, and how to handle them when migrating from v4. This part covers changes to styling and theming.</p>\n\n<h2 id="material-ui-v5-migration">Material UI v5 migration<a aria-labelledby="material-ui-v5-migration" class="anchor-link-style" href="#material-ui-v5-migration" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ol>\n<li><a href="/zh/material-ui/migration/migration-v4/">Getting started</a></li>\n<li>Breaking changes part one: style and theme \ud83d\udc48 <em>you are here</em></li>\n<li><a href="/zh/material-ui/migration/v5-component-changes/">Breaking changes part two: components</a></li>\n<li><a href="/zh/material-ui/migration/migrating-from-jss/">Migrating from JSS</a></li>\n<li><a href="/zh/material-ui/migration/troubleshooting/">Troubleshooting</a></li>\n</ol>\n<h2 id="breaking-changes-part-one">Breaking changes, part one<a aria-labelledby="breaking-changes-part-one" class="anchor-link-style" href="#breaking-changes-part-one" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Material UI v5 introduces a number of breaking changes from v4. Many of these changes can be resolved automatically using <a href="/zh/material-ui/migration/migration-v4/#run-codemods">the codemods</a> described in the <a href="/zh/material-ui/migration/migration-v4/">main migration guide</a>.</p>\n<p>The following document lists all breaking changes related to styles and themes in v5 and how to address them.</p>\n<p>After you&#39;re finished here, please move on to <a href="/zh/material-ui/migration/v5-component-changes/">Breaking changes in v5 part two: components</a> to continue the migration process.</p>\n<aside class="MuiCallout-root MuiCallout-warning"><p>Breaking changes that are handled by codemods are denoted by a \u2705 emoji in the table of contents on the right side of the screen.</p>\n<p>If you have already followed the instructions in the main migration guide and run the codemods, then you should not need to take any further action on these items.</p>\n<p>All other changes must be handled manually.</p>\n\n</aside><h2 id="migrate-theme-styleoverrides-to-emotion">Migrate theme styleOverrides to Emotion<a aria-labelledby="migrate-theme-styleoverrides-to-emotion" class="anchor-link-style" href="#migrate-theme-styleoverrides-to-emotion" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Although your style overrides defined in the theme may partially work, there is an important difference regarding how the nested elements are styled.</p>\n<p>The <code>$</code> syntax (local rule reference) used with JSS will not work with Emotion. You need to replace those selectors with a valid class selector.</p>\n<h3 id="replace-state-class-names">Replace state class names<a aria-labelledby="replace-state-class-names" class="anchor-link-style" href="#replace-state-class-names" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp;$focused\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          \'&amp;.Mui-focused\': {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="replace-nested-classes-selectors-with-global-class-names">Replace nested classes selectors with global class names<a aria-labelledby="replace-nested-classes-selectors-with-global-class-names" class="anchor-link-style" href="#replace-nested-classes-selectors-with-global-class-names" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><div class="MuiCode-root"><pre><code class="language-diff">const theme = createTheme({\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">   MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">     styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">       root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">         \'&amp; $notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">         \'&amp; .MuiOutlinedInput-notchedOutline\': {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">           borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">         }\n</span><span class="token prefix unchanged"> </span><span class="token line">       }\n</span><span class="token prefix unchanged"> </span><span class="token line">     }\n</span><span class="token prefix unchanged"> </span><span class="token line">   }\n</span><span class="token prefix unchanged"> </span><span class="token line"> }\n</span></span>});\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info"><p>For each component, we export a <code>[component]Classes</code> constant that contains all nested classes for that component.</p>\n<p>You can rely on this instead of hardcoding the classes.</p>\n\n</aside><div class="MuiCode-root"><pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { outlinedInputClasses } from \'@mui/material/OutlinedInput\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp; $notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          [`&amp; .${outlinedInputClasses.notchedOutline}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Take a look at the complete <a href="/zh/material-ui/customization/how-to-customize/#state-classes">list of global state classnames</a> available.</p>\n<h2 id="ref">ref<a aria-labelledby="ref" class="anchor-link-style" href="#ref" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="refactor-non-ref-forwarding-class-components">Refactor non-ref-forwarding class components<a aria-labelledby="refactor-non-ref-forwarding-class-components" class="anchor-link-style" href="#refactor-non-ref-forwarding-class-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Support for non-ref-forwarding class components in the <code>component</code> prop or as immediate <code>children</code> has been dropped.</p>\n<p>If you were using <code>unstable_createStrictModeTheme</code> or didn&#39;t see any warnings related to <code>findDOMNode</code> in <code>React.StrictMode</code> then you don&#39;t need to take any further action.</p>\n<p>Otherwise check out the <a href="/zh/material-ui/guides/composition/#caveat-with-refs">Caveat with refs</a> section in the Composition guide to find out how to migrate. This change affects almost all components where you&#39;re using the <code>component</code> prop or passing <code>children</code> to components that require <code>children</code> to be elements (e.g. <code>&lt;MenuList&gt;&lt;CustomMenuItem /&gt;&lt;/MenuList&gt;</code>).</p>\n<h3 id="fix-ref-type-specificity">Fix ref type specificity<a aria-labelledby="fix-ref-type-specificity" class="anchor-link-style" href="#fix-ref-type-specificity" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For some components, you may get a type error when passing <code>ref</code>. To avoid the error, you should use a specific element type. For example, <code>Card</code> expects the type of <code>ref</code> to be <code>HTMLDivElement</code>, and <code>ListItem</code> expects its <code>ref</code> type to be <code>HTMLLIElement</code>.</p>\n<p>Here is an example:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Card from \'@mui/material/Card\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import ListItem from \'@mui/material/ListItem\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function SpecificRefType() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const cardRef = React.useRef&lt;HTMLElement>(null);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const cardRef = React.useRef&lt;HTMLDivElement>(null);\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const listItemRef = React.useRef&lt;HTMLElement>(null);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const listItemRef = React.useRef&lt;HTMLLIElement>(null);\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;div>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;Card ref={cardRef}>&lt;/Card>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;ListItem ref={listItemRef}>&lt;/ListItem>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/div>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Here are the specific element types that each component expects:</p>\n<h4>@mui/material</h4><ul>\n<li><a href="/zh/material-ui/api/accordion/">Accordion</a> - <code>HTMLDivElement</code></li>\n<li><a href="/zh/material-ui/api/alert/">Alert</a> - <code>HTMLDivElement</code></li>\n<li><a href="/zh/material-ui/api/avatar/">Avatar</a> - <code>HTMLDivElement</code></li>\n<li><a href="/zh/material-ui/api/button-group/">ButtonGroup</a> - <code>HTMLDivElement</code></li>\n<li><a href="/zh/material-ui/api/card/">Card</a> - <code>HTMLDivElement</code></li>\n<li><a href="/zh/material-ui/api/dialog/">Dialog</a> - <code>HTMLDivElement</code></li>\n<li><a href="/zh/material-ui/api/image-list/">ImageList</a> - <code>HTMLUListElement</code></li>\n<li><a href="/zh/material-ui/api/list/">List</a> - <code>HTMLUListElement</code></li>\n<li><a href="/zh/material-ui/api/tab/">Tab</a> - <code>HTMLDivElement</code></li>\n<li><a href="/zh/material-ui/api/tabs/">Tabs</a> - <code>HTMLDivElement</code></li>\n<li><a href="/zh/material-ui/api/toggle-button/">ToggleButton</a> - <code>HTMLButtonElement</code></li>\n</ul>\n<h4>@mui/lab</h4><ul>\n<li><a href="/zh/material-ui/api/timeline/">Timeline</a> - <code>HTMLUListElement</code></li>\n</ul>\n<h2 id="style-library">Style library<a aria-labelledby="style-library" class="anchor-link-style" href="#style-library" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-adjust-css-injection-order">\u2705 Adjust CSS injection order<a aria-labelledby="%E2%9C%85-adjust-css-injection-order" class="anchor-link-style" href="#%E2%9C%85-adjust-css-injection-order" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The style library used by default in v5 is <a href="https://emotion.sh/docs/introduction">Emotion</a>.</p>\n<p>If you were using JSS for the style overrides of Material UI components\u2014for example, those created by <code>makeStyles</code>\u2014you will need to take care of the CSS injection order. JSS <code>&lt;style</code>&gt;&#39; elements need to be injected in the <code>&lt;head&gt;</code> after Emotion <code>&lt;style&gt;</code>&#39; elements.</p>\n<p>To do so, you need to have the <code>StyledEngineProvider</code> with the <code>injectFirst</code> option at the top of your component tree, as shown here:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token punctuation">{</span><span class="token comment">/* Inject Emotion before JSS */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-add-prepend-to-createcache">\u2705 Add prepend to createCache<a aria-labelledby="%E2%9C%85-add-prepend-to-createcache" class="anchor-link-style" href="#%E2%9C%85-add-prepend-to-createcache" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you have a custom cache and are using Emotion to style your app, it will override the cache provided by Material UI.</p>\n<p>To correct the injection order, add the <code>prepend</code> option to <code>createCache</code>, as shown below:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import { CacheProvider } from \'@emotion/react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import createCache from \'@emotion/cache\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const cache = createCache({\n</span><span class="token prefix unchanged"> </span><span class="token line">  key: \'css\',\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  prepend: true,\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function PlainCssPriority() {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;CacheProvider value={cache}>\n</span><span class="token prefix unchanged"> </span><span class="token line">      {/* Your component tree. Now you can override Material UI\'s styles. */}\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/CacheProvider>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info"><p>If you are using styled-components and have a <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>.</p>\n<p>To see how it can be done, take a look at the <a href="https://github.com/mui/material-ui/blob/master/packages/mui-styled-engine-sc/src/StyledEngineProvider/StyledEngineProvider.js"><code>StyledEngineProvider</code> implementation</a> in the <code>@mui/styled-engine-sc</code> package.</p>\n\n</aside><h2 id="theme-structure">Theme structure<a aria-labelledby="theme-structure" class="anchor-link-style" href="#theme-structure" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-add-adaptv4theme-helper">\u2705 Add adaptV4Theme helper<a aria-labelledby="%E2%9C%85-add-adaptv4theme-helper" class="anchor-link-style" href="#%E2%9C%85-add-adaptv4theme-helper" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The structure of the theme has changed in v5. You need to update its shape. For a smoother transition, the <code>adaptV4Theme</code> helper allows you to iteratively upgrade some of the theme changes to the new theme structure.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createMuiTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createTheme, adaptV4Theme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createMuiTheme({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme(adaptV4Theme({\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // v4 theme\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">});\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">}));</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>This adapter only handles the input arguments of <code>createTheme</code>. If you modify the shape of the theme after its creation, you need to migrate the structure manually.</p>\n\n</aside><p>The following changes are supported by the adapter:</p>\n<h3 id="remove-gutters">Remove gutters<a aria-labelledby="remove-gutters" class="anchor-link-style" href="#remove-gutters" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The &quot;gutters&quot; abstraction hasn&#39;t proven to be used frequently enough to be valuable.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">theme.mixins.gutters(),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">paddingLeft: theme.spacing(2),\n</span><span class="token prefix inserted">+</span><span class="token line">paddingRight: theme.spacing(2),\n</span><span class="token prefix inserted">+</span><span class="token line">[theme.breakpoints.up(\'sm\')]: {\n</span><span class="token prefix inserted">+</span><span class="token line">  paddingLeft: theme.spacing(3),\n</span><span class="token prefix inserted">+</span><span class="token line">  paddingRight: theme.spacing(3),\n</span><span class="token prefix inserted">+</span><span class="token line">},</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-remove-px-suffix">\u2705 Remove px suffix<a aria-labelledby="%E2%9C%85-remove-px-suffix" class="anchor-link-style" href="#%E2%9C%85-remove-px-suffix" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>theme.spacing</code> now returns single values with px units by default. This change improves the integration with styled-components &amp; Emotion.</p>\n<p>Before:</p>\n<div class="MuiCode-root"><pre><code class="language-js">theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">16</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>After:</p>\n<div class="MuiCode-root"><pre><code class="language-js">theme<span class="token punctuation">.</span><span class="token function">spacing</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'16px\'</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-rename-theme-palette-type">\u2705 Rename theme.palette.type<a aria-labelledby="%E2%9C%85-rename-theme-palette-type" class="anchor-link-style" href="#%E2%9C%85-rename-theme-palette-type" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>theme.palette.type</code> key was renamed to <code>theme.palette.mode</code>, to better follow the &quot;dark mode&quot; terminology that is usually used for describing this feature.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createTheme({ palette: { type: \'dark\' } }),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({ palette: { mode: \'dark\' } }),</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-info-colors">Change default theme.palette.info colors<a aria-labelledby="change-default-theme-palette-info-colors" class="anchor-link-style" href="#change-default-theme-palette-info-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.info</code> colors were changed to pass the AA accessibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">info = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: cyan[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: lightBlue[700], // lightBlue[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: cyan[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: lightBlue[500], // lightBlue[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: cyan[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: lightBlue[900], // lightBlue[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-success-colors">Change default theme.palette.success colors<a aria-labelledby="change-default-theme-palette-success-colors" class="anchor-link-style" href="#change-default-theme-palette-success-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.success</code> colors were changed to pass the AA accessibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">success = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: green[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: green[800], // green[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: green[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: green[500], // green[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: green[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: green[900], // green[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="change-default-theme-palette-warning-colors">Change default theme.palette.warning colors<a aria-labelledby="change-default-theme-palette-warning-colors" class="anchor-link-style" href="#change-default-theme-palette-warning-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default <code>theme.palette.warning</code> colors were changed to pass the AA accesibility standard contrast ratio in both light and dark modes.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">warning = {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  main: orange[500],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  main: \'#ED6C02\', // orange[400] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  light: orange[300],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  light: orange[500], // orange[300] in "dark" mode\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  dark: orange[700],\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  dark: orange[900], // orange[700] in "dark" mode\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="restore-theme-palette-text-hint-key-if-needed">Restore theme.palette.text.hint key (if needed)<a aria-labelledby="restore-theme-palette-text-hint-key-if-needed" class="anchor-link-style" href="#restore-theme-palette-text-hint-key-if-needed" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>theme.palette.text.hint</code> key was unused in Material UI components, and has been removed. If you depend on it, you can add it back:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createTheme(),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({\n</span><span class="token prefix inserted">+</span><span class="token line">  palette: { text: { hint: \'rgba(0, 0, 0, 0.38)\' } },\n</span><span class="token prefix inserted">+</span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="restructure-component-definitions">Restructure component definitions<a aria-labelledby="restructure-component-definitions" class="anchor-link-style" href="#restructure-component-definitions" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The component definitions in the theme were restructured under the <code>components</code> key to make them easier to find.</p>\n<h4>1. props</h4><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  props: {\n</span><span class="token prefix deleted">-</span><span class="token line">    MuiButton: {\n</span><span class="token prefix deleted">-</span><span class="token line">      disableRipple: true,\n</span><span class="token prefix deleted">-</span><span class="token line">    },\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  components: {\n</span><span class="token prefix inserted">+</span><span class="token line">    MuiButton: {\n</span><span class="token prefix inserted">+</span><span class="token line">      defaultProps: {\n</span><span class="token prefix inserted">+</span><span class="token line">        disableRipple: true,\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>2. overrides</h4><div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  overrides: {\n</span><span class="token prefix deleted">-</span><span class="token line">    MuiButton: {\n</span><span class="token prefix deleted">-</span><span class="token line">      root: { padding: 0 },\n</span><span class="token prefix deleted">-</span><span class="token line">    },\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  components: {\n</span><span class="token prefix inserted">+</span><span class="token line">    MuiButton: {\n</span><span class="token prefix inserted">+</span><span class="token line">      styleOverrides: {\n</span><span class="token prefix inserted">+</span><span class="token line">        root: { padding: 0 },\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">    },\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-styles">@mui/styles<a aria-labelledby="mui-styles" class="anchor-link-style" href="#mui-styles" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="update-themeprovider-import">Update ThemeProvider import<a aria-labelledby="update-themeprovider-import" class="anchor-link-style" href="#update-themeprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you are using the utilities from <code>@mui/styles</code> together with the <code>@mui/material</code>, you should replace the use of <code>ThemeProvider</code> from <code>@mui/styles</code> with the one exported from <code>@mui/material/styles</code>.</p>\n<p>This way, the <code>theme</code> provided in the context will be available in both the styling utilities exported from <code>@mui/styles</code>, like <code>makeStyles</code>, <code>withStyles</code>, etc., along with the Material UI components.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { ThemeProvider } from \'@mui/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ThemeProvider } from \'@mui/material/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available in the utilities coming from <code>@mui/styles</code>.</p>\n<h3 id="%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript">\u2705 Add module augmentation for DefaultTheme (TypeScript)<a aria-labelledby="%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript" class="anchor-link-style" href="#%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>@mui/styles</code> package is no longer part of <code>@mui/material/styles</code>.</p>\n<p>If you are using <code>@mui/styles</code> together with <code>@mui/material</code> you need to add a module augmentation for the <code>DefaultTheme</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token comment">// in the file where you are creating the theme (invoking the function `createTheme()`)</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Theme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\ndeclare module <span class="token string">\'@mui/styles\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">DefaultTheme</span> <span class="token keyword">extends</span> <span class="token class-name">Theme</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-material-colors">@mui/material/colors<a aria-labelledby="mui-material-colors" class="anchor-link-style" href="#mui-material-colors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-change-color-imports">\u2705 Change color imports<a aria-labelledby="%E2%9C%85-change-color-imports" class="anchor-link-style" href="#%E2%9C%85-change-color-imports" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Nested imports of more than one level are private. For example, you can no longer import <code>red</code> from <code>@mui/material/colors/red</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import red from \'@mui/material/colors/red\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { red } from \'@mui/material/colors\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="mui-material-styles">@mui/material/styles<a aria-labelledby="mui-material-styles" class="anchor-link-style" href="#mui-material-styles" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-rename-fade-to-alpha">\u2705 Rename fade to alpha<a aria-labelledby="%E2%9C%85-rename-fade-to-alpha" class="anchor-link-style" href="#%E2%9C%85-rename-fade-to-alpha" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>fade</code> was renamed to <code>alpha</code> to better describe its functionality.</p>\n<p>The previous name caused confusion when the input color already had an alpha value. The helper overrides the alpha value of the color.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { fade } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { alpha } from \'@mui/material/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const classes = makeStyles(theme => ({\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }));</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-createstyles-import">\u2705 Update createStyles import<a aria-labelledby="%E2%9C%85-update-createstyles-import" class="anchor-link-style" href="#%E2%9C%85-update-createstyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createStyles</code> function from <code>@mui/material/styles</code> was moved to the one exported from <code>@mui/styles</code>. It is necessary for removing the dependency on <code>@mui/styles</code> in the Material UI npm package.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createStyles } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-creategenerateclassname-import">\u2705 Update createGenerateClassName import<a aria-labelledby="%E2%9C%85-update-creategenerateclassname-import" class="anchor-link-style" href="#%E2%9C%85-update-creategenerateclassname-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createGenerateClassName</code> function is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createGenerateClassName } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createGenerateClassName } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>To generate custom class names without using <code>@mui/styles</code>, check out <a href="/zh/material-ui/experimental-api/classname-generator/">ClassName Generator</a> for more details.</p>\n<h3 id="%E2%9C%85-rename-createmuitheme">\u2705 Rename createMuiTheme<a aria-labelledby="%E2%9C%85-rename-createmuitheme" class="anchor-link-style" href="#%E2%9C%85-rename-createmuitheme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The function <code>createMuiTheme</code> was renamed to <code>createTheme</code> to make it more intuitive to use with <code>ThemeProvider</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { createMuiTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { createTheme } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const theme = createMuiTheme({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme({</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-muithemeprovider-import">\u2705 Update MuiThemeProvider import<a aria-labelledby="%E2%9C%85-update-muithemeprovider-import" class="anchor-link-style" href="#%E2%9C%85-update-muithemeprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>MuiThemeProvider</code> component is no longer exported from <code>@mui/material/styles</code>. Use <code>ThemeProvider</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { MuiThemeProvider } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ThemeProvider } from \'@mui/material/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-jsspreset-import">\u2705 Update jssPreset import<a aria-labelledby="%E2%9C%85-update-jsspreset-import" class="anchor-link-style" href="#%E2%9C%85-update-jsspreset-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>jssPreset</code> object is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { jssPreset } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { jssPreset } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-makestyles-import">\u2705 Update <code>makeStyles</code> import<a aria-labelledby="%E2%9C%85-update-makestyles-import" class="anchor-link-style" href="#%E2%9C%85-update-makestyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>makeStyles</code> JSS utility is no longer exported from <code>@mui/material/styles</code>. You can use <code>@mui/styles/makeStyles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended that you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { makeStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { makeStyles } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const useStyles = makeStyles((theme) => ({\n</span><span class="token prefix unchanged"> </span><span class="token line">   background: theme.palette.primary.main,\n</span><span class="token prefix unchanged"> </span><span class="token line"> }));\n</span><span class="token prefix unchanged"> </span><span class="token line"> function Component() {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const classes = useStyles();\n</span><span class="token prefix unchanged"> </span><span class="token line">   return &lt;div className={classes.root} />\n</span><span class="token prefix unchanged"> </span><span class="token line"> }\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // In the root of your app\n</span><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;Component />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;Component {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-serverstylesheets-import">\u2705 Update ServerStyleSheets import<a aria-labelledby="%E2%9C%85-update-serverstylesheets-import" class="anchor-link-style" href="#%E2%9C%85-update-serverstylesheets-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>ServerStyleSheets</code> component is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { ServerStyleSheets } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { ServerStyleSheets } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="styled">styled<a aria-labelledby="styled" class="anchor-link-style" href="#styled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>styled</code> JSS utility is no longer exported from <code>@mui/material/styles</code>. You can use the one exported from <code>@mui/styles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { styled } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { styled } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = styled(\'div\')(({ theme }) => ({ background: theme.palette.primary.main }));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;MyComponent {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-stylesprovider-import">\u2705 Update StylesProvider import<a aria-labelledby="%E2%9C%85-update-stylesprovider-import" class="anchor-link-style" href="#%E2%9C%85-update-stylesprovider-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>StylesProvider</code> component is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { StylesProvider } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { StylesProvider } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-usethemevariants-import">\u2705 Update useThemeVariants import<a aria-labelledby="%E2%9C%85-update-usethemevariants-import" class="anchor-link-style" href="#%E2%9C%85-update-usethemevariants-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>useThemeVariants</code> hook is no longer exported from <code>@mui/material/styles</code>. You should import it directly from <code>@mui/styles</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { useThemeVariants } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { useThemeVariants } from \'@mui/styles\';</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-update-withstyles-import">\u2705 Update withStyles import<a aria-labelledby="%E2%9C%85-update-withstyles-import" class="anchor-link-style" href="#%E2%9C%85-update-withstyles-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>withStyles</code> JSS utility is no longer exported from <code>@mui/material/styles</code>. You can use <code>@mui/styles/withStyles</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, you should use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { withStyles } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { withStyles } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const defaultTheme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withStyles((props) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const { classes, className, ...other } = props;\n</span><span class="token prefix unchanged"> </span><span class="token line">   return &lt;div className={clsx(className, classes.root)} {...other} />\n</span><span class="token prefix unchanged"> </span><span class="token line"> })(({ theme }) => ({ root: { background: theme.palette.primary.main }}));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={defaultTheme}>&lt;MyComponent />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-replace-innerref-with-ref">\u2705 Replace innerRef with ref<a aria-labelledby="%E2%9C%85-replace-innerref-with-ref" class="anchor-link-style" href="#%E2%9C%85-replace-innerref-with-ref" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Replace the <code>innerRef</code> prop with the <code>ref</code> prop. Refs are now automatically forwarded to the inner component.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line"> import { withStyles } from \'@mui/styles\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withStyles({\n</span><span class="token prefix unchanged"> </span><span class="token line">   root: {\n</span><span class="token prefix unchanged"> </span><span class="token line">     backgroundColor: \'red\',\n</span><span class="token prefix unchanged"> </span><span class="token line">   },\n</span><span class="token prefix unchanged"> </span><span class="token line"> })(({ classes }) => &lt;div className={classes.root} />);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function MyOtherComponent(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">   const ref = React.useRef();\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent innerRef={ref} />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;MyComponent ref={ref} />;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="update-withtheme-import">Update withTheme import<a aria-labelledby="update-withtheme-import" class="anchor-link-style" href="#update-withtheme-import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>withTheme</code> HOC utility has been removed from the <code>@mui/material/styles</code> package. You can use <code>@mui/styles/withTheme</code> instead.</p>\n<p>Make sure to add a <code>ThemeProvider</code> at the root of your application, as the <code>defaultTheme</code> is no longer available.</p>\n<p>If you are using this utility together with <code>@mui/material</code>, it&#39;s recommended you use the <code>ThemeProvider</code> component from <code>@mui/material/styles</code> instead.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { withTheme } from \'@mui/material/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { withTheme } from \'@mui/styles\';\n</span><span class="token prefix inserted">+</span><span class="token line">import { createTheme, ThemeProvider } from \'@mui/material/styles\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const theme = createTheme();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> const MyComponent = withTheme(({ theme }) => &lt;div>{props.theme.direction}&lt;/div>);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> function App(props) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  return &lt;MyComponent />;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  return &lt;ThemeProvider theme={theme}>&lt;MyComponent {...props} />&lt;/ThemeProvider>;\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> }</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="%E2%9C%85-remove-withwidth">\u2705 Remove withWidth<a aria-labelledby="%E2%9C%85-remove-withwidth" class="anchor-link-style" href="#%E2%9C%85-remove-withwidth" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>This HOC was removed. If you need this feature, you can try <a href="/zh/material-ui/react-use-media-query/#migrating-from-withwidth">the alternative that uses the <code>useMediaQuery</code> hook</a>.</p>\n<h2 id="mui-icons-material">@mui/icons-material<a aria-labelledby="mui-icons-material" class="anchor-link-style" href="#mui-icons-material" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="reduce-github-icon-size">Reduce GitHub icon size<a aria-labelledby="reduce-github-icon-size" class="anchor-link-style" href="#reduce-github-icon-size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The GitHub icon was reduced in size from 24px to 22px wide to match the size of the other icons.</p>\n<h2 id="material-ui-pickers">@material-ui/pickers<a aria-labelledby="material-ui-pickers" class="anchor-link-style" href="#material-ui-pickers" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>We have a <a href="/zh/material-ui/guides/pickers-migration/">dedicated page</a> for migrating <code>@material-ui/pickers</code> to v5.</p>\n<h2 id="system">System<a aria-labelledby="system" class="anchor-link-style" href="#system" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="%E2%9C%85-rename-gap-props">\u2705 Rename gap props<a aria-labelledby="%E2%9C%85-rename-gap-props" class="anchor-link-style" href="#%E2%9C%85-rename-gap-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The following system functions and properties were renamed because they are considered deprecated CSS:</p>\n<ul>\n<li><code>gridGap</code> becomes <code>gap</code></li>\n<li><code>gridRowGap</code> becomes <code>rowGap</code></li>\n<li><code>gridColumnGap</code> becomes <code>columnGap</code></li>\n</ul>\n<h3 id="%E2%9C%85-add-spacing-units-to-gap-props">\u2705 Add spacing units to gap props<a aria-labelledby="%E2%9C%85-add-spacing-units-to-gap-props" class="anchor-link-style" href="#%E2%9C%85-add-spacing-units-to-gap-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use a spacing unit in <code>gap</code>, <code>rowGap</code>, and <code>columnGap</code>. If you were using a number previously, you need to mention the px to bypass the new transformation with <code>theme.spacing</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &lt;Box\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  gap={2}\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  gap="2px"\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Replace <code>css</code> prop with <code>sx</code> to avoid collision with styled-components and Emotion&#39;s <code>css</code> prop.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">&lt;Box css={{ color: \'primary.main\' }} />\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">&lt;Box sx={{ color: \'primary.main\' }} /></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>The system grid function was not documented in v4.</p>\n\n</aside>'],toc:[{text:"Material UI v5 migration",level:2,hash:"material-ui-v5-migration",children:[]},{text:"Breaking changes, part one",level:2,hash:"breaking-changes-part-one",children:[]},{text:"Migrate theme styleOverrides to Emotion",level:2,hash:"migrate-theme-styleoverrides-to-emotion",children:[{text:"Replace state class names",level:3,hash:"replace-state-class-names"},{text:"Replace nested classes selectors with global class names",level:3,hash:"replace-nested-classes-selectors-with-global-class-names"}]},{text:"ref",level:2,hash:"ref",children:[{text:"Refactor non-ref-forwarding class components",level:3,hash:"refactor-non-ref-forwarding-class-components"},{text:"Fix ref type specificity",level:3,hash:"fix-ref-type-specificity"}]},{text:"Style library",level:2,hash:"style-library",children:[{text:"\u2705 Adjust CSS injection order",level:3,hash:"%E2%9C%85-adjust-css-injection-order"},{text:"\u2705 Add prepend to createCache",level:3,hash:"%E2%9C%85-add-prepend-to-createcache"}]},{text:"Theme structure",level:2,hash:"theme-structure",children:[{text:"\u2705 Add adaptV4Theme helper",level:3,hash:"%E2%9C%85-add-adaptv4theme-helper"},{text:"Remove gutters",level:3,hash:"remove-gutters"},{text:"\u2705 Remove px suffix",level:3,hash:"%E2%9C%85-remove-px-suffix"},{text:"\u2705 Rename theme.palette.type",level:3,hash:"%E2%9C%85-rename-theme-palette-type"},{text:"Change default theme.palette.info colors",level:3,hash:"change-default-theme-palette-info-colors"},{text:"Change default theme.palette.success colors",level:3,hash:"change-default-theme-palette-success-colors"},{text:"Change default theme.palette.warning colors",level:3,hash:"change-default-theme-palette-warning-colors"},{text:"Restore theme.palette.text.hint key (if needed)",level:3,hash:"restore-theme-palette-text-hint-key-if-needed"},{text:"Restructure component definitions",level:3,hash:"restructure-component-definitions"}]},{text:"@mui/styles",level:2,hash:"mui-styles",children:[{text:"Update ThemeProvider import",level:3,hash:"update-themeprovider-import"},{text:"\u2705 Add module augmentation for DefaultTheme (TypeScript)",level:3,hash:"%E2%9C%85-add-module-augmentation-for-defaulttheme-typescript"}]},{text:"@mui/material/colors",level:2,hash:"mui-material-colors",children:[{text:"\u2705 Change color imports",level:3,hash:"%E2%9C%85-change-color-imports"}]},{text:"@mui/material/styles",level:2,hash:"mui-material-styles",children:[{text:"\u2705 Rename fade to alpha",level:3,hash:"%E2%9C%85-rename-fade-to-alpha"},{text:"\u2705 Update createStyles import",level:3,hash:"%E2%9C%85-update-createstyles-import"},{text:"\u2705 Update createGenerateClassName import",level:3,hash:"%E2%9C%85-update-creategenerateclassname-import"},{text:"\u2705 Rename createMuiTheme",level:3,hash:"%E2%9C%85-rename-createmuitheme"},{text:"\u2705 Update MuiThemeProvider import",level:3,hash:"%E2%9C%85-update-muithemeprovider-import"},{text:"\u2705 Update jssPreset import",level:3,hash:"%E2%9C%85-update-jsspreset-import"},{text:"\u2705 Update makeStyles import",level:3,hash:"%E2%9C%85-update-makestyles-import"},{text:"\u2705 Update ServerStyleSheets import",level:3,hash:"%E2%9C%85-update-serverstylesheets-import"},{text:"styled",level:3,hash:"styled"},{text:"\u2705 Update StylesProvider import",level:3,hash:"%E2%9C%85-update-stylesprovider-import"},{text:"\u2705 Update useThemeVariants import",level:3,hash:"%E2%9C%85-update-usethemevariants-import"},{text:"\u2705 Update withStyles import",level:3,hash:"%E2%9C%85-update-withstyles-import"},{text:"\u2705 Replace innerRef with ref",level:3,hash:"%E2%9C%85-replace-innerref-with-ref"},{text:"Update withTheme import",level:3,hash:"update-withtheme-import"},{text:"\u2705 Remove withWidth",level:3,hash:"%E2%9C%85-remove-withwidth"}]},{text:"@mui/icons-material",level:2,hash:"mui-icons-material",children:[{text:"Reduce GitHub icon size",level:3,hash:"reduce-github-icon-size"}]},{text:"@material-ui/pickers",level:2,hash:"material-ui-pickers",children:[]},{text:"System",level:2,hash:"system",children:[{text:"\u2705 Rename gap props",level:3,hash:"%E2%9C%85-rename-gap-props"},{text:"\u2705 Add spacing units to gap props",level:3,hash:"%E2%9C%85-add-spacing-units-to-gap-props"}]}],title:"Breaking changes in v5, part one: styles and themes",headers:{components:[]}}},i={scope:{process:{},import:{}}},l={},c={},r=a(824246);function d(){return(0,r.jsx)(o.Z,(0,t.Z)({},s))}},302954:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return u}});var s,t,o,p=a(146010),i=a(720325),l=a(314307),c=a(774517),r=a(811486),d=a(281547),h=a(824246);function u(e){var n=e.children,a=e.mode,u=(0,p.Z)(),m="dark"===(a||u.palette.mode)?c.GT:c.UB;return(0,h.jsxs)(i.Z,{theme:a?function(){return m}:m,children:[a?null:s||(s=(0,h.jsx)(r.F1,{})),a?null:t||(t=(0,h.jsx)(l.ZP,{})),a?null:o||(o=(0,h.jsx)(d.Z,{})),n]})}},307391:function(e,n,a){"use strict";a.d(n,{Z:function(){return We}});var s,t=a(295649),o=a(696138),p=a.n(o),i=a(827378),l=a(723615),c=a.n(l),r=a(724219),d=a.n(r),h=a(686677),u=a(61233),m=a(25778),k=a(957379),g=a(107361),f=a(290763),y=a(240120),v=a(633983),x=a(549303),b=a(757555),C=a(518894),M=a(933333),w=a(85275),T=a(481936),E=a(823315),S=a(199981),R=a.n(S),P=a(521883),z=a(692095),j=a(889212),I=a(813371),L=a(505625),$=a(857958),U=a(13547),H=a(275191),K=a(393742),Z=a(792718),A=a(146010),B=a(620587),D=a(720325),O=a(191895),V=a(446454),N=a(917014),G=a(309318),F=a(650432),Y=a(328731),W=a(601344),q=a(833665),J=a(672511),_=a(824246);var X=function(e){(0,F.Z)(a,e);var n=(0,Y.Z)(a);function a(){var e;(0,V.Z)(this,a);for(var s=arguments.length,t=new Array(s),o=0;o<s;o++)t[o]=arguments[o];return e=n.call.apply(n,[this].concat(t)),(0,k.Z)((0,G.Z)(e),"state",{error:null}),e}return(0,N.Z)(a,[{key:"render",value:function(){var e=this.props,n=e.children,a=e.name,t=e.onResetDemoClick,o=e.t,i=this.state.error;if(i){var l="[docs] Demo ".concat(a," crashes"),c=encodeURIComponent("is:issue ".concat(l)),r=function(e){var n="https://github.com/".concat(e.user,"/").concat(e.repo,"/issues/new"),a=p()(e).map((function(n){var a=e[n];return"".concat(n,"=").concat(encodeURIComponent(String(a)))})).join("&");return"".concat(n,"?").concat(a)}({user:"mui",repo:"material-ui",title:l,body:"\n\x3c!-- Please make sure you have fullfilled the following items before submitting --\x3e\n\x3c!-- Checked checkbox should look like this: [x] --\x3e\n- [ ] I have [searched for similar issues](https://github.com/mui/material-ui/issues?q=".concat(c,") in this repository and believe that this is not a duplicate.\n\n## Steps to Reproduce\n1. Visit ").concat(window.location.href,"\n2. ??\n3. demo *").concat(a,"* crashes\n\n## Your Environment\n| Tech         | Version |\n|--------------|---------|\n| MUI  | v").concat("5.10.13","  |\n| Netlify deploy | ").concat("https://6369ac6f407fd00008c7a092--material-ui-docs.netlify.app"," |\n| Browser      | ").concat(window.navigator?window.navigator.userAgent:"*Unknown*"," |\n")});return(0,_.jsxs)("div",{children:[s||(s=(0,_.jsx)(W.Z,{color:"error",component:"p",variant:"h5",gutterBottom:!0,children:"This demo had a runtime error!"})),(0,_.jsxs)(W.Z,{children:["We would appreciate it if you"," ",(0,_.jsx)(q.Z,{href:r,rel:"noreferrer",target:"_blank",children:"report this error"})," ","directly in our issue tracker. You will be provided with a prefilled description that includes valuable information about this error."]}),(0,_.jsx)("pre",{style:{whiteSpace:"pre-wrap"},children:i.toString()}),(0,_.jsx)(J.Z,{color:"secondary",onClick:t,variant:"text",children:o("resetDemo")})]})}return n}}],[{key:"getDerivedStateFromError",value:function(e){return{error:e}}}]),a}(i.Component),Q=a(328109),ee=a(269445),ne=a(774517),ae=a(549492),se=["children","name"],te=["children","iframe","name","onResetDemoClick"];function oe(e){var n=e.children,a=e.document,s=(0,A.Z)();i.useEffect((function(){a.body.dir=s.direction}),[a,s.direction]);var t=i.useMemo((function(){return{jss:(0,z.create)({plugins:[].concat((0,E.Z)((0,K.Z)().plugins),[(0,O.Z)()]),insertionPoint:a.head}),sheetsManager:new(R())}}),[a]),o=t.jss,p=t.sheetsManager,l=i.useMemo((function(){return(0,$.default)({key:"iframe-demo-".concat(s.direction),prepend:!0,container:a.head,stylisPlugins:"rtl"===s.direction?[j.Ji,I.default]:[j.Ji]})}),[a,s.direction]),c=i.useCallback((function(){return a.defaultView}),[a]);return(0,_.jsx)(Z.ZP,{jss:o,sheetsManager:p,children:(0,_.jsx)(H.StyleSheetManager,{target:a.head,stylisPlugins:"rtl"===s.direction?[L.ZP]:[],children:(0,_.jsx)(U.C,{value:l,children:i.cloneElement(n,{window:c})})})})}var pe=(0,f.ZP)("iframe")((function(e){var n=e.theme;return{backgroundColor:n.palette.background.default,flexGrow:1,height:400,border:0,boxShadow:n.shadows[1]}}));function ie(e){var n,a=e.children,s=e.name,o=(0,T.Z)(e,se),p=i.useRef(null),l=i.useReducer((function(){return!0}),!1),c=(0,m.Z)(l,2),r=c[0],d=c[1];i.useEffect((function(){var e=p.current.contentDocument;null==e||"complete"!==e.readyState||r||d()}),[r]);var h=null===(n=p.current)||void 0===n?void 0:n.contentDocument;return(0,_.jsxs)(i.Fragment,{children:[(0,_.jsx)(pe,(0,t.Z)({onLoad:d,ref:p,title:"".concat(s," demo")},o)),!1!==r?P.createPortal((0,_.jsx)(oe,{document:h,children:a}),h.body):null]})}var le=(0,z.create)({plugins:[].concat((0,E.Z)((0,K.Z)().plugins),[(0,O.Z)()]),insertionPoint:document.querySelector("#insertion-point-jss")});function ce(e){var n=(0,h.useRouter)(),a=(0,ee.ln)(n.asPath).canonicalAs,s=e.children,o=e.iframe,p=void 0!==o&&o,l=e.name,c=e.onResetDemoClick,r=(0,T.Z)(e,te),d=p?ie:i.Fragment,u=p?(0,t.Z)({name:l},r):{},m=(0,Q.useTranslate)(),k=(0,_.jsx)(d,(0,t.Z)((0,t.Z)({},u),{},{children:s}));return(0,_.jsx)(X,{name:l,onResetDemoClick:c,t:m,children:a.startsWith("/joy-ui")?k:(0,_.jsx)(Z.ZP,{jss:le,children:(0,_.jsx)(D.Z,{theme:function(e){return function(e){var n,a,s,o,p=(0,ne.bk)(e.palette.mode),i=(null===(n=e.palette.primary)||void 0===n?void 0:n.main)&&e.palette.primary.main!==p.palette.primary.main,l=(0,B.Z)({palette:(0,t.Z)({mode:e.palette.mode||"light"},i&&{primary:{main:e.palette.primary.main},secondary:{main:e.palette.secondary.main}})},"dense"===(null===(a=e.components)||void 0===a||null===(s=a.MuiFormControl)||void 0===s||null===(o=s.defaultProps)||void 0===o?void 0:o.margin)?ae.highDensity:{});return e.direction&&(l.direction=e.direction),e.spacing&&(l.spacing=e.spacing),l}(e)},children:k})})})}var re=i.memo(ce),de=a(912765);function he(e){var n=e.code,a=e.scope,s=e.onError,t=a;var o=(0,de.ud)({code:n,scope:t}),p=o.element,l=o.error;return i.useEffect((function(){s(l)}),[l,s]),p}var ue=a(932062),me=a.n(ue),ke=a(375205),ge=a(875678),fe=a.n(ge),ye=a(810552),ve=a(115205),xe=a(8779),be=(0,f.ZP)(ye.default)((function(e){var n=e.theme;return{"& .scrollContainer":{maxHeight:"min(68vh, 1000px)",overflow:"auto",backgroundColor:"".concat(ne.qn[800]," !important"),borderRadius:n.shape.borderRadius,colorScheme:"dark","&:hover":{boxShadow:"0 0 0 3px ".concat("dark"===n.palette.mode?n.palette.primaryDark[400]:n.palette.primary.light)},"&:focus-within":{boxShadow:"0 0 0 2px ".concat("dark"===n.palette.mode?n.palette.primaryDark.main:n.palette.primary.main)}}}})),Ce=(0,f.ZP)(me())((function(e){var n=e.theme;return(0,t.Z)((0,t.Z)({},n.typography.body2),{},{fontSize:n.typography.pxToRem(13),fontFamily:n.typography.fontFamilyCode,fontWeight:400,WebkitFontSmoothing:"subpixel-antialiased",color:"#f8f8f2",direction:"ltr /*! @noflip */",float:"left",minWidth:"100%","& pre":{maxHeight:"initial",maxWidth:"initial"},"& textarea":{outline:"none"},"& > textarea, & > pre":{whiteSpace:"pre !important"}})}));function Me(e){var n=e.language,a=e.value,s=e.onChange,o=e.copyButtonProps,p=e.children,l=e.id,c=(0,Q.useTranslate)(),r=i.useRef(null),d=i.useRef(null),h=(0,xe.Y)();return i.useEffect((function(){r.current.querySelector("textarea").tabIndex=-1}),[]),(0,_.jsx)(be,{ref:r,onKeyDown:function(e){if("Tab"!==e.key)if("Escape"!==e.key){if("Enter"===e.key){var n=r.current.querySelector("textarea");n!==document.activeElement&&(e.preventDefault(),e.stopPropagation(),n.focus())}}else d.current.focus()},children:(0,_.jsxs)("div",(0,t.Z)((0,t.Z)({className:"MuiCode-root"},h),{},{children:[(0,_.jsx)("div",{className:"scrollContainer",children:(0,_.jsx)(Ce,{padding:20,highlight:function(e){return'<code class="language-'.concat(n,'">').concat(fe()(e,n),"</code>")},id:l,value:a,onValueChange:s})}),(0,_.jsx)(ke.Z,{ref:d,"aria-live":"polite",tabIndex:0,sx:function(e){return{position:"absolute",top:e.spacing(1),padding:e.spacing(.5,1),outline:"none",left:"50%",border:"1px solid",borderColor:ne.iN[400],backgroundColor:ne.qn[600],color:ne.qn[50],transform:"translateX(-50%)",borderRadius:"4px",fontSize:e.typography.pxToRem(13),transition:"all 0.3s","&:not(:focus)":{top:0,opacity:0,pointerEvents:"none"}}},dangerouslySetInnerHTML:{__html:c("editorHint")}}),(0,_.jsx)(M.Z,{children:(0,_.jsx)(ve.Z,(0,t.Z)((0,t.Z)({},o),{},{code:a}))}),p]}))})}var we=a(572396);function Te(e){return e.children?(0,_.jsx)(we.Z,(0,t.Z)({"aria-live":"polite",variant:"filled",severity:"error",sx:{position:"absolute",top:0,left:"50%",transform:"translateX(-50%) translateY(-50%)",py:"2px",px:"6px","& .MuiAlert-icon":{fontSize:14,mr:.5,mt:.25,py:0},"& .MuiAlert-message":{fontSize:12,py:0}}},e)):null}var Ee,Se,Re,Pe=a(641588),ze=a(738525),je=a(720236),Ie=a(302954);function Le(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e.replace(/^\s+/gm,"")}var $e=i.lazy((function(){return Promise.all([a.e(59209),a.e(62235)]).then(a.bind(a,862235))})),Ue=(0,f.ZP)("div")((function(e){var n=e.theme;return(0,k.Z)({display:"none"},n.breakpoints.up("sm"),{display:"flex",height:n.spacing(8)})}));function He(){var e=(0,Q.useTranslate)();return(0,_.jsx)(Ue,{"aria-busy":!0,"aria-label":e("demoToolbarLabel"),role:"toolbar"})}function Ke(e){return e.replace(/(.+?)(\w+)\.\w+$$/,"$2")}var Ze=(0,f.ZP)("div")((function(e){var n=e.theme;return(0,k.Z)({marginBottom:24,marginLeft:n.spacing(-2),marginRight:n.spacing(-2)},n.breakpoints.up("sm"),{marginLeft:0,marginRight:0})})),Ae=(0,f.ZP)("div",{shouldForwardProp:function(e){return"hiddenToolbar"!==e&&"bg"!==e}})((function(e){var n=e.theme,a=e.hiddenToolbar,s=e.bg;return(0,t.Z)((0,t.Z)((0,t.Z)((0,t.Z)((0,k.Z)({position:"relative",outline:0,margin:"auto",display:"flex",justifyContent:"center"},n.breakpoints.up("sm"),(0,t.Z)((0,t.Z)((0,t.Z)({borderRadius:10},"outlined"===s&&{borderLeftWidth:1,borderRightWidth:1}),"inline"===s&&{padding:n.spacing(0)}),a&&{paddingTop:n.spacing(1)})),"outlined"===s&&{padding:n.spacing(3),backgroundColor:n.palette.background.paper,border:"1px solid ".concat(n.palette.divider),borderLeftWidth:0,borderRightWidth:0}),!0===s&&{padding:n.spacing(3),backgroundColor:"dark"===n.palette.mode?n.palette.grey[900]:n.palette.grey[100]}),"gradient"===s&&{padding:n.spacing(20,8),border:"1px solid ".concat("dark"===n.palette.mode?(0,y.Fq)(n.palette.primaryDark[500],.7):(0,y.Fq)(n.palette.primary[100],.5)),overflow:"hidden",backgroundColor:"dark"===n.palette.mode?n.palette.primaryDark[800]:(0,y.Fq)(n.palette.primary[50],.5),backgroundClip:"padding-box",backgroundImage:"dark"===n.palette.mode?"radial-gradient(at 51% 52%, ".concat((0,y.Fq)(n.palette.primaryDark[700],.5)," 0px, transparent 50%),\n        radial-gradient(at 80% 0%, ").concat(n.palette.primaryDark[700]," 0px, transparent 50%),\n        radial-gradient(at 0% 95%, ").concat(n.palette.primaryDark[600]," 0px, transparent 50%),\n        radial-gradient(at 0% 20%, ").concat(n.palette.primaryDark[600]," 0px, transparent 35%),\n        radial-gradient(at 93% 85%, ").concat((0,y.Fq)(n.palette.primaryDark[500],.8)," 0px, transparent 50%),\n        url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23003A75' fill-opacity='0.15'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");"):"radial-gradient(at 51% 52%, ".concat((0,y.Fq)(n.palette.primary[50],.5)," 0px, transparent 50%),\n        radial-gradient(at 80% 0%, #FFFFFF 0px, transparent 20%),\n        radial-gradient(at 0% 95%, ").concat((0,y.Fq)(n.palette.primary[100],.3),", transparent 40%),\n        radial-gradient(at 0% 20%, ").concat(n.palette.primary[50]," 0px, transparent 50%),\n        radial-gradient(at 93% 85%, ").concat((0,y.Fq)(n.palette.primary[100],.2)," 0px, transparent 50%),\n        url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23003A75' fill-opacity='0.03'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");")}),a&&{paddingTop:n.spacing(2)})})),Be=(0,v.Z)("div",{shouldForwardProp:function(e){return"hiddenToolbar"!==e&&"bg"!==e}})((function(e){var n=e.theme,a=e.hiddenToolbar,s=e.bg;return(0,t.Z)((0,t.Z)((0,t.Z)((0,k.Z)({position:"relative",outline:0,margin:"auto",display:"flex",justifyContent:"center"},n.breakpoints.up("sm"),(0,t.Z)((0,t.Z)((0,t.Z)({borderRadius:10},"outlined"===s&&{borderLeftWidth:1,borderRightWidth:1}),"inline"===s&&{padding:n.spacing(0)}),a&&{paddingTop:n.spacing(1)})),"outlined"===s&&{padding:n.spacing(3),backgroundColor:n.vars.palette.background.surface,border:"1px solid",borderColor:n.vars.palette.divider,borderLeftWidth:0,borderRightWidth:0}),!0===s&&{padding:n.spacing(3),backgroundColor:n.vars.palette.background.level2}),a&&{paddingTop:n.spacing(3)})})),De=(0,f.ZP)(w.default)({"& pre":{margin:"0 auto",maxHeight:"min(68vh, 1000px)"}}),Oe=(0,f.ZP)("div")({marginTop:-64,position:"absolute"}),Ve=(0,f.ZP)(b.Z)((function(e){var n=e.theme;return{position:"absolute",top:0,left:0,width:n.spacing(4),height:n.spacing(4),pointerEvents:"none"}}));function Ne(e){var n=e.demo,a=e.demoOptions,s=e.disableAd,o=e.githubLocation,p=e.mode;var l=(0,Q.useTranslate)(),c=(0,ze.HQ)(),r=function(e,n,a){var s=(0,Q.useUserLanguage)(),o=(0,h.useRouter)(),p=(0,ee.ln)(o.asPath).canonicalAs;return i.useMemo((function(){var o,i="Material UI";return p.startsWith("/joy-ui/")?(o="joy-ui",i="Joy UI"):p.startsWith("/base/")?(o="base",i="MUI Base"):p.startsWith("/x/")&&(i="MUI X"),(0,t.Z)((0,t.Z)({scope:n.scope,jsxPreview:n.jsxPreview},e===je.CODE_VARIANTS.TS&&n.rawTS?{codeVariant:je.CODE_VARIANTS.TS,githubLocation:a.replace(/\.js$/,".tsx"),raw:n.rawTS,Component:n.tsx,sourceLanguage:"tsx"}:{codeVariant:je.CODE_VARIANTS.JS,githubLocation:a,raw:n.raw,Component:n.js,sourceLanguage:"jsx"}),{},{title:"".concat(Ke(a)," demo \u2014 ").concat(i),product:o,language:s})}),[p,e,n,a,s])}(c,n,o),d=i.useState(!1),u=(0,m.Z)(d,2),k=u[0],f=u[1],y=function(e){f("mouseenter"===e.type)},v=Ke(r.githubLocation),b=i.useMemo((function(){return{maxWidth:a.maxWidth,height:a.height}}),[a.height,a.maxWidth]);null==a.bg&&(a.bg="outlined"),a.iframe&&(a.bg=!0);var w=i.useState(a.defaultCodeOpen||!1),T=(0,m.Z)(w,2),E=T[0],S=T[1],R=i.useRef(!1);E&&(R.current=!0),i.useEffect((function(){var e=Ke(window.location.hash);v===e&&S(!0)}),[v]);var P=!a.hideToolbar&&!1!==a.defaultCodeOpen&&Boolean(r.jsxPreview),z=i.useReducer((function(e){return e+1}),0),j=(0,m.Z)(z,2),I=j[0],L=j[1],$="demo-".concat((0,x.Z)()),U="demoSource-".concat((0,x.Z)()),H=E||P,K=i.useRef(null),Z=i.useState(!1),A=(0,m.Z)(Z,2),B=A[0],D=A[1],O=B&&!s&&!a.disableAd,V="joy-ui"===r.product?Be:Ae,N="joy-ui"===r.product?Ie.default:i.Fragment,G=!E&&P,F=G?r.jsxPreview:r.raw.replace(/\n$/,""),Y=i.useState({value:F,isPreview:G}),W=(0,m.Z)(Y,2),q=W[0],J=W[1],X=function(){J({value:F,isPreview:G}),L()};i.useEffect((function(){J({value:F,isPreview:G})}),[F,G]);var ne=i.useState(null),ae=(0,m.Z)(ne,2),se=ae[0],te=ae[1],oe=function(e){var n,a=e.demoOptions,s=e.demoData,t=e.editorCode,o=e.initialEditorCode,p=e.setDebouncedError,l=i.useMemo((function(){return(0,g.Z)(p,300)}),[p]);return i.useEffect((function(){return function(){l.clear()}}),[l]),i.useMemo((function(){return t.value===o||a.disableLiveEdit?n||(n=(0,_.jsx)(s.Component,{})):(0,_.jsx)(he,{scope:s.scope,onError:l,code:t.isPreview?Le(s.raw).replace(Le(s.jsxPreview),t.value):t.value})}),[s,a.disableLiveEdit,t,o,l])}({demoOptions:a,demoData:r,editorCode:q,initialEditorCode:F,setDebouncedError:te});return(0,_.jsxs)(Ze,{children:[(0,_.jsx)(Oe,{id:"".concat(v)}),(0,_.jsxs)(V,{hiddenToolbar:a.hideToolbar,bg:a.bg,id:$,onMouseEnter:y,onMouseLeave:y,children:[(0,_.jsx)(N,(0,t.Z)((0,t.Z)({},"joy-ui"===r.product&&{mode:p}),{},{children:(0,_.jsx)(Ve,{"aria-label":l("initialFocusLabel"),action:K,tabIndex:-1})})),(0,_.jsx)(re,{style:b,iframe:a.iframe,name:v,onResetDemoClick:X,children:oe},I)]}),(0,_.jsx)(Oe,{id:"".concat(v,".js")}),(0,_.jsx)(Oe,{id:"".concat(v,".tsx")}),(0,_.jsxs)(N,(0,t.Z)((0,t.Z)({},"joy-ui"===r.product?{mode:p}:{}),{},{children:[a.hideToolbar?null:(0,_.jsx)(M.Z,{defer:!0,fallback:Ee||(Ee=(0,_.jsx)(He,{})),children:(0,_.jsx)(i.Suspense,{fallback:Se||(Se=(0,_.jsx)(He,{})),children:(0,_.jsx)($e,{codeOpen:E,codeVariant:c,demo:n,demoData:r,demoHovered:k,demoId:$,demoName:v,demoOptions:a,demoSourceId:U,initialFocusRef:K,onCodeOpenChange:function(){S((function(e){return!e})),D(!0)},onResetDemoClick:X,openDemoSource:H,showPreview:P})})}),(0,_.jsx)(C.Z,{in:H,unmountOnExit:!0,children:a.disableLiveEdit?(0,_.jsx)(De,{code:q.value,id:U,language:r.sourceLanguage,copyButtonProps:{"data-ga-event-category":E?"demo-expand":"demo","data-ga-event-label":a.demo,"data-ga-event-action":"copy-click"}}):(0,_.jsx)(Me,{value:q.value,onChange:function(e){J((0,t.Z)((0,t.Z)({},q),{},{value:e}))},id:U,language:r.sourceLanguage,copyButtonProps:{"data-ga-event-category":E?"demo-expand":"demo","data-ga-event-label":a.demo,"data-ga-event-action":"copy-click"},children:(0,_.jsx)(Te,{children:se})})}),O?Re||(Re=(0,_.jsx)(Pe.c,{})):null]}))]})}var Ge=a(644450),Fe=a(557978);function Ye(e){var n=e.mode,a=(0,Fe.tv)().setMode;return i.useEffect((function(){a(n)}),[n,a]),null}function We(e){var n=(0,u.Z)(),a=(0,h.useRouter)().asPath.replace(/^\/[a-zA-Z]{2}\//,"/"),s=e.disableAd,o=void 0!==s&&s,l=e.disableToc,c=void 0!==l&&l,r=e.demos,m=void 0===r?{}:r,k=e.docs,g=e.demoComponents,f=e.srcComponents,y=(0,Q.useUserLanguage)(),v=(0,Q.useTranslate)(),x=k[y]||k.en,b=x.description,C=x.location,M=x.rendered,w=x.title,T=x.toc,E=a.startsWith("/joy-ui"),S=E?Fe.lL:i.Fragment,R=E?Ie.default:i.Fragment;return(0,_.jsx)(Ge.Z,{description:b,disableAd:o,disableToc:c,location:C,title:w,toc:T,children:(0,_.jsxs)(S,{children:[E&&(0,_.jsx)(Ye,{mode:n.palette.mode}),M.map((function(e,a){var s,i;if("string"===typeof e)return(0,_.jsx)(R,(0,t.Z)((0,t.Z)({},E&&{mode:n.palette.mode}),{},{children:(0,_.jsx)(ye.default,{renderedMarkdown:e})}),a);if(e.component){var l=e.component,c=null===f||void 0===f?void 0:f[l];if(void 0===c)throw new Error("No component found at the path ".concat(d().join("docs/src",l)));return(0,_.jsx)(R,(0,t.Z)((0,t.Z)({},E&&{mode:n.palette.mode}),{},{children:(0,_.jsx)(c,(0,t.Z)((0,t.Z)({},e),{},{markdown:x}))}),a)}var r=e.demo,h=null===m||void 0===m?void 0:m[r];if(void 0===h){var u=["Missing demo: ".concat(r,". You can use one of the following:"),p()(m)].join("\n");if("en"===y)throw new Error(u);0;var k=(0,_.jsx)("span",{role:"img","aria-label":v("emojiWarning"),children:"\u26a0\ufe0f"});return(0,_.jsxs)("div",{children:[k," Missing demo `",r,"` ",k]},a)}var b=C.split("/");b.pop();var M,w="".concat(b.join("/"),"/").concat(r);return(0,_.jsx)(Ne,{mode:n.palette.mode,demo:{raw:h.raw,js:null!==(s=g[h.module])&&void 0!==s?s:(M=h.module,function(){throw new Error("No demo component provided for '".concat(M,"'"))}),scope:m.scope,jsxPreview:h.jsxPreview,rawTS:h.rawTS,tsx:null!==(i=g[h.moduleTS])&&void 0!==i?i:null},disableAd:o,demoOptions:e,githubLocation:"".concat("https://github.com/mui/material-ui","/blob/v").concat("5.10.13").concat(w)},a)}))]})})}Ye.propTypes={mode:c().oneOf(["light","dark"])}},830093:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/migration/v5-style-changes",function(){return a(57861)}])}},function(e){e.O(0,[75760,31194,36634,35408,85992,56063,76957,78491,3381,63756,94617,68182,9448,43785,55898,26035,35396,11486,10552,70121,59430,84445,34786,77756,49774,92888,40179],(function(){return n=830093,e(e.s=n);var n}));var n=e.O();_N_E=n}]);