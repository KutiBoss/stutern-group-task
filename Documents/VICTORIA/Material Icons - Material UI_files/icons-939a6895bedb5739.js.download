(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[28490],{158483:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return Nn}});var s={};e.r(s),e.d(s,{demoComponents:function(){return Ln},demos:function(){return qn},docs:function(){return En},srcComponents:function(){return $n}});var o,t,c,i,r,p,l,u,d,h,m,v,g=e(295649),f=e(827378),k=e.t(f,2),y=e(307391),b=e(912538),x=e(522047),w=e(766661),I=e(532566),C=e(650170),S=e(800434),j=e(256437),M=e(170784),z=e(317768),T=e(890290),Z=e(571650),A=e(192437),F=e(556272),D=e(304099),B=e(386313),P=e(314056),V=e(235215),R=e(920499),H=e(499950),G=e(723615),_=e(612200),E=e(937983),q=e(649072),L=e(382736),$=e(19564),N=e(103965),O=e(297418),K=e(189664),U=e(635616),W=e(243408),Y=e(772868),J=e(601344),X=e(824246);var Q,nn,an,en,sn,on,tn,cn,rn,pn,ln,un=e(375205),dn=e(658295),hn=e(52551);function mn(n){return(0,X.jsx)(hn.Z,(0,g.Z)((0,g.Z)({},n),{},{children:Q||(Q=(0,X.jsx)("path",{d:"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"}))}))}function vn(n){return(0,X.jsx)(hn.Z,(0,g.Z)((0,g.Z)({},n),{},{children:cn||(cn=(0,X.jsx)("path",{d:"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"}))}))}var gn,fn,kn=(0,e(403503).Z)((0,X.jsx)("path",{d:"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"}),"Home");var yn,bn,xn,wn,In=e(25778),Cn=e(672511),Sn=e(757555),jn=f.forwardRef((function(n,a){var e=n.icon,s=(0,In.Z)(e.icon,5),o=s[0],t=s[1],c=s[4];return(0,X.jsx)(hn.Z,{ref:a,viewBox:"0 0 ".concat(o," ").concat(t),children:"string"===typeof c?(0,X.jsx)("path",{d:c}):c.map((function(n,a){return(0,X.jsx)("path",{style:{opacity:0===a?.4:1},d:n})}))})}));var Mn,zn,Tn,Zn,An,Fn,Dn,Bn=e(191149),Pn=e(16339);var Vn,Rn=e(620587),Hn=e(720325),Gn=e(989657),_n=(0,Rn.Z)({components:{MuiIcon:{styleOverrides:{root:{boxSizing:"content-box",padding:3,fontSize:"1.125rem"}}}}});var En={en:{description:"Guidance and suggestions for using icons with MUI.",location:"/docs/data/material/components/icons/icons.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Icons</h1><p class="description">Guidance and suggestions for using icons with MUI.</p>\n\n<p>MUI provides icons support in three ways:</p>\n<ol>\n<li>Standardized <a href="#material-svg-icons">Material Icons</a> exported as React components (SVG icons).</li>\n<li>With the <a href="#svgicon">SvgIcon</a> component, a React wrapper for custom SVG icons.</li>\n<li>With the <a href="#icon-font-icons">Icon</a> component, a React wrapper for custom font icons.</li>\n</ol>\n<h2 id="material-svg-icons">Material SVG icons<a aria-labelledby="material-svg-icons" class="anchor-link-style" href="#material-svg-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Google has created over 2,100 official Material icons, each in five different &quot;themes&quot; (see below).\nFor each SVG icon, we export the respective React component from the <code>@mui/icons-material</code> package.\nYou can <a href="/material-ui/material-icons/">search the full list of these icons</a>.</p>\n<h3 id="installation">Installation<a aria-labelledby="installation" class="anchor-link-style" href="#installation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>To install and save in your <code>package.json</code> dependencies, run the command below using <strong>npm</strong>:</p>\n<div class="MuiCode-root"><pre><code class="language-sh">npm install @mui<span class="token operator">/</span>icons<span class="token operator">-</span>material\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Or <strong>yarn</strong>:</p>\n<div class="MuiCode-root"><pre><code class="language-sh">yarn add @mui<span class="token operator">/</span>icons<span class="token operator">-</span>material\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>These components use the MUI <code>SvgIcon</code> component to render the SVG path for each icon, and so have a peer-dependency on <code>@mui/material</code>.</p>\n<p>If you aren&#39;t already using Material UI in your project, you can add it following the <a href="/material-ui/getting-started/installation/">installation guide</a>.</p>\n<h3 id="usage">Usage<a aria-labelledby="usage" class="anchor-link-style" href="#usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Import icons using one of these two options:</p>\n<ul>\n<li><p>Option 1:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> AccessAlarmIcon <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/AccessAlarm\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ThreeDRotation <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/ThreeDRotation\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n<li><p>Option 2:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> AccessAlarm<span class="token punctuation">,</span> ThreeDRotation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n</ul>\n<p>The safest for bundle size is Option 1, but some developers prefer Option 2.\nMake sure you follow the <a href="/material-ui/guides/minimizing-bundle-size/#option-two-use-a-babel-plugin">minimizing bundle size guide</a> before using the second approach.</p>\n<p>Each Material icon also has a &quot;theme&quot;: Filled (default), Outlined, Rounded, Two-tone, and Sharp. To import the icon component with a theme other than the default, append the theme name to the icon name. For example <code>@mui/icons-material/Delete</code> icon with:</p>\n<ul>\n<li>Filled theme (default) is exported as <code>@mui/icons-material/Delete</code>,</li>\n<li>Outlined theme is exported as <code>@mui/icons-material/DeleteOutlined</code>,</li>\n<li>Rounded theme is exported as <code>@mui/icons-material/DeleteRounded</code>,</li>\n<li>Twotone theme is exported as <code>@mui/icons-material/DeleteTwoTone</code>,</li>\n<li>Sharp theme is exported as <code>@mui/icons-material/DeleteSharp</code>.</li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-info"><p>Note: The Material Design guidelines name the icons using &quot;snake_case&quot; naming (for example <code>delete_forever</code>, <code>add_a_photo</code>), while <code>@mui/icons-material</code> exports the respective icons using &quot;PascalCase&quot; naming (for example <code>DeleteForever</code>, <code>AddAPhoto</code>). There are three exceptions to this naming rule: <code>3d_rotation</code> exported as <code>ThreeDRotation</code>, <code>4k</code> exported as <code>FourK</code>, and <code>360</code> exported as <code>ThreeSixty</code>.</p>\n\n</aside>',{demo:"SvgMaterialIcons.js"},'<h3 id="testing">Testing<a aria-labelledby="testing" class="anchor-link-style" href="#testing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For testing purposes, each icon exposed from <code>@mui/icons-material</code> has a <code>data-testid</code> attribute with the name of the icon. For instance:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> DeleteIcon <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/Delete\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>has the following attribute once mounted:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">data-testid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DeleteIcon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="svgicon">SvgIcon<a aria-labelledby="svgicon" class="anchor-link-style" href="#svgicon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>If you need a custom SVG icon (not available in the <a href="/material-ui/material-icons/">Material Icons</a>) you can use the <code>SvgIcon</code> wrapper.\nThis component extends the native <code>&lt;svg&gt;</code> element:</p>\n<ul>\n<li>It comes with built-in accessibility.</li>\n<li>SVG elements should be scaled for a 24x24px viewport so that the resulting icon can be used as is, or included as a child for other MUI components that use icons.\nThis can be customized with the <code>viewBox</code> attribute.\nTo inherit the <code>viewBox</code> value from the original image, the <code>inheritViewBox</code> prop can be used.</li>\n<li>By default, the component inherits the current color. Optionally, you can apply one of the theme colors using the <code>color</code> prop.</li>\n</ul>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">function</span> <span class="token function">HomeIcon</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="color">Color<a aria-labelledby="color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SvgIconsColor.js"},'<h3 id="size">Size<a aria-labelledby="size" class="anchor-link-style" href="#size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SvgIconsSize.js"},'<h3 id="component-prop">Component prop<a aria-labelledby="component-prop" class="anchor-link-style" href="#component-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>You can use the <code>SvgIcon</code> wrapper even if your icons are saved in the <code>.svg</code> format.\n<a href="https://github.com/gregberge/svgr">svgr</a> has loaders to import SVG files and use them as React components. For example, with webpack:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'@svgr/webpack\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ---</span>\n<span class="token keyword">import</span> StarIcon <span class="token keyword">from</span> <span class="token string">\'./star.svg\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>StarIcon<span class="token punctuation">}</span></span> <span class="token attr-name">inheritViewBox</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>It&#39;s also possible to use it with &quot;url-loader&quot; or &quot;file-loader&quot;. This is the approach used by Create React App.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'@svgr/webpack\'</span><span class="token punctuation">,</span> <span class="token string">\'url-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ---</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactComponent <span class="token keyword">as</span> StarIcon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./star.svg\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>StarIcon<span class="token punctuation">}</span></span> <span class="token attr-name">inheritViewBox</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="createsvgicon">createSvgIcon<a aria-labelledby="createsvgicon" class="anchor-link-style" href="#createsvgicon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createSvgIcon</code> utility component is used to create the <a href="#material-icons">Material Icons</a>. It can be used to wrap an SVG path with an SvgIcon component.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">const</span> HomeIcon <span class="token operator">=</span> <span class="token function">createSvgIcon</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  <span class="token string">\'Home\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"CreateSvgIcon.js"},'<h3 id="font-awesome">Font Awesome<a aria-labelledby="font-awesome" class="anchor-link-style" href="#font-awesome" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you find that there are layout issues when using FontAwesomeIcon from <code>@fortawesome/react-fontawesome</code>, you can try passing the Font Awesome SVG data directly to SvgIcon.</p>\n<p>Below is a comparison of the <code>FontAwesomeIcon</code> component and a wrapped <code>SvgIcon</code> component.</p>\n',{demo:"FontAwesomeSvgIconDemo.js"},'<p>FontAwesomeIcon&#39;s <code>fullWidth</code> prop can also be used to approximate the correct dimensions, but it isn&#39;t perfect.</p>\n<h3 id="other-libraries">Other Libraries<a aria-labelledby="other-libraries" class="anchor-link-style" href="#other-libraries" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>MDI</h4><p><a href="https://materialdesignicons.com/" target="_blank" rel="noopener nofollow">materialdesignicons.com</a> provides over 2,000 icons.\nFor the wanted icon, copy the SVG <code>path</code> they provide, and use it as the child of the <code>SvgIcon</code> component, or with <code>createSvgIcon()</code>.</p>\n<p>Note: <a href="https://github.com/TeamWertarbyte/mdi-material-ui">mdi-material-ui</a> has already wrapped each of these SVG icons with the <code>SvgIcon</code> component, so you don&#39;t have to do it yourself.</p>\n<h2 id="icon-font-icons">Icon (Font icons)<a aria-labelledby="icon-font-icons" class="anchor-link-style" href="#icon-font-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Icon</code> component will display an icon from any icon font that supports ligatures.\nAs a prerequisite, you must include one, such as the\n<a href="https://google.github.io/material-design-icons/#icon-font-for-the-web">Material Icons font</a> in your project.\nTo use an icon simply wrap the icon name (font ligature) with the <code>Icon</code> component,\nfor example:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>star<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>By default, an Icon will inherit the current text color.\nOptionally, you can set the icon color using one of the theme color properties: <code>primary</code>, <code>secondary</code>, <code>action</code>, <code>error</code> &amp; <code>disabled</code>.</p>\n<h3 id="font-material-icons">Font Material Icons<a aria-labelledby="font-material-icons" class="anchor-link-style" href="#font-material-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>Icon</code> will by default set the correct base class name for the Material Icons font (filled variant).\nAll you need to do is load the font, for instance, via Google Web Fonts:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>\n  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/icon?family=Material+Icons<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"Icons.js"},'<h3 id="custom-font">Custom font<a aria-labelledby="custom-font" class="anchor-link-style" href="#custom-font" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For other fonts, you can customize the baseline class name using the <code>baseClassName</code> prop.\nFor instance, you can display two-tone icons with Material Design:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>\n  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family=Material+Icons+Two+Tone<span class="token punctuation">"</span></span>\n  <span class="token comment">// Import the two tones MD variant                           ^^^^^^^^</span>\n<span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"TwoToneIcons.js"},'<h4>Global base class name</h4><p>Modifying the <code>baseClassName</code> prop for each component usage is repetitive.\nYou can change the default prop globally with the theme</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiIcon</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">defaultProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Replace the `material-icons` default value.</span>\n        <span class="token literal-property property">baseClassName</span><span class="token operator">:</span> <span class="token string">\'material-icons-two-tone\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then, you can use the two-tone font directly:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>add_circle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="font-awesome-2">Font Awesome<a aria-labelledby="font-awesome-2" class="anchor-link-style" href="#font-awesome-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><a href="https://fontawesome.com/icons">Font Awesome</a> can be used with the <code>Icon</code> component as follows:</p>\n',{demo:"FontAwesomeIcon.js"},'<p>Note that the Font Awesome icons weren&#39;t designed like the Material Icons (compare the two previous demos).\nThe fa icons are cropped to use all the space available. You can adjust for this with a global override:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiIcon</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// Match 24px = 3 * 2 + 1.125 * 16</span>\n          <span class="token literal-property property">boxSizing</span><span class="token operator">:</span> <span class="token string">\'content-box\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">\'1.125rem\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"FontAwesomeIconSize.js"},'<h2 id="font-vs-svg-which-approach-to-use">Font vs SVG. Which approach to use?<a aria-labelledby="font-vs-svg-which-approach-to-use" class="anchor-link-style" href="#font-vs-svg-which-approach-to-use" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Both approaches work fine, however there are some subtle differences, especially in terms of performance and rendering quality.\nWhenever possible SVG is preferred as it allows code splitting, supports more icons, and renders faster and better.</p>\n<p>For more details, take a look at <a href="https://github.blog/2016-02-22-delivering-octicons-with-svg/">why GitHub migrated from font icons to SVG icons</a>.</p>\n<h2 id="accessibility">Accessibility<a aria-labelledby="accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Icons can convey all sorts of meaningful information, so it&#39;s important to ensure they are accessible where appropriate.\nThere are two use cases you&#39;ll want to consider:</p>\n<ul>\n<li><strong>Decorative icons</strong> that are only being used for visual or branding reinforcement.\nIf they were removed from the page, users would still understand and be able to use your page.</li>\n<li><strong>Semantic icons</strong> are ones that you&#39;re using to convey meaning, rather than just pure decoration.\nThis includes icons without text next to them that are used as interactive controls \u2014 buttons, form elements, toggles, etc.</li>\n</ul>\n<h3 id="decorative-icons">Decorative icons<a aria-labelledby="decorative-icons" class="anchor-link-style" href="#decorative-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If your icons are purely decorative, you&#39;re already done!\nThe <code>aria-hidden=true</code> attribute is added so that your icons are properly accessible (invisible).</p>\n<h3 id="semantic-icons">Semantic icons<a aria-labelledby="semantic-icons" class="anchor-link-style" href="#semantic-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>Semantic SVG icons</h4><p>You should include the <code>titleAccess</code> prop with a meaningful value.\nThe <code>role=&quot;img&quot;</code> attribute and the <code>&lt;title&gt;</code> element are added so that your icons are correctly accessible.</p>\n<p>In the case of focusable interactive elements, for example when used with an icon button, you can use the <code>aria-label</code> prop:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> IconButton <span class="token keyword">from</span> <span class="token string">\'@mui/material/IconButton\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> SvgIcon <span class="token keyword">from</span> <span class="token string">\'@mui/material/SvgIcon\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconButton</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>delete<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IconButton</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>Semantic font icons</h4><p>You need to provide a text alternative that is only visible to assistive technologies.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">\'@mui/material/Box\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> visuallyHidden <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/utils\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>add_circle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Box</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>span<span class="token punctuation">"</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>visuallyHidden<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Create a user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Box</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>Reference</h4><ul>\n<li><a href="https://www.tpgi.com/using-aria-enhance-svg-accessibility/">https://www.tpgi.com/using-aria-enhance-svg-accessibility/</a></li>\n</ul>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/material-ui/api/icon/"><code>&lt;Icon /&gt;</code></a></li>\n<li><a href="/material-ui/api/svg-icon/"><code>&lt;SvgIcon /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Material SVG icons",level:2,hash:"material-svg-icons",children:[{text:"Installation",level:3,hash:"installation"},{text:"Usage",level:3,hash:"usage"},{text:"Testing",level:3,hash:"testing"}]},{text:"SvgIcon",level:2,hash:"svgicon",children:[{text:"Color",level:3,hash:"color"},{text:"Size",level:3,hash:"size"},{text:"Component prop",level:3,hash:"component-prop"},{text:"createSvgIcon",level:3,hash:"createsvgicon"},{text:"Font Awesome",level:3,hash:"font-awesome"},{text:"Other Libraries",level:3,hash:"other-libraries"}]},{text:"Icon (Font icons)",level:2,hash:"icon-font-icons",children:[{text:"Font Material Icons",level:3,hash:"font-material-icons"},{text:"Custom font",level:3,hash:"custom-font"},{text:"Font Awesome",level:3,hash:"font-awesome-2"}]},{text:"Font vs SVG. Which approach to use?",level:2,hash:"font-vs-svg-which-approach-to-use",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[{text:"Decorative icons",level:3,hash:"decorative-icons"},{text:"Semantic icons",level:3,hash:"semantic-icons"}]},{text:"API",level:2,hash:"api",children:[]}],title:"React Icon Component",headers:{product:"material-ui",title:"React Icon Component",components:["Icon","SvgIcon"],githubLabel:"components: SvgIcon",materialDesign:"https://m2.material.io/design/iconography/system-icons.html"}},pt:{description:"Orienta\xe7\xe3o e sugest\xf5es para usar \xedcones com o Material-UI.",location:"/docs/data/material/components/icons/icons-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>\xcdcones</h1><p class="description">Orienta\xe7\xe3o e sugest\xf5es para usar \xedcones com o Material-UI.</p>\n\n<p>Material-UI fornece suporte de \xedcones de tr\xeas maneiras:</p>\n<ol>\n<li>Standardized <a href="#material-svg-icons">Material Icons</a> exported as React components (SVG icons).</li>\n<li>Com o componente <a href="#svgicon">SvgIcon</a>, um wrapper React para \xedcones SVG customizados.</li>\n<li>Com o componente <a href="#icon-font-icons">Icon</a>, um wrapper React para \xedcones de fonte customizados.</li>\n</ol>\n<h2 id="material-svg-icons">Material SVG icons<a aria-labelledby="material-svg-icons" class="anchor-link-style" href="#material-svg-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Google has created over 2,000 official Material icons, each in five different &quot;themes&quot; (see below). Para cada \xedcone SVG, exportamos o respectivo componente React do pacote @material-ui/icons. You can <a href="/pt/material-ui/material-icons/">search the full list of these icons</a>.</p>\n<h3 id="installation">Instala\xe7\xe3o<a aria-labelledby="installation" class="anchor-link-style" href="#installation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>To install and save in your <code>package.json</code> dependencies, run the command below using <strong>npm</strong>:</p>\n<div class="MuiCode-root"><pre><code class="language-sh">npm install @mui<span class="token operator">/</span>icons<span class="token operator">-</span>material\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Or <strong>yarn</strong>:</p>\n<div class="MuiCode-root"><pre><code class="language-sh">yarn add @mui<span class="token operator">/</span>icons<span class="token operator">-</span>material\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>These components use the MUI <code>SvgIcon</code> component to render the SVG path for each icon, and so have a peer-dependency on <code>@mui/material</code>.</p>\n<p>If you aren&#39;t already using Material UI in your project, you can add it following the <a href="/pt/material-ui/getting-started/installation/">installation guide</a>.</p>\n<h3 id="usage">Uso<a aria-labelledby="usage" class="anchor-link-style" href="#usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Import icons using one of these two options:</p>\n<ul>\n<li><p>Op\xe7\xe3o 1:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> AccessAlarmIcon <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/AccessAlarm\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ThreeDRotation <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/ThreeDRotation\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n<li><p>Op\xe7\xe3o 2:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> AccessAlarm<span class="token punctuation">,</span> ThreeDRotation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n</ul>\n<p>The safest for bundle size is Option 1, but some developers prefer Option 2. Make sure you follow the <a href="/pt/material-ui/guides/minimizing-bundle-size/#option-two-use-a-babel-plugin">minimizing bundle size guide</a> before using the second approach.</p>\n<p>Each Material icon also has a &quot;theme&quot;: Filled (default), Outlined, Rounded, Two-tone, and Sharp. To import the icon component with a theme other than the default, append the theme name to the icon name. For example <code>@mui/icons-material/Delete</code> icon with:</p>\n<ul>\n<li>Tema Filled (preenchido que \xe9 o padr\xe3o) \xe9 exportado como <code>@material-ui/icons/Delete</code>,</li>\n<li>Tema Outlined (contornado) \xe9 exportado como <code>@material-ui/icons/DeleteOutlined</code>,</li>\n<li>Tema Rounded (arredondado) \xe9 exportado como <code>@material-ui/icons/DeleteRounded</code>,</li>\n<li>Tema Two tone (dois tons) \xe9 exportado como <code>@material-ui/icons/DeleteTwoTone</code>,</li>\n<li>Tema Sharp (pontiagudo) \xe9 exportado como <code>@material-ui/icons/DeleteSharp</code>.</li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-info"><p>Note: The Material Design guidelines name the icons using &quot;snake_case&quot; naming (for example <code>delete_forever</code>, <code>add_a_photo</code>), while <code>@mui/icons-material</code> exports the respective icons using &quot;PascalCase&quot; naming (for example <code>DeleteForever</code>, <code>AddAPhoto</code>). There are three exceptions to this naming rule: <code>3d_rotation</code> exported as <code>ThreeDRotation</code>, <code>4k</code> exported as <code>FourK</code>, and <code>360</code> exported as <code>ThreeSixty</code>.</p>\n\n</aside>',{demo:"SvgMaterialIcons.js"},'<h3 id="testing">Testando<a aria-labelledby="testing" class="anchor-link-style" href="#testing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For testing purposes, each icon exposed from <code>@mui/icons-material</code> has a <code>data-testid</code> attribute with the name of the icon. For instance:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> DeleteIcon <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/Delete\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>has the following attribute once mounted:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">data-testid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DeleteIcon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="svgicon">SvgIcon<a aria-labelledby="svgicon" class="anchor-link-style" href="#svgicon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>If you need a custom SVG icon (not available in the <a href="/pt/material-ui/material-icons/">Material Icons</a>) you can use the <code>SvgIcon</code> wrapper. This component extends the native <code>&lt;svg&gt;</code> element:</p>\n<ul>\n<li>Ele vem internamente com a acessibilidade.</li>\n<li>Os elementos SVG devem ser dimensionados para uma visualiza\xe7\xe3o de 24x24px, de modo que o \xedcone resultante possa ser usado como est\xe1, ou inclu\xeddo como filho para outros componentes de Material-UI que usam \xedcones. This can be customized with the <code>viewBox</code> attribute. To inherit the <code>viewBox</code> value from the original image, the <code>inheritViewBox</code> prop can be used.</li>\n<li>Por padr\xe3o, o componente herda a cor atual. Opcionalmente, voc\xea pode aplicar uma das cores do tema usando a propriedade <code>color</code>.</li>\n</ul>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">function</span> <span class="token function">HomeIcon</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="color">Cor<a aria-labelledby="color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SvgIconsColor.js"},'<h3 id="size">Tamanho<a aria-labelledby="size" class="anchor-link-style" href="#size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SvgIconsSize.js"},'<h3 id="component-prop">Propriedade Componente<a aria-labelledby="component-prop" class="anchor-link-style" href="#component-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>You can use the <code>SvgIcon</code> wrapper even if your icons are saved in the <code>.svg</code> format. <a href="https://github.com/gregberge/svgr">svgr</a> has loaders to import SVG files and use them as React components. For example, with webpack:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'@svgr/webpack\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ---</span>\n<span class="token keyword">import</span> StarIcon <span class="token keyword">from</span> <span class="token string">\'./star.svg\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>StarIcon<span class="token punctuation">}</span></span> <span class="token attr-name">inheritViewBox</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>It&#39;s also possible to use it with &quot;url-loader&quot; or &quot;file-loader&quot;. This is the approach used by Create React App.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'@svgr/webpack\'</span><span class="token punctuation">,</span> <span class="token string">\'url-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ---</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactComponent <span class="token keyword">as</span> StarIcon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./star.svg\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>StarIcon<span class="token punctuation">}</span></span> <span class="token attr-name">inheritViewBox</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="createsvgicon">createSvgIcon<a aria-labelledby="createsvgicon" class="anchor-link-style" href="#createsvgicon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createSvgIcon</code> utility component is used to create the <a href="#material-icons">Material Icons</a>. It can be used to wrap an SVG path with an SvgIcon component.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">const</span> HomeIcon <span class="token operator">=</span> <span class="token function">createSvgIcon</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  <span class="token string">\'Home\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"CreateSvgIcon.js"},'<h3 id="font-awesome">Fonte Awesome<a aria-labelledby="font-awesome" class="anchor-link-style" href="#font-awesome" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you find that there are layout issues when using FontAwesomeIcon from <code>@fortawesome/react-fontawesome</code>, you can try passing the Font Awesome SVG data directly to SvgIcon.</p>\n<p>Below is a comparison of the <code>FontAwesomeIcon</code> component and a wrapped <code>SvgIcon</code> component.</p>\n',{demo:"FontAwesomeSvgIconDemo.js"},'<p>FontAwesomeIcon&#39;s <code>fullWidth</code> prop can also be used to approximate the correct dimensions, but it isn&#39;t perfect.</p>\n<h3 id="other-libraries">Fonte Material icons<a aria-labelledby="other-libraries" class="anchor-link-style" href="#other-libraries" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>MDI</h4><p><a href="https://materialdesignicons.com/" target="_blank" rel="noopener nofollow">materialdesignicons.com</a> provides over 2,000 icons. For the wanted icon, copy the SVG <code>path</code> they provide, and use it as the child of the <code>SvgIcon</code> component, or with <code>createSvgIcon()</code>.</p>\n<p>Note: <a href="https://github.com/TeamWertarbyte/mdi-material-ui">mdi-material-ui</a> has already wrapped each of these SVG icons with the <code>SvgIcon</code> component, so you don&#39;t have to do it yourself.</p>\n<h2 id="icon-font-icons">\xcdcone (\xedcones de fonte)<a aria-labelledby="icon-font-icons" class="anchor-link-style" href="#icon-font-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Icon</code> component will display an icon from any icon font that supports ligatures. As a prerequisite, you must include one, such as the <a href="https://google.github.io/material-design-icons/#icon-font-for-the-web">Material Icons font</a> in your project. To use an icon simply wrap the icon name (font ligature) with the <code>Icon</code> component, for example:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>star<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>By default, an Icon will inherit the current text color. Optionally, you can set the icon color using one of the theme color properties: <code>primary</code>, <code>secondary</code>, <code>action</code>, <code>error</code> &amp; <code>disabled</code>.</p>\n<h3 id="font-material-icons">Font Material Icons<a aria-labelledby="font-material-icons" class="anchor-link-style" href="#font-material-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>Icon</code> will by default set the correct base class name for the Material Icons font (filled variant). All you need to do is load the font, for instance, via Google Web Fonts:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>\n  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/icon?family=Material+Icons<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"Icons.js"},'<h3 id="custom-font">Fonte customizada<a aria-labelledby="custom-font" class="anchor-link-style" href="#custom-font" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For other fonts, you can customize the baseline class name using the <code>baseClassName</code> prop. For instance, you can display two-tone icons with Material Design:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>\n  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family=Material+Icons+Two+Tone<span class="token punctuation">"</span></span>\n  <span class="token comment">// Import the two tones MD variant                           ^^^^^^^^</span>\n<span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"TwoToneIcons.js"},'<h4>Nome da classe base global</h4><p>Modifying the <code>baseClassName</code> prop for each component usage is repetitive. You can change the default prop globally with the theme</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiIcon</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">defaultProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Replace the `material-icons` default value.</span>\n        <span class="token literal-property property">baseClassName</span><span class="token operator">:</span> <span class="token string">\'material-icons-two-tone\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then, you can use the two-tone font directly:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>add_circle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="font-awesome-2">Fonte Awesome<a aria-labelledby="font-awesome-2" class="anchor-link-style" href="#font-awesome-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><a href="https://fontawesome.com/icons">Font Awesome</a> can be used with the <code>Icon</code> component as follows:</p>\n',{demo:"FontAwesomeIcon.js"},'<p>Note that the Font Awesome icons weren&#39;t designed like the Material Icons (compare the two previous demos). The fa icons are cropped to use all the space available. You can adjust for this with a global override:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiIcon</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// Match 24px = 3 * 2 + 1.125 * 16</span>\n          <span class="token literal-property property">boxSizing</span><span class="token operator">:</span> <span class="token string">\'content-box\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">\'1.125rem\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"FontAwesomeIconSize.js"},'<h2 id="font-vs-svg-which-approach-to-use">Fonte vs SVG. Qual abordagem usar?<a aria-labelledby="font-vs-svg-which-approach-to-use" class="anchor-link-style" href="#font-vs-svg-which-approach-to-use" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Both approaches work fine, however there are some subtle differences, especially in terms of performance and rendering quality. Whenever possible SVG is preferred as it allows code splitting, supports more icons, and renders faster and better.</p>\n<p>For more details, take a look at <a href="https://github.blog/2016-02-22-delivering-octicons-with-svg/">why GitHub migrated from font icons to SVG icons</a>.</p>\n<h2 id="accessibility">Acessibilidade<a aria-labelledby="accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Icons can convey all sorts of meaningful information, so it&#39;s important to ensure they are accessible where appropriate. There are two use cases you&#39;ll want to consider:</p>\n<ul>\n<li><strong>\xcdcones decorativos</strong> que s\xe3o usados apenas para refor\xe7o visual ou de marca. Se eles forem removidos da p\xe1gina, os usu\xe1rios ainda entenderiam e poderiam usar sua p\xe1gina.</li>\n<li><strong>Semantic icons</strong> are ones that you&#39;re using to convey meaning, rather than just pure decoration. Isso inclui \xedcones sem texto ao lado deles que s\xe3o usados como controles interativos \u2014 bot\xf5es, elementos de forma, toggles, etc.</li>\n</ul>\n<h3 id="decorative-icons">\xcdcones decorativos<a aria-labelledby="decorative-icons" class="anchor-link-style" href="#decorative-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If your icons are purely decorative, you&#39;re already done! The <code>aria-hidden=true</code> attribute is added so that your icons are properly accessible (invisible).</p>\n<h3 id="semantic-icons">\xcdcones sem\xe2nticos<a aria-labelledby="semantic-icons" class="anchor-link-style" href="#semantic-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>\xcdcones SVG sem\xe2nticos</h4><p>You should include the <code>titleAccess</code> prop with a meaningful value. The <code>role=&quot;img&quot;</code> attribute and the <code>&lt;title&gt;</code> element are added so that your icons are correctly accessible.</p>\n<p>In the case of focusable interactive elements, for example when used with an icon button, you can use the <code>aria-label</code> prop:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> IconButton <span class="token keyword">from</span> <span class="token string">\'@mui/material/IconButton\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> SvgIcon <span class="token keyword">from</span> <span class="token string">\'@mui/material/SvgIcon\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconButton</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>delete<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IconButton</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>\xcdcones de fonte sem\xe2nticos</h4><p>You need to provide a text alternative that is only visible to assistive technologies.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">\'@mui/material/Box\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> visuallyHidden <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/utils\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>add_circle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Box</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>span<span class="token punctuation">"</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>visuallyHidden<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Create a user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Box</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>Refer\xeancia</h4><ul>\n<li><a href="https://www.tpgi.com/using-aria-enhance-svg-accessibility/">https://www.tpgi.com/using-aria-enhance-svg-accessibility/</a></li>\n</ul>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/pt/material-ui/api/icon/"><code>&lt;Icon /&gt;</code></a></li>\n<li><a href="/pt/material-ui/api/svg-icon/"><code>&lt;SvgIcon /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Material SVG icons",level:2,hash:"material-svg-icons",children:[{text:"Instala\xe7\xe3o",level:3,hash:"installation"},{text:"Uso",level:3,hash:"usage"},{text:"Testando",level:3,hash:"testing"}]},{text:"SvgIcon",level:2,hash:"svgicon",children:[{text:"Cor",level:3,hash:"color"},{text:"Tamanho",level:3,hash:"size"},{text:"Propriedade Componente",level:3,hash:"component-prop"},{text:"createSvgIcon",level:3,hash:"createsvgicon"},{text:"Fonte Awesome",level:3,hash:"font-awesome"},{text:"Fonte Material icons",level:3,hash:"other-libraries"}]},{text:"\xcdcone (\xedcones de fonte)",level:2,hash:"icon-font-icons",children:[{text:"Font Material Icons",level:3,hash:"font-material-icons"},{text:"Fonte customizada",level:3,hash:"custom-font"},{text:"Fonte Awesome",level:3,hash:"font-awesome-2"}]},{text:"Fonte vs SVG. Qual abordagem usar?",level:2,hash:"font-vs-svg-which-approach-to-use",children:[]},{text:"Acessibilidade",level:2,hash:"accessibility",children:[{text:"\xcdcones decorativos",level:3,hash:"decorative-icons"},{text:"\xcdcones sem\xe2nticos",level:3,hash:"semantic-icons"}]},{text:"API",level:2,hash:"api",children:[]}],title:"Componente React para \xcdcones",headers:{product:"material-ui",title:"Componente React para \xcdcones",components:["Icon","SvgIcon"],githubLabel:"components: SvgIcon",materialDesign:"https://m2.material.io/design/iconography/system-icons.html"}},zh:{description:"\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5efa\u8bae\u548c\u6307\u5bfc\uff0c\u80fd\u591f\u5e2e\u52a9\u60a8\u5728 MUI \u4e2d\u4f7f\u7528\u56fe\u6807\u3002",location:"/docs/data/material/components/icons/icons-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Icons \u56fe\u6807</h1><p class="description">\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5efa\u8bae\u548c\u6307\u5bfc\uff0c\u80fd\u591f\u5e2e\u52a9\u60a8\u5728 MUI \u4e2d\u4f7f\u7528\u56fe\u6807\u3002</p>\n\n<p>MUI\u901a\u8fc7\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u6765\u652f\u6301\u56fe\u6807\u7684\u4f7f\u7528\uff1a</p>\n<ol>\n<li>Standardized <a href="#material-svg-icons">Material Icons</a> exported as React components (SVG icons).</li>\n<li>\u6216\u8005\u53ef\u4ee5\u5c06\u81ea\u5b9a\u4e49\u7684 SVG \u56fe\u6807\u901a\u8fc7 <a href="#svgicon">SvgIcon</a> \u7ec4\u4ef6\u6765\u5305\u88c5\u6210\u4e00\u4e2a React \u7ec4\u4ef6\u3002</li>\n<li>\u6216\u8005\u53ef\u4ee5\u5c06\u81ea\u5b9a\u4e49\u7684 font \u56fe\u6807\u901a\u8fc7 <a href="#icon-font-icons"> Icon </a> \u7ec4\u4ef6\u6765\u5305\u88c5\u6210\u4e00\u4e2a React \u7ec4\u4ef6\u3002</li>\n</ol>\n<h2 id="material-svg-icons">Material SVG icons<a aria-labelledby="material-svg-icons" class="anchor-link-style" href="#material-svg-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Google has created over 2,000 official Material icons, each in five different &quot;themes&quot; (see below). \u5bf9\u4e8e\u6bcf\u4e2a SVG \u56fe\u6807\uff0c\u6211\u4eec\u4ece<code>@mui/icons-material</code> \u5305\u4e2d\u5bfc\u51fa\u76f8\u5e94\u7684 React \u7ec4\u4ef6\u3002 You can <a href="/zh/material-ui/material-icons/">search the full list of these icons</a>.</p>\n<h3 id="installation">\u5b89\u88c5<a aria-labelledby="installation" class="anchor-link-style" href="#installation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>To install and save in your <code>package.json</code> dependencies, run the command below using <strong>npm</strong>:</p>\n<div class="MuiCode-root"><pre><code class="language-sh">npm install @mui<span class="token operator">/</span>icons<span class="token operator">-</span>material\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Or <strong>yarn</strong>:</p>\n<div class="MuiCode-root"><pre><code class="language-sh">yarn add @mui<span class="token operator">/</span>icons<span class="token operator">-</span>material\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>These components use the MUI <code>SvgIcon</code> component to render the SVG path for each icon, and so have a peer-dependency on <code>@mui/material</code>.</p>\n<p>If you aren&#39;t already using Material UI in your project, you can add it following the <a href="/zh/material-ui/getting-started/installation/">installation guide</a>.</p>\n<h3 id="usage">\u4f7f\u7528<a aria-labelledby="usage" class="anchor-link-style" href="#usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Import icons using one of these two options:</p>\n<ul>\n<li><p>\u65b9\u6cd5 1:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> AccessAlarmIcon <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/AccessAlarm\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ThreeDRotation <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/ThreeDRotation\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n<li><p>\u65b9\u6cd5 2:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> AccessAlarm<span class="token punctuation">,</span> ThreeDRotation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n</li>\n</ul>\n<p>The safest for bundle size is Option 1, but some developers prefer Option 2. Make sure you follow the <a href="/zh/material-ui/guides/minimizing-bundle-size/#option-two-use-a-babel-plugin">minimizing bundle size guide</a> before using the second approach.</p>\n<p>Each Material icon also has a &quot;theme&quot;: Filled (default), Outlined, Rounded, Two-tone, and Sharp. To import the icon component with a theme other than the default, append the theme name to the icon name. For example <code>@mui/icons-material/Delete</code> icon with:</p>\n<ul>\n<li>\u5bfc\u51fa\u4e3a Filled \u4e3b\u9898\uff08\u9ed8\u8ba4\u503c\uff09\uff1a<code>@mui/icons/Delete</code>\uff0c</li>\n<li>\u5bfc\u51fa\u4e3a Outlined \u4e3b\u9898\uff1a<code>@mui/icons/DeleteOutlined</code>\uff0c</li>\n<li>\u5bfc\u51fa\u4e3a Rounded \u4e3b\u9898\uff1a<code>@mui/icons/DeleteRounded</code>\uff0c</li>\n<li>\u5bfc\u51fa\u4e3a Twotone \u4e3b\u9898\uff1a<code>@mui/icons/DeleteTwoTone</code>\uff0c</li>\n<li>\u5bfc\u51fa\u4e3a Sharp \u4e3b\u9898\uff1a<code>@mui/icons/DeleteSharp</code>\uff0c</li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-info"><p>Note: The Material Design guidelines name the icons using &quot;snake_case&quot; naming (for example <code>delete_forever</code>, <code>add_a_photo</code>), while <code>@mui/icons-material</code> exports the respective icons using &quot;PascalCase&quot; naming (for example <code>DeleteForever</code>, <code>AddAPhoto</code>). There are three exceptions to this naming rule: <code>3d_rotation</code> exported as <code>ThreeDRotation</code>, <code>4k</code> exported as <code>FourK</code>, and <code>360</code> exported as <code>ThreeSixty</code>.</p>\n\n</aside>',{demo:"SvgMaterialIcons.js"},'<h3 id="testing">\u6d4b\u8bd5<a aria-labelledby="testing" class="anchor-link-style" href="#testing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For testing purposes, each icon exposed from <code>@mui/icons-material</code> has a <code>data-testid</code> attribute with the name of the icon. For instance:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> DeleteIcon <span class="token keyword">from</span> <span class="token string">\'@mui/icons-material/Delete\'</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>has the following attribute once mounted:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">data-testid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DeleteIcon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="svgicon">SvgIcon\uff08Svg \u56fe\u6807\uff09<a aria-labelledby="svgicon" class="anchor-link-style" href="#svgicon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>If you need a custom SVG icon (not available in the <a href="/zh/material-ui/material-icons/">Material Icons</a>) you can use the <code>SvgIcon</code> wrapper. This component extends the native <code>&lt;svg&gt;</code> element:</p>\n<ul>\n<li>\u5b83\u5177\u5907\u4e00\u4e9b\u5185\u7f6e\u7684\u65e0\u969c\u788d\u8bbe\u8ba1\u3002</li>\n<li>SVG \u5143\u7d20\u5e94\u8be5\u5728 24x24px \u7684\u89c6\u53e3\u4e2d\u8fdb\u884c\u7f29\u653e\uff0c\u8fd9\u6837\u6240\u6e32\u67d3\u7684\u56fe\u6807\u5c31\u53ef\u4ee5\u6309\u539f\u6837\u4f7f\u7528\uff0c\u6216\u8005\u4f5c\u4e3a\u5176\u4ed6\u4f7f\u7528\u56fe\u6807\u7684 Material-UI \u7ec4\u4ef6\u7684\u5b50\u5143\u7d20\u3002 \u4f7f\u7528 <code>viewBox</code> \u5c5e\u6027\uff0c\u60a8\u53ef\u4ee5\u968f\u610f\u81ea\u5b9a\u4e49\u3002 \u8981\u7ee7\u627f\u539f\u59cb\u56fe\u50cf\u7684 <code>viewBox</code> \u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>inheritViewBox</code> \u5c5e\u6027\u3002</li>\n<li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u7ec4\u4ef6\u4f1a\u7ee7\u627f\u5f53\u524d\u7684\u989c\u8272\u3002 \u5f53\u7136\uff0c\u901a\u8fc7 <code>color</code> \u8fd9\u4e2a\u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u8ba9\u56fe\u6807\u4f7f\u7528\u4e3b\u9898\u91cc\u7684\u989c\u8272\u3002</li>\n</ul>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">function</span> <span class="token function">HomeIcon</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="color">Color \u989c\u8272<a aria-labelledby="color" class="anchor-link-style" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SvgIconsColor.js"},'<h3 id="size">Size \u5927\u5c0f<a aria-labelledby="size" class="anchor-link-style" href="#size" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SvgIconsSize.js"},'<h3 id="component-prop">\u7ec4\u4ef6\u5c5e\u6027<a aria-labelledby="component-prop" class="anchor-link-style" href="#component-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>You can use the <code>SvgIcon</code> wrapper even if your icons are saved in the <code>.svg</code> format. <a href="https://github.com/gregberge/svgr">svgr</a> has loaders to import SVG files and use them as React components. For example, with webpack:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'@svgr/webpack\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ---</span>\n<span class="token keyword">import</span> StarIcon <span class="token keyword">from</span> <span class="token string">\'./star.svg\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>StarIcon<span class="token punctuation">}</span></span> <span class="token attr-name">inheritViewBox</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>It&#39;s also possible to use it with &quot;url-loader&quot; or &quot;file-loader&quot;. This is the approach used by Create React App.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token comment">// webpack.config.js</span>\n<span class="token punctuation">{</span>\n  <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'@svgr/webpack\'</span><span class="token punctuation">,</span> <span class="token string">\'url-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ---</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactComponent <span class="token keyword">as</span> StarIcon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./star.svg\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>StarIcon<span class="token punctuation">}</span></span> <span class="token attr-name">inheritViewBox</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="createsvgicon">createSvgIcon<a aria-labelledby="createsvgicon" class="anchor-link-style" href="#createsvgicon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>createSvgIcon</code> utility component is used to create the <a href="#material-icons">Material Icons</a>. It can be used to wrap an SVG path with an SvgIcon component.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">const</span> HomeIcon <span class="token operator">=</span> <span class="token function">createSvgIcon</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  <span class="token string">\'Home\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"CreateSvgIcon.js"},'<h3 id="font-awesome">Font Awesome<a aria-labelledby="font-awesome" class="anchor-link-style" href="#font-awesome" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you find that there are layout issues when using FontAwesomeIcon from <code>@fortawesome/react-fontawesome</code>, you can try passing the Font Awesome SVG data directly to SvgIcon.</p>\n<p>Below is a comparison of the <code>FontAwesomeIcon</code> component and a wrapped <code>SvgIcon</code> component.</p>\n',{demo:"FontAwesomeSvgIconDemo.js"},'<p>FontAwesomeIcon&#39;s <code>fullWidth</code> prop can also be used to approximate the correct dimensions, but it isn&#39;t perfect.</p>\n<h3 id="other-libraries">\u5176\u4ed6\u56fe\u6807\u5e93<a aria-labelledby="other-libraries" class="anchor-link-style" href="#other-libraries" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>MDI</h4><p><a href="https://materialdesignicons.com/" target="_blank" rel="noopener nofollow">materialdesignicons.com</a> provides over 2,000 icons. For the wanted icon, copy the SVG <code>path</code> they provide, and use it as the child of the <code>SvgIcon</code> component, or with <code>createSvgIcon()</code>.</p>\n<p>Note: <a href="https://github.com/TeamWertarbyte/mdi-material-ui">mdi-material-ui</a> has already wrapped each of these SVG icons with the <code>SvgIcon</code> component, so you don&#39;t have to do it yourself.</p>\n<h2 id="icon-font-icons">Icon\uff08\u5b57\u4f53\u56fe\u6807\uff09<a aria-labelledby="icon-font-icons" class="anchor-link-style" href="#icon-font-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Icon</code> component will display an icon from any icon font that supports ligatures. As a prerequisite, you must include one, such as the <a href="https://google.github.io/material-design-icons/#icon-font-for-the-web">Material Icons font</a> in your project. To use an icon simply wrap the icon name (font ligature) with the <code>Icon</code> component, for example:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>star<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>By default, an Icon will inherit the current text color. Optionally, you can set the icon color using one of the theme color properties: <code>primary</code>, <code>secondary</code>, <code>action</code>, <code>error</code> &amp; <code>disabled</code>.</p>\n<h3 id="font-material-icons">Font Material Icons<a aria-labelledby="font-material-icons" class="anchor-link-style" href="#font-material-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>Icon</code> will by default set the correct base class name for the Material Icons font (filled variant). All you need to do is load the font, for instance, via Google Web Fonts:</p>\n<div class="MuiCode-root"><pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>\n  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/icon?family=Material+Icons<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"Icons.js"},'<h3 id="custom-font">\u81ea\u5b9a\u4e49\u5b57\u4f53<a aria-labelledby="custom-font" class="anchor-link-style" href="#custom-font" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>For other fonts, you can customize the baseline class name using the <code>baseClassName</code> prop. For instance, you can display two-tone icons with Material Design:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>\n  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family=Material+Icons+Two+Tone<span class="token punctuation">"</span></span>\n  <span class="token comment">// Import the two tones MD variant                           ^^^^^^^^</span>\n<span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"TwoToneIcons.js"},'<h4>\u5168\u5c40\u7c7b\u540d</h4><p>Modifying the <code>baseClassName</code> prop for each component usage is repetitive. You can change the default prop globally with the theme</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiIcon</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">defaultProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Replace the `material-icons` default value.</span>\n        <span class="token literal-property property">baseClassName</span><span class="token operator">:</span> <span class="token string">\'material-icons-two-tone\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then, you can use the two-tone font directly:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>add_circle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="font-awesome-2">Font Awesome<a aria-labelledby="font-awesome-2" class="anchor-link-style" href="#font-awesome-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><a href="https://fontawesome.com/icons">Font Awesome</a> can be used with the <code>Icon</code> component as follows:</p>\n',{demo:"FontAwesomeIcon.js"},'<p>Note that the Font Awesome icons weren&#39;t designed like the Material Icons (compare the two previous demos). The fa icons are cropped to use all the space available. You can adjust for this with a global override:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiIcon</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// Match 24px = 3 * 2 + 1.125 * 16</span>\n          <span class="token literal-property property">boxSizing</span><span class="token operator">:</span> <span class="token string">\'content-box\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">\'1.125rem\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n',{demo:"FontAwesomeIconSize.js"},'<h2 id="font-vs-svg-which-approach-to-use">Font vs SVG\u3002 \u4f7f\u7528\u54ea\u4e2a\u66f4\u597d\u5462\uff1f<a aria-labelledby="font-vs-svg-which-approach-to-use" class="anchor-link-style" href="#font-vs-svg-which-approach-to-use" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Both approaches work fine, however there are some subtle differences, especially in terms of performance and rendering quality. Whenever possible SVG is preferred as it allows code splitting, supports more icons, and renders faster and better.</p>\n<p>For more details, take a look at <a href="https://github.blog/2016-02-22-delivering-octicons-with-svg/">why GitHub migrated from font icons to SVG icons</a>.</p>\n<h2 id="accessibility">\u65e0\u969c\u788d\u8bbe\u8ba1<a aria-labelledby="accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Icons can convey all sorts of meaningful information, so it&#39;s important to ensure they are accessible where appropriate. There are two use cases you&#39;ll want to consider:</p>\n<ul>\n<li><strong>\u88c5\u9970\u6027\u56fe\u6807</strong>\u4ec5\u7528\u4e8e\u589e\u5f3a\u89c6\u89c9\u6216\u5f3a\u8c03\u54c1\u724c\u3002 \u5373\u4f7f\u5c06\u5b83\u4eec\u4ece\u9875\u9762\u4e2d\u79fb\u9664\uff0c\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u7406\u89e3\u5e76\u80fd\u591f\u4f7f\u7528\u6574\u4e2a\u754c\u9762\u3002</li>\n<li><strong>\u8bed\u4e49\u56fe\u6807</strong>\u6307\u4f60\u7528\u6765\u4f20\u8fbe\u610f\u4e49\u7684\u56fe\u6807\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7eaf\u7cb9\u7684\u88c5\u9970\u3002 \u8fd9\u5305\u542b\u4e86\u6ca1\u6709\u6587\u5b57\u8f85\u52a9\u8bf4\u660e\u7684\u56fe\u6807\uff0c\u8fd9\u4e9b\u56fe\u6807\u4e00\u822c\u88ab\u7528\u4f5c\u5728\u4ea4\u4e92\u5f0f\u63a7\u4ef6\u4e2d \u2014 \u6309\u94ae\u3001\u8868\u5355\u5143\u7d20\u3001\u5207\u6362\u6309\u94ae\u7b49\u3002</li>\n</ul>\n<h3 id="decorative-icons">\u88c5\u9970\u6027\u56fe\u6807<a aria-labelledby="decorative-icons" class="anchor-link-style" href="#decorative-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If your icons are purely decorative, you&#39;re already done! The <code>aria-hidden=true</code> attribute is added so that your icons are properly accessible (invisible).</p>\n<h3 id="semantic-icons">\u8bed\u4e49\u56fe\u6807<a aria-labelledby="semantic-icons" class="anchor-link-style" href="#semantic-icons" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>\u8bed\u4e49\u5316\u7684 SVG icons</h4><p>You should include the <code>titleAccess</code> prop with a meaningful value. The <code>role=&quot;img&quot;</code> attribute and the <code>&lt;title&gt;</code> element are added so that your icons are correctly accessible.</p>\n<p>In the case of focusable interactive elements, for example when used with an icon button, you can use the <code>aria-label</code> prop:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> IconButton <span class="token keyword">from</span> <span class="token string">\'@mui/material/IconButton\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> SvgIcon <span class="token keyword">from</span> <span class="token string">\'@mui/material/SvgIcon\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconButton</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>delete<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">SvgIcon</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IconButton</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>\u8bed\u4e49\u5316\u7684 font icons</h4><p>You need to provide a text alternative that is only visible to assistive technologies.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">\'@mui/material/Box\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">\'@mui/material/Icon\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> visuallyHidden <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/utils\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>add_circle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Icon</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Box</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>span<span class="token punctuation">"</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>visuallyHidden<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Create a user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Box</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>\u53c2\u8003</h4><ul>\n<li><a href="https://www.tpgi.com/using-aria-enhance-svg-accessibility/">https://www.tpgi.com/using-aria-enhance-svg-accessibility/</a></li>\n</ul>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/zh/material-ui/api/icon/"><code>&lt;Icon /&gt;</code></a></li>\n<li><a href="/zh/material-ui/api/svg-icon/"><code>&lt;SvgIcon /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Material SVG icons",level:2,hash:"material-svg-icons",children:[{text:"\u5b89\u88c5",level:3,hash:"installation"},{text:"\u4f7f\u7528",level:3,hash:"usage"},{text:"\u6d4b\u8bd5",level:3,hash:"testing"}]},{text:"SvgIcon\uff08Svg \u56fe\u6807\uff09",level:2,hash:"svgicon",children:[{text:"Color \u989c\u8272",level:3,hash:"color"},{text:"Size \u5927\u5c0f",level:3,hash:"size"},{text:"\u7ec4\u4ef6\u5c5e\u6027",level:3,hash:"component-prop"},{text:"createSvgIcon",level:3,hash:"createsvgicon"},{text:"Font Awesome",level:3,hash:"font-awesome"},{text:"\u5176\u4ed6\u56fe\u6807\u5e93",level:3,hash:"other-libraries"}]},{text:"Icon\uff08\u5b57\u4f53\u56fe\u6807\uff09",level:2,hash:"icon-font-icons",children:[{text:"Font Material Icons",level:3,hash:"font-material-icons"},{text:"\u81ea\u5b9a\u4e49\u5b57\u4f53",level:3,hash:"custom-font"},{text:"Font Awesome",level:3,hash:"font-awesome-2"}]},{text:"Font vs SVG\u3002 \u4f7f\u7528\u54ea\u4e2a\u66f4\u597d\u5462\uff1f",level:2,hash:"font-vs-svg-which-approach-to-use",children:[]},{text:"\u65e0\u969c\u788d\u8bbe\u8ba1",level:2,hash:"accessibility",children:[{text:"\u88c5\u9970\u6027\u56fe\u6807",level:3,hash:"decorative-icons"},{text:"\u8bed\u4e49\u56fe\u6807",level:3,hash:"semantic-icons"}]},{text:"API",level:2,hash:"api",children:[]}],title:"React Icon\uff08\u56fe\u6807\uff09\u7ec4\u4ef6",headers:{product:"material-ui",title:"React Icon\uff08\u56fe\u6807\uff09\u7ec4\u4ef6",components:["Icon","SvgIcon"],githubLabel:"components: SvgIcon",materialDesign:"https://m2.material.io/design/iconography/system-icons.html"}}},qn={"SvgMaterialIcons.js":{module:"./SvgMaterialIcons.js",raw:"import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\nimport DeleteRoundedIcon from '@mui/icons-material/DeleteRounded';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport DeleteSharpIcon from '@mui/icons-material/DeleteSharp';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded';\nimport DeleteForeverTwoToneIcon from '@mui/icons-material/DeleteForeverTwoTone';\nimport DeleteForeverSharpIcon from '@mui/icons-material/DeleteForeverSharp';\nimport ThreeDRotationIcon from '@mui/icons-material/ThreeDRotation';\nimport FourKIcon from '@mui/icons-material/FourK';\nimport ThreeSixtyIcon from '@mui/icons-material/ThreeSixty';\n\nexport default function SvgMaterialIcons() {\n  return (\n    <Grid container sx={{ color: 'text.primary' }}>\n      <Grid item xs={4}>\n        <Typography>Filled</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteIcon />\n        <DeleteForeverIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Outlined</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteOutlinedIcon />\n        <DeleteForeverOutlinedIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Rounded</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteRoundedIcon />\n        <DeleteForeverRoundedIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Two Tone</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteTwoToneIcon />\n        <DeleteForeverTwoToneIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Sharp</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteSharpIcon />\n        <DeleteForeverSharpIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Edge-cases</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <ThreeDRotationIcon />\n        <FourKIcon />\n        <ThreeSixtyIcon />\n      </Grid>\n    </Grid>\n  );\n}\n",moduleTS:"./SvgMaterialIcons.js",rawTS:"import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\nimport DeleteRoundedIcon from '@mui/icons-material/DeleteRounded';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport DeleteSharpIcon from '@mui/icons-material/DeleteSharp';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded';\nimport DeleteForeverTwoToneIcon from '@mui/icons-material/DeleteForeverTwoTone';\nimport DeleteForeverSharpIcon from '@mui/icons-material/DeleteForeverSharp';\nimport ThreeDRotationIcon from '@mui/icons-material/ThreeDRotation';\nimport FourKIcon from '@mui/icons-material/FourK';\nimport ThreeSixtyIcon from '@mui/icons-material/ThreeSixty';\n\nexport default function SvgMaterialIcons() {\n  return (\n    <Grid container sx={{ color: 'text.primary' }}>\n      <Grid item xs={4}>\n        <Typography>Filled</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteIcon />\n        <DeleteForeverIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Outlined</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteOutlinedIcon />\n        <DeleteForeverOutlinedIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Rounded</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteRoundedIcon />\n        <DeleteForeverRoundedIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Two Tone</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteTwoToneIcon />\n        <DeleteForeverTwoToneIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Sharp</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <DeleteSharpIcon />\n        <DeleteForeverSharpIcon />\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>Edge-cases</Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <ThreeDRotationIcon />\n        <FourKIcon />\n        <ThreeSixtyIcon />\n      </Grid>\n    </Grid>\n  );\n}\n"},"SvgIconsColor.js":{module:"./SvgIconsColor.js",raw:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport { pink } from \'@mui/material/colors\';\nimport SvgIcon from \'@mui/material/SvgIcon\';\n\nfunction HomeIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" />\n    </SvgIcon>\n  );\n}\n\nexport default function SvgIconsColor() {\n  return (\n    <Box\n      sx={{\n        \'& > :not(style)\': {\n          m: 2,\n        },\n      }}\n    >\n      <HomeIcon />\n      <HomeIcon color="primary" />\n      <HomeIcon color="secondary" />\n      <HomeIcon color="success" />\n      <HomeIcon color="action" />\n      <HomeIcon color="disabled" />\n      <HomeIcon sx={{ color: pink[500] }} />\n    </Box>\n  );\n}\n',jsxPreview:'<HomeIcon />\n<HomeIcon color="primary" />\n<HomeIcon color="secondary" />\n<HomeIcon color="success" />\n<HomeIcon color="action" />\n<HomeIcon color="disabled" />\n<HomeIcon sx={{ color: pink[500] }} />',moduleTS:"./SvgIconsColor.js",rawTS:'import * as React from \'react\';\nimport Box from \'@mui/material/Box\';\nimport { pink } from \'@mui/material/colors\';\nimport SvgIcon, { SvgIconProps } from \'@mui/material/SvgIcon\';\n\nfunction HomeIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" />\n    </SvgIcon>\n  );\n}\n\nexport default function SvgIconsColor() {\n  return (\n    <Box\n      sx={{\n        \'& > :not(style)\': {\n          m: 2,\n        },\n      }}\n    >\n      <HomeIcon />\n      <HomeIcon color="primary" />\n      <HomeIcon color="secondary" />\n      <HomeIcon color="success" />\n      <HomeIcon color="action" />\n      <HomeIcon color="disabled" />\n      <HomeIcon sx={{ color: pink[500] }} />\n    </Box>\n  );\n}\n'},"SvgIconsSize.js":{module:"./SvgIconsSize.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nfunction HomeIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n    </SvgIcon>\n  );\n}\n\nexport default function SvgIconsSize() {\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 2,\n        },\n      }}\n    >\n      <HomeIcon fontSize=\"small\" />\n      <HomeIcon />\n      <HomeIcon fontSize=\"large\" />\n      <HomeIcon sx={{ fontSize: 40 }} />\n    </Box>\n  );\n}\n",jsxPreview:'<HomeIcon fontSize="small" />\n<HomeIcon />\n<HomeIcon fontSize="large" />\n<HomeIcon sx={{ fontSize: 40 }} />',moduleTS:"./SvgIconsSize.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\n\nfunction HomeIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n    </SvgIcon>\n  );\n}\n\nexport default function SvgIconsSize() {\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 2,\n        },\n      }}\n    >\n      <HomeIcon fontSize=\"small\" />\n      <HomeIcon />\n      <HomeIcon fontSize=\"large\" />\n      <HomeIcon sx={{ fontSize: 40 }} />\n    </Box>\n  );\n}\n"},"CreateSvgIcon.js":{module:"./CreateSvgIcon.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { createSvgIcon } from '@mui/material/utils';\n\nconst HomeIcon = createSvgIcon(\n  <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />,\n  'Home',\n);\n\nexport default function CreateSvgIcon() {\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 2,\n        },\n      }}\n    >\n      <HomeIcon />\n      <HomeIcon color=\"primary\" />\n    </Box>\n  );\n}\n",jsxPreview:'<HomeIcon />\n<HomeIcon color="primary" />',moduleTS:"./CreateSvgIcon.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { createSvgIcon } from '@mui/material/utils';\n\nconst HomeIcon = createSvgIcon(\n  <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />,\n  'Home',\n);\n\nexport default function CreateSvgIcon() {\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 2,\n        },\n      }}\n    >\n      <HomeIcon />\n      <HomeIcon color=\"primary\" />\n    </Box>\n  );\n}\n"},"FontAwesomeSvgIconDemo.js":{module:"./FontAwesomeSvgIconDemo.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons/faEllipsisV';\nimport { faInfo } from '@fortawesome/free-solid-svg-icons/faInfo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nconst FontAwesomeSvgIcon = React.forwardRef((props, ref) => {\n  const { icon } = props;\n\n  const {\n    icon: [width, height, , , svgPathData],\n  } = icon;\n\n  return (\n    <SvgIcon ref={ref} viewBox={`0 0 ${width} ${height}`}>\n      {typeof svgPathData === 'string' ? (\n        <path d={svgPathData} />\n      ) : (\n        /**\n         * A multi-path Font Awesome icon seems to imply a duotune icon. The 0th path seems to\n         * be the faded element (referred to as the \"secondary\" path in the Font Awesome docs)\n         * of a duotone icon. 40% is the default opacity.\n         *\n         * @see https://fontawesome.com/how-to-use/on-the-web/styling/duotone-icons#changing-opacity\n         */\n        svgPathData.map((d, i) => (\n          <path style={{ opacity: i === 0 ? 0.4 : 1 }} d={d} />\n        ))\n      )}\n    </SvgIcon>\n  );\n});\n\nFontAwesomeSvgIcon.propTypes = {\n  icon: PropTypes.any.isRequired,\n};\n\nexport default function FontAwesomeSvgIconDemo() {\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 1,\n        },\n      }}\n    >\n      <IconButton aria-label=\"Example\">\n        <FontAwesomeIcon icon={faEllipsisV} />\n      </IconButton>\n      <IconButton aria-label=\"Example\">\n        <FontAwesomeSvgIcon icon={faEllipsisV} />\n      </IconButton>\n      <Button variant=\"contained\" startIcon={<FontAwesomeIcon icon={faInfo} />}>\n        Example\n      </Button>\n      <Button variant=\"contained\" startIcon={<FontAwesomeSvgIcon icon={faInfo} />}>\n        Example\n      </Button>\n    </Box>\n  );\n}\n",jsxPreview:'<IconButton aria-label="Example">\n  <FontAwesomeIcon icon={faEllipsisV} />\n</IconButton>\n<IconButton aria-label="Example">\n  <FontAwesomeSvgIcon icon={faEllipsisV} />\n</IconButton>\n<Button variant="contained" startIcon={<FontAwesomeIcon icon={faInfo} />}>\n  Example\n</Button>\n<Button variant="contained" startIcon={<FontAwesomeSvgIcon icon={faInfo} />}>\n  Example\n</Button>',moduleTS:"./FontAwesomeSvgIconDemo.js",rawTS:"import * as React from 'react';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons/faEllipsisV';\nimport { faInfo } from '@fortawesome/free-solid-svg-icons/faInfo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\n\ntype FontAwesomeSvgIconProps = {\n  icon: any;\n};\n\nconst FontAwesomeSvgIcon = React.forwardRef<SVGSVGElement, FontAwesomeSvgIconProps>(\n  (props, ref) => {\n    const { icon } = props;\n\n    const {\n      icon: [width, height, , , svgPathData],\n    } = icon;\n\n    return (\n      <SvgIcon ref={ref} viewBox={`0 0 ${width} ${height}`}>\n        {typeof svgPathData === 'string' ? (\n          <path d={svgPathData} />\n        ) : (\n          /**\n           * A multi-path Font Awesome icon seems to imply a duotune icon. The 0th path seems to\n           * be the faded element (referred to as the \"secondary\" path in the Font Awesome docs)\n           * of a duotone icon. 40% is the default opacity.\n           *\n           * @see https://fontawesome.com/how-to-use/on-the-web/styling/duotone-icons#changing-opacity\n           */\n          svgPathData.map((d: string, i: number) => (\n            <path style={{ opacity: i === 0 ? 0.4 : 1 }} d={d} />\n          ))\n        )}\n      </SvgIcon>\n    );\n  },\n);\n\nexport default function FontAwesomeSvgIconDemo() {\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 1,\n        },\n      }}\n    >\n      <IconButton aria-label=\"Example\">\n        <FontAwesomeIcon icon={faEllipsisV} />\n      </IconButton>\n      <IconButton aria-label=\"Example\">\n        <FontAwesomeSvgIcon icon={faEllipsisV} />\n      </IconButton>\n      <Button variant=\"contained\" startIcon={<FontAwesomeIcon icon={faInfo} />}>\n        Example\n      </Button>\n      <Button variant=\"contained\" startIcon={<FontAwesomeSvgIcon icon={faInfo} />}>\n        Example\n      </Button>\n    </Box>\n  );\n}\n"},"Icons.js":{module:"./Icons.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { green } from '@mui/material/colors';\nimport Icon from '@mui/material/Icon';\n\nexport default function Icons() {\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 2,\n        },\n      }}\n    >\n      <Icon>add_circle</Icon>\n      <Icon color=\"primary\">add_circle</Icon>\n      <Icon sx={{ color: green[500] }}>add_circle</Icon>\n      <Icon fontSize=\"small\">add_circle</Icon>\n      <Icon sx={{ fontSize: 30 }}>add_circle</Icon>\n    </Box>\n  );\n}\n",jsxPreview:'<Icon>add_circle</Icon>\n<Icon color="primary">add_circle</Icon>\n<Icon sx={{ color: green[500] }}>add_circle</Icon>\n<Icon fontSize="small">add_circle</Icon>\n<Icon sx={{ fontSize: 30 }}>add_circle</Icon>',moduleTS:"./Icons.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { green } from '@mui/material/colors';\nimport Icon from '@mui/material/Icon';\n\nexport default function Icons() {\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 2,\n        },\n      }}\n    >\n      <Icon>add_circle</Icon>\n      <Icon color=\"primary\">add_circle</Icon>\n      <Icon sx={{ color: green[500] }}>add_circle</Icon>\n      <Icon fontSize=\"small\">add_circle</Icon>\n      <Icon sx={{ fontSize: 30 }}>add_circle</Icon>\n    </Box>\n  );\n}\n"},"TwoToneIcons.js":{module:"./TwoToneIcons.js",raw:"import * as React from 'react';\nimport Icon from '@mui/material/Icon';\n\nexport default function TwoToneIcons() {\n  return <Icon baseClassName=\"material-icons-two-tone\">add_circle</Icon>;\n}\n",jsxPreview:'<Icon baseClassName="material-icons-two-tone">add_circle</Icon>',moduleTS:"./TwoToneIcons.js",rawTS:"import * as React from 'react';\nimport Icon from '@mui/material/Icon';\n\nexport default function TwoToneIcons() {\n  return <Icon baseClassName=\"material-icons-two-tone\">add_circle</Icon>;\n}\n"},"FontAwesomeIcon.js":{module:"./FontAwesomeIcon.js",raw:'import * as React from \'react\';\nimport { loadCSS } from \'fg-loadcss\';\nimport Box from \'@mui/material/Box\';\nimport { green } from \'@mui/material/colors\';\nimport Icon from \'@mui/material/Icon\';\n\nexport default function FontAwesomeIcon() {\n  React.useEffect(() => {\n    const node = loadCSS(\n      \'https://use.fontawesome.com/releases/v5.14.0/css/all.css\',\n      // Inject before JSS\n      document.querySelector(\'#font-awesome-css\') || document.head.firstChild,\n    );\n\n    return () => {\n      node.parentNode.removeChild(node);\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        \'& > :not(style)\': {\n          m: 2,\n        },\n      }}\n    >\n      <Icon baseClassName="fas" className="fa-plus-circle" />\n      <Icon baseClassName="fas" className="fa-plus-circle" color="primary" />\n      <Icon\n        baseClassName="fas"\n        className="fa-plus-circle"\n        sx={{ color: green[500] }}\n      />\n      <Icon baseClassName="fas" className="fa-plus-circle" fontSize="small" />\n      <Icon baseClassName="fas" className="fa-plus-circle" sx={{ fontSize: 30 }} />\n    </Box>\n  );\n}\n',jsxPreview:'<Icon baseClassName="fas" className="fa-plus-circle" />\n<Icon baseClassName="fas" className="fa-plus-circle" color="primary" />\n<Icon\n  baseClassName="fas"\n  className="fa-plus-circle"\n  sx={{ color: green[500] }}\n/>\n<Icon baseClassName="fas" className="fa-plus-circle" fontSize="small" />\n<Icon baseClassName="fas" className="fa-plus-circle" sx={{ fontSize: 30 }} />',moduleTS:"./FontAwesomeIcon.js",rawTS:'import * as React from \'react\';\nimport { loadCSS } from \'fg-loadcss\';\nimport Box from \'@mui/material/Box\';\nimport { green } from \'@mui/material/colors\';\nimport Icon from \'@mui/material/Icon\';\n\nexport default function FontAwesomeIcon() {\n  React.useEffect(() => {\n    const node = loadCSS(\n      \'https://use.fontawesome.com/releases/v5.14.0/css/all.css\',\n      // Inject before JSS\n      document.querySelector(\'#font-awesome-css\') || document.head.firstChild,\n    );\n\n    return () => {\n      node.parentNode!.removeChild(node);\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        \'& > :not(style)\': {\n          m: 2,\n        },\n      }}\n    >\n      <Icon baseClassName="fas" className="fa-plus-circle" />\n      <Icon baseClassName="fas" className="fa-plus-circle" color="primary" />\n      <Icon\n        baseClassName="fas"\n        className="fa-plus-circle"\n        sx={{ color: green[500] }}\n      />\n      <Icon baseClassName="fas" className="fa-plus-circle" fontSize="small" />\n      <Icon baseClassName="fas" className="fa-plus-circle" sx={{ fontSize: 30 }} />\n    </Box>\n  );\n}\n'},"FontAwesomeIconSize.js":{module:"./FontAwesomeIconSize.js",raw:"import * as React from 'react';\nimport { loadCSS } from 'fg-loadcss';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Icon from '@mui/material/Icon';\nimport MdPhone from '@mui/icons-material/Phone';\nimport Chip from '@mui/material/Chip';\n\nconst theme = createTheme({\n  components: {\n    MuiIcon: {\n      styleOverrides: {\n        root: {\n          // Match 24px = 3 * 2 + 1.125 * 16\n          boxSizing: 'content-box',\n          padding: 3,\n          fontSize: '1.125rem',\n        },\n      },\n    },\n  },\n});\n\nexport default function FontAwesomeIconSize() {\n  React.useEffect(() => {\n    const node = loadCSS(\n      'https://use.fontawesome.com/releases/v5.14.0/css/all.css',\n      // Inject before JSS\n      document.querySelector('#font-awesome-css') || document.head.firstChild,\n    );\n\n    return () => {\n      node.parentNode.removeChild(node);\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 1,\n        },\n      }}\n    >\n      <ThemeProvider theme={theme}>\n        <Chip icon={<MdPhone />} label=\"Call me\" />\n        <Chip icon={<Icon className=\"fas fa-phone-alt\" />} label=\"Call me\" />\n      </ThemeProvider>\n    </Box>\n  );\n}\n",jsxPreview:'<ThemeProvider theme={theme}>\n  <Chip icon={<MdPhone />} label="Call me" />\n  <Chip icon={<Icon className="fas fa-phone-alt" />} label="Call me" />\n</ThemeProvider>',moduleTS:"./FontAwesomeIconSize.js",rawTS:"import * as React from 'react';\nimport { loadCSS } from 'fg-loadcss';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Icon from '@mui/material/Icon';\nimport MdPhone from '@mui/icons-material/Phone';\nimport Chip from '@mui/material/Chip';\n\nconst theme = createTheme({\n  components: {\n    MuiIcon: {\n      styleOverrides: {\n        root: {\n          // Match 24px = 3 * 2 + 1.125 * 16\n          boxSizing: 'content-box',\n          padding: 3,\n          fontSize: '1.125rem',\n        },\n      },\n    },\n  },\n});\n\nexport default function FontAwesomeIconSize() {\n  React.useEffect(() => {\n    const node = loadCSS(\n      'https://use.fontawesome.com/releases/v5.14.0/css/all.css',\n      // Inject before JSS\n      document.querySelector('#font-awesome-css') || document.head.firstChild,\n    );\n\n    return () => {\n      node.parentNode!.removeChild(node);\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        '& > :not(style)': {\n          m: 1,\n        },\n      }}\n    >\n      <ThemeProvider theme={theme}>\n        <Chip icon={<MdPhone />} label=\"Call me\" />\n        <Chip icon={<Icon className=\"fas fa-phone-alt\" />} label=\"Call me\" />\n      </ThemeProvider>\n    </Box>\n  );\n}\n"}};qn.scope={process:{},import:{react:k,"@mui/material/Grid":b,"@mui/material/Typography":x,"@mui/icons-material/Delete":w,"@mui/icons-material/DeleteOutlined":I,"@mui/icons-material/DeleteRounded":C,"@mui/icons-material/DeleteTwoTone":S,"@mui/icons-material/DeleteSharp":j,"@mui/icons-material/DeleteForever":M,"@mui/icons-material/DeleteForeverOutlined":z,"@mui/icons-material/DeleteForeverRounded":T,"@mui/icons-material/DeleteForeverTwoTone":Z,"@mui/icons-material/DeleteForeverSharp":A,"@mui/icons-material/ThreeDRotation":F,"@mui/icons-material/FourK":D,"@mui/icons-material/ThreeSixty":B,"@mui/material/Box":P,"@mui/material/colors":V,"@mui/material/SvgIcon":R,"@mui/material/utils":H,"prop-types":G,"@fortawesome/free-solid-svg-icons/faEllipsisV":_,"@fortawesome/free-solid-svg-icons/faInfo":E,"@fortawesome/react-fontawesome":q,"@mui/material/Button":L,"@mui/material/IconButton":$,"@mui/material/Icon":N,"fg-loadcss":O,"@mui/material/styles":K,"@mui/icons-material/Phone":U,"@mui/material/Chip":W}};var Ln={"./SvgMaterialIcons.js":function(){return(0,X.jsxs)(Y.ZP,{container:!0,sx:{color:"text.primary"},children:[o||(o=(0,X.jsx)(Y.ZP,{item:!0,xs:4,children:(0,X.jsx)(J.Z,{children:"Filled"})})),t||(t=(0,X.jsxs)(Y.ZP,{item:!0,xs:8,children:[(0,X.jsx)(w.default,{}),(0,X.jsx)(M.default,{})]})),c||(c=(0,X.jsx)(Y.ZP,{item:!0,xs:4,children:(0,X.jsx)(J.Z,{children:"Outlined"})})),i||(i=(0,X.jsxs)(Y.ZP,{item:!0,xs:8,children:[(0,X.jsx)(I.default,{}),(0,X.jsx)(z.default,{})]})),r||(r=(0,X.jsx)(Y.ZP,{item:!0,xs:4,children:(0,X.jsx)(J.Z,{children:"Rounded"})})),p||(p=(0,X.jsxs)(Y.ZP,{item:!0,xs:8,children:[(0,X.jsx)(C.default,{}),(0,X.jsx)(T.default,{})]})),l||(l=(0,X.jsx)(Y.ZP,{item:!0,xs:4,children:(0,X.jsx)(J.Z,{children:"Two Tone"})})),u||(u=(0,X.jsxs)(Y.ZP,{item:!0,xs:8,children:[(0,X.jsx)(S.default,{}),(0,X.jsx)(Z.default,{})]})),d||(d=(0,X.jsx)(Y.ZP,{item:!0,xs:4,children:(0,X.jsx)(J.Z,{children:"Sharp"})})),h||(h=(0,X.jsxs)(Y.ZP,{item:!0,xs:8,children:[(0,X.jsx)(j.default,{}),(0,X.jsx)(A.default,{})]})),m||(m=(0,X.jsx)(Y.ZP,{item:!0,xs:4,children:(0,X.jsx)(J.Z,{children:"Edge-cases"})})),v||(v=(0,X.jsxs)(Y.ZP,{item:!0,xs:8,children:[(0,X.jsx)(F.default,{}),(0,X.jsx)(D.default,{}),(0,X.jsx)(B.default,{})]}))]})},"./SvgIconsColor.js":function(){return(0,X.jsxs)(un.Z,{sx:{"& > :not(style)":{m:2}},children:[nn||(nn=(0,X.jsx)(mn,{})),an||(an=(0,X.jsx)(mn,{color:"primary"})),en||(en=(0,X.jsx)(mn,{color:"secondary"})),sn||(sn=(0,X.jsx)(mn,{color:"success"})),on||(on=(0,X.jsx)(mn,{color:"action"})),tn||(tn=(0,X.jsx)(mn,{color:"disabled"})),(0,X.jsx)(mn,{sx:{color:dn.Z[500]}})]})},"./SvgIconsSize.js":function(){return(0,X.jsxs)(un.Z,{sx:{"& > :not(style)":{m:2}},children:[rn||(rn=(0,X.jsx)(vn,{fontSize:"small"})),pn||(pn=(0,X.jsx)(vn,{})),ln||(ln=(0,X.jsx)(vn,{fontSize:"large"})),(0,X.jsx)(vn,{sx:{fontSize:40}})]})},"./CreateSvgIcon.js":function(){return(0,X.jsxs)(un.Z,{sx:{"& > :not(style)":{m:2}},children:[gn||(gn=(0,X.jsx)(kn,{})),fn||(fn=(0,X.jsx)(kn,{color:"primary"}))]})},"./FontAwesomeSvgIconDemo.js":function(){return(0,X.jsxs)(un.Z,{sx:{"& > :not(style)":{m:1}},children:[yn||(yn=(0,X.jsx)(Sn.Z,{"aria-label":"Example",children:(0,X.jsx)(q.FontAwesomeIcon,{icon:_.faEllipsisV})})),bn||(bn=(0,X.jsx)(Sn.Z,{"aria-label":"Example",children:(0,X.jsx)(jn,{icon:_.faEllipsisV})})),xn||(xn=(0,X.jsx)(Cn.Z,{variant:"contained",startIcon:(0,X.jsx)(q.FontAwesomeIcon,{icon:E.faInfo}),children:"Example"})),wn||(wn=(0,X.jsx)(Cn.Z,{variant:"contained",startIcon:(0,X.jsx)(jn,{icon:E.faInfo}),children:"Example"}))]})},"./Icons.js":function(){return(0,X.jsxs)(un.Z,{sx:{"& > :not(style)":{m:2}},children:[Mn||(Mn=(0,X.jsx)(Pn.Z,{children:"add_circle"})),zn||(zn=(0,X.jsx)(Pn.Z,{color:"primary",children:"add_circle"})),(0,X.jsx)(Pn.Z,{sx:{color:Bn.Z[500]},children:"add_circle"}),Tn||(Tn=(0,X.jsx)(Pn.Z,{fontSize:"small",children:"add_circle"})),(0,X.jsx)(Pn.Z,{sx:{fontSize:30},children:"add_circle"})]})},"./TwoToneIcons.js":function(){return Zn||(Zn=(0,X.jsx)(Pn.Z,{baseClassName:"material-icons-two-tone",children:"add_circle"}))},"./FontAwesomeIcon.js":function(){return f.useEffect((function(){var n=(0,O.loadCSS)("https://use.fontawesome.com/releases/v5.14.0/css/all.css",document.querySelector("#font-awesome-css")||document.head.firstChild);return function(){n.parentNode.removeChild(n)}}),[]),(0,X.jsxs)(un.Z,{sx:{"& > :not(style)":{m:2}},children:[An||(An=(0,X.jsx)(Pn.Z,{baseClassName:"fas",className:"fa-plus-circle"})),Fn||(Fn=(0,X.jsx)(Pn.Z,{baseClassName:"fas",className:"fa-plus-circle",color:"primary"})),(0,X.jsx)(Pn.Z,{baseClassName:"fas",className:"fa-plus-circle",sx:{color:Bn.Z[500]}}),Dn||(Dn=(0,X.jsx)(Pn.Z,{baseClassName:"fas",className:"fa-plus-circle",fontSize:"small"})),(0,X.jsx)(Pn.Z,{baseClassName:"fas",className:"fa-plus-circle",sx:{fontSize:30}})]})},"./FontAwesomeIconSize.js":function(){return f.useEffect((function(){var n=(0,O.loadCSS)("https://use.fontawesome.com/releases/v5.14.0/css/all.css",document.querySelector("#font-awesome-css")||document.head.firstChild);return function(){n.parentNode.removeChild(n)}}),[]),(0,X.jsx)(un.Z,{sx:{"& > :not(style)":{m:1}},children:Vn||(Vn=(0,X.jsxs)(Hn.Z,{theme:_n,children:[(0,X.jsx)(Gn.Z,{icon:(0,X.jsx)(U.default,{}),label:"Call me"}),(0,X.jsx)(Gn.Z,{icon:(0,X.jsx)(Pn.Z,{className:"fas fa-phone-alt"}),label:"Call me"})]}))})}},$n={};function Nn(){return(0,X.jsx)(y.Z,(0,g.Z)({},s))}},302954:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return h}});var s,o,t,c=e(146010),i=e(720325),r=e(314307),p=e(774517),l=e(811486),u=e(281547),d=e(824246);function h(n){var a=n.children,e=n.mode,h=(0,c.Z)(),m="dark"===(e||h.palette.mode)?p.GT:p.UB;return(0,d.jsxs)(i.Z,{theme:e?function(){return m}:m,children:[e?null:s||(s=(0,d.jsx)(l.F1,{})),e?null:o||(o=(0,d.jsx)(r.ZP,{})),e?null:t||(t=(0,d.jsx)(u.Z,{})),a]})}},307391:function(n,a,e){"use strict";e.d(a,{Z:function(){return Wn}});var s,o=e(295649),t=e(696138),c=e.n(t),i=e(827378),r=e(723615),p=e.n(r),l=e(724219),u=e.n(l),d=e(686677),h=e(61233),m=e(25778),v=e(957379),g=e(107361),f=e(290763),k=e(240120),y=e(633983),b=e(549303),x=e(757555),w=e(518894),I=e(933333),C=e(85275),S=e(481936),j=e(823315),M=e(199981),z=e.n(M),T=e(521883),Z=e(692095),A=e(889212),F=e(813371),D=e(505625),B=e(857958),P=e(13547),V=e(275191),R=e(393742),H=e(792718),G=e(146010),_=e(620587),E=e(720325),q=e(191895),L=e(446454),$=e(917014),N=e(309318),O=e(650432),K=e(328731),U=e(601344),W=e(833665),Y=e(672511),J=e(824246);var X=function(n){(0,O.Z)(e,n);var a=(0,K.Z)(e);function e(){var n;(0,L.Z)(this,e);for(var s=arguments.length,o=new Array(s),t=0;t<s;t++)o[t]=arguments[t];return n=a.call.apply(a,[this].concat(o)),(0,v.Z)((0,N.Z)(n),"state",{error:null}),n}return(0,$.Z)(e,[{key:"render",value:function(){var n=this.props,a=n.children,e=n.name,o=n.onResetDemoClick,t=n.t,i=this.state.error;if(i){var r="[docs] Demo ".concat(e," crashes"),p=encodeURIComponent("is:issue ".concat(r)),l=function(n){var a="https://github.com/".concat(n.user,"/").concat(n.repo,"/issues/new"),e=c()(n).map((function(a){var e=n[a];return"".concat(a,"=").concat(encodeURIComponent(String(e)))})).join("&");return"".concat(a,"?").concat(e)}({user:"mui",repo:"material-ui",title:r,body:"\n\x3c!-- Please make sure you have fullfilled the following items before submitting --\x3e\n\x3c!-- Checked checkbox should look like this: [x] --\x3e\n- [ ] I have [searched for similar issues](https://github.com/mui/material-ui/issues?q=".concat(p,") in this repository and believe that this is not a duplicate.\n\n## Steps to Reproduce\n1. Visit ").concat(window.location.href,"\n2. ??\n3. demo *").concat(e,"* crashes\n\n## Your Environment\n| Tech         | Version |\n|--------------|---------|\n| MUI  | v").concat("5.10.13","  |\n| Netlify deploy | ").concat("https://6369ac6f407fd00008c7a092--material-ui-docs.netlify.app"," |\n| Browser      | ").concat(window.navigator?window.navigator.userAgent:"*Unknown*"," |\n")});return(0,J.jsxs)("div",{children:[s||(s=(0,J.jsx)(U.Z,{color:"error",component:"p",variant:"h5",gutterBottom:!0,children:"This demo had a runtime error!"})),(0,J.jsxs)(U.Z,{children:["We would appreciate it if you"," ",(0,J.jsx)(W.Z,{href:l,rel:"noreferrer",target:"_blank",children:"report this error"})," ","directly in our issue tracker. You will be provided with a prefilled description that includes valuable information about this error."]}),(0,J.jsx)("pre",{style:{whiteSpace:"pre-wrap"},children:i.toString()}),(0,J.jsx)(Y.Z,{color:"secondary",onClick:o,variant:"text",children:t("resetDemo")})]})}return a}}],[{key:"getDerivedStateFromError",value:function(n){return{error:n}}}]),e}(i.Component),Q=e(328109),nn=e(269445),an=e(774517),en=e(549492),sn=["children","name"],on=["children","iframe","name","onResetDemoClick"];function tn(n){var a=n.children,e=n.document,s=(0,G.Z)();i.useEffect((function(){e.body.dir=s.direction}),[e,s.direction]);var o=i.useMemo((function(){return{jss:(0,Z.create)({plugins:[].concat((0,j.Z)((0,R.Z)().plugins),[(0,q.Z)()]),insertionPoint:e.head}),sheetsManager:new(z())}}),[e]),t=o.jss,c=o.sheetsManager,r=i.useMemo((function(){return(0,B.default)({key:"iframe-demo-".concat(s.direction),prepend:!0,container:e.head,stylisPlugins:"rtl"===s.direction?[A.Ji,F.default]:[A.Ji]})}),[e,s.direction]),p=i.useCallback((function(){return e.defaultView}),[e]);return(0,J.jsx)(H.ZP,{jss:t,sheetsManager:c,children:(0,J.jsx)(V.StyleSheetManager,{target:e.head,stylisPlugins:"rtl"===s.direction?[D.ZP]:[],children:(0,J.jsx)(P.C,{value:r,children:i.cloneElement(a,{window:p})})})})}var cn=(0,f.ZP)("iframe")((function(n){var a=n.theme;return{backgroundColor:a.palette.background.default,flexGrow:1,height:400,border:0,boxShadow:a.shadows[1]}}));function rn(n){var a,e=n.children,s=n.name,t=(0,S.Z)(n,sn),c=i.useRef(null),r=i.useReducer((function(){return!0}),!1),p=(0,m.Z)(r,2),l=p[0],u=p[1];i.useEffect((function(){var n=c.current.contentDocument;null==n||"complete"!==n.readyState||l||u()}),[l]);var d=null===(a=c.current)||void 0===a?void 0:a.contentDocument;return(0,J.jsxs)(i.Fragment,{children:[(0,J.jsx)(cn,(0,o.Z)({onLoad:u,ref:c,title:"".concat(s," demo")},t)),!1!==l?T.createPortal((0,J.jsx)(tn,{document:d,children:e}),d.body):null]})}var pn=(0,Z.create)({plugins:[].concat((0,j.Z)((0,R.Z)().plugins),[(0,q.Z)()]),insertionPoint:document.querySelector("#insertion-point-jss")});function ln(n){var a=(0,d.useRouter)(),e=(0,nn.ln)(a.asPath).canonicalAs,s=n.children,t=n.iframe,c=void 0!==t&&t,r=n.name,p=n.onResetDemoClick,l=(0,S.Z)(n,on),u=c?rn:i.Fragment,h=c?(0,o.Z)({name:r},l):{},m=(0,Q.useTranslate)(),v=(0,J.jsx)(u,(0,o.Z)((0,o.Z)({},h),{},{children:s}));return(0,J.jsx)(X,{name:r,onResetDemoClick:p,t:m,children:e.startsWith("/joy-ui")?v:(0,J.jsx)(H.ZP,{jss:pn,children:(0,J.jsx)(E.Z,{theme:function(n){return function(n){var a,e,s,t,c=(0,an.bk)(n.palette.mode),i=(null===(a=n.palette.primary)||void 0===a?void 0:a.main)&&n.palette.primary.main!==c.palette.primary.main,r=(0,_.Z)({palette:(0,o.Z)({mode:n.palette.mode||"light"},i&&{primary:{main:n.palette.primary.main},secondary:{main:n.palette.secondary.main}})},"dense"===(null===(e=n.components)||void 0===e||null===(s=e.MuiFormControl)||void 0===s||null===(t=s.defaultProps)||void 0===t?void 0:t.margin)?en.highDensity:{});return n.direction&&(r.direction=n.direction),n.spacing&&(r.spacing=n.spacing),r}(n)},children:v})})})}var un=i.memo(ln),dn=e(912765);function hn(n){var a=n.code,e=n.scope,s=n.onError,o=e;var t=(0,dn.ud)({code:a,scope:o}),c=t.element,r=t.error;return i.useEffect((function(){s(r)}),[r,s]),c}var mn=e(932062),vn=e.n(mn),gn=e(375205),fn=e(875678),kn=e.n(fn),yn=e(810552),bn=e(115205),xn=e(8779),wn=(0,f.ZP)(yn.default)((function(n){var a=n.theme;return{"& .scrollContainer":{maxHeight:"min(68vh, 1000px)",overflow:"auto",backgroundColor:"".concat(an.qn[800]," !important"),borderRadius:a.shape.borderRadius,colorScheme:"dark","&:hover":{boxShadow:"0 0 0 3px ".concat("dark"===a.palette.mode?a.palette.primaryDark[400]:a.palette.primary.light)},"&:focus-within":{boxShadow:"0 0 0 2px ".concat("dark"===a.palette.mode?a.palette.primaryDark.main:a.palette.primary.main)}}}})),In=(0,f.ZP)(vn())((function(n){var a=n.theme;return(0,o.Z)((0,o.Z)({},a.typography.body2),{},{fontSize:a.typography.pxToRem(13),fontFamily:a.typography.fontFamilyCode,fontWeight:400,WebkitFontSmoothing:"subpixel-antialiased",color:"#f8f8f2",direction:"ltr /*! @noflip */",float:"left",minWidth:"100%","& pre":{maxHeight:"initial",maxWidth:"initial"},"& textarea":{outline:"none"},"& > textarea, & > pre":{whiteSpace:"pre !important"}})}));function Cn(n){var a=n.language,e=n.value,s=n.onChange,t=n.copyButtonProps,c=n.children,r=n.id,p=(0,Q.useTranslate)(),l=i.useRef(null),u=i.useRef(null),d=(0,xn.Y)();return i.useEffect((function(){l.current.querySelector("textarea").tabIndex=-1}),[]),(0,J.jsx)(wn,{ref:l,onKeyDown:function(n){if("Tab"!==n.key)if("Escape"!==n.key){if("Enter"===n.key){var a=l.current.querySelector("textarea");a!==document.activeElement&&(n.preventDefault(),n.stopPropagation(),a.focus())}}else u.current.focus()},children:(0,J.jsxs)("div",(0,o.Z)((0,o.Z)({className:"MuiCode-root"},d),{},{children:[(0,J.jsx)("div",{className:"scrollContainer",children:(0,J.jsx)(In,{padding:20,highlight:function(n){return'<code class="language-'.concat(a,'">').concat(kn()(n,a),"</code>")},id:r,value:e,onValueChange:s})}),(0,J.jsx)(gn.Z,{ref:u,"aria-live":"polite",tabIndex:0,sx:function(n){return{position:"absolute",top:n.spacing(1),padding:n.spacing(.5,1),outline:"none",left:"50%",border:"1px solid",borderColor:an.iN[400],backgroundColor:an.qn[600],color:an.qn[50],transform:"translateX(-50%)",borderRadius:"4px",fontSize:n.typography.pxToRem(13),transition:"all 0.3s","&:not(:focus)":{top:0,opacity:0,pointerEvents:"none"}}},dangerouslySetInnerHTML:{__html:p("editorHint")}}),(0,J.jsx)(I.Z,{children:(0,J.jsx)(bn.Z,(0,o.Z)((0,o.Z)({},t),{},{code:e}))}),c]}))})}var Sn=e(572396);function jn(n){return n.children?(0,J.jsx)(Sn.Z,(0,o.Z)({"aria-live":"polite",variant:"filled",severity:"error",sx:{position:"absolute",top:0,left:"50%",transform:"translateX(-50%) translateY(-50%)",py:"2px",px:"6px","& .MuiAlert-icon":{fontSize:14,mr:.5,mt:.25,py:0},"& .MuiAlert-message":{fontSize:12,py:0}}},n)):null}var Mn,zn,Tn,Zn=e(641588),An=e(738525),Fn=e(720236),Dn=e(302954);function Bn(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n.replace(/^\s+/gm,"")}var Pn=i.lazy((function(){return Promise.all([e.e(59209),e.e(62235)]).then(e.bind(e,862235))})),Vn=(0,f.ZP)("div")((function(n){var a=n.theme;return(0,v.Z)({display:"none"},a.breakpoints.up("sm"),{display:"flex",height:a.spacing(8)})}));function Rn(){var n=(0,Q.useTranslate)();return(0,J.jsx)(Vn,{"aria-busy":!0,"aria-label":n("demoToolbarLabel"),role:"toolbar"})}function Hn(n){return n.replace(/(.+?)(\w+)\.\w+$$/,"$2")}var Gn=(0,f.ZP)("div")((function(n){var a=n.theme;return(0,v.Z)({marginBottom:24,marginLeft:a.spacing(-2),marginRight:a.spacing(-2)},a.breakpoints.up("sm"),{marginLeft:0,marginRight:0})})),_n=(0,f.ZP)("div",{shouldForwardProp:function(n){return"hiddenToolbar"!==n&&"bg"!==n}})((function(n){var a=n.theme,e=n.hiddenToolbar,s=n.bg;return(0,o.Z)((0,o.Z)((0,o.Z)((0,o.Z)((0,v.Z)({position:"relative",outline:0,margin:"auto",display:"flex",justifyContent:"center"},a.breakpoints.up("sm"),(0,o.Z)((0,o.Z)((0,o.Z)({borderRadius:10},"outlined"===s&&{borderLeftWidth:1,borderRightWidth:1}),"inline"===s&&{padding:a.spacing(0)}),e&&{paddingTop:a.spacing(1)})),"outlined"===s&&{padding:a.spacing(3),backgroundColor:a.palette.background.paper,border:"1px solid ".concat(a.palette.divider),borderLeftWidth:0,borderRightWidth:0}),!0===s&&{padding:a.spacing(3),backgroundColor:"dark"===a.palette.mode?a.palette.grey[900]:a.palette.grey[100]}),"gradient"===s&&{padding:a.spacing(20,8),border:"1px solid ".concat("dark"===a.palette.mode?(0,k.Fq)(a.palette.primaryDark[500],.7):(0,k.Fq)(a.palette.primary[100],.5)),overflow:"hidden",backgroundColor:"dark"===a.palette.mode?a.palette.primaryDark[800]:(0,k.Fq)(a.palette.primary[50],.5),backgroundClip:"padding-box",backgroundImage:"dark"===a.palette.mode?"radial-gradient(at 51% 52%, ".concat((0,k.Fq)(a.palette.primaryDark[700],.5)," 0px, transparent 50%),\n        radial-gradient(at 80% 0%, ").concat(a.palette.primaryDark[700]," 0px, transparent 50%),\n        radial-gradient(at 0% 95%, ").concat(a.palette.primaryDark[600]," 0px, transparent 50%),\n        radial-gradient(at 0% 20%, ").concat(a.palette.primaryDark[600]," 0px, transparent 35%),\n        radial-gradient(at 93% 85%, ").concat((0,k.Fq)(a.palette.primaryDark[500],.8)," 0px, transparent 50%),\n        url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23003A75' fill-opacity='0.15'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");"):"radial-gradient(at 51% 52%, ".concat((0,k.Fq)(a.palette.primary[50],.5)," 0px, transparent 50%),\n        radial-gradient(at 80% 0%, #FFFFFF 0px, transparent 20%),\n        radial-gradient(at 0% 95%, ").concat((0,k.Fq)(a.palette.primary[100],.3),", transparent 40%),\n        radial-gradient(at 0% 20%, ").concat(a.palette.primary[50]," 0px, transparent 50%),\n        radial-gradient(at 93% 85%, ").concat((0,k.Fq)(a.palette.primary[100],.2)," 0px, transparent 50%),\n        url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23003A75' fill-opacity='0.03'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");")}),e&&{paddingTop:a.spacing(2)})})),En=(0,y.Z)("div",{shouldForwardProp:function(n){return"hiddenToolbar"!==n&&"bg"!==n}})((function(n){var a=n.theme,e=n.hiddenToolbar,s=n.bg;return(0,o.Z)((0,o.Z)((0,o.Z)((0,v.Z)({position:"relative",outline:0,margin:"auto",display:"flex",justifyContent:"center"},a.breakpoints.up("sm"),(0,o.Z)((0,o.Z)((0,o.Z)({borderRadius:10},"outlined"===s&&{borderLeftWidth:1,borderRightWidth:1}),"inline"===s&&{padding:a.spacing(0)}),e&&{paddingTop:a.spacing(1)})),"outlined"===s&&{padding:a.spacing(3),backgroundColor:a.vars.palette.background.surface,border:"1px solid",borderColor:a.vars.palette.divider,borderLeftWidth:0,borderRightWidth:0}),!0===s&&{padding:a.spacing(3),backgroundColor:a.vars.palette.background.level2}),e&&{paddingTop:a.spacing(3)})})),qn=(0,f.ZP)(C.default)({"& pre":{margin:"0 auto",maxHeight:"min(68vh, 1000px)"}}),Ln=(0,f.ZP)("div")({marginTop:-64,position:"absolute"}),$n=(0,f.ZP)(x.Z)((function(n){var a=n.theme;return{position:"absolute",top:0,left:0,width:a.spacing(4),height:a.spacing(4),pointerEvents:"none"}}));function Nn(n){var a=n.demo,e=n.demoOptions,s=n.disableAd,t=n.githubLocation,c=n.mode;var r=(0,Q.useTranslate)(),p=(0,An.HQ)(),l=function(n,a,e){var s=(0,Q.useUserLanguage)(),t=(0,d.useRouter)(),c=(0,nn.ln)(t.asPath).canonicalAs;return i.useMemo((function(){var t,i="Material UI";return c.startsWith("/joy-ui/")?(t="joy-ui",i="Joy UI"):c.startsWith("/base/")?(t="base",i="MUI Base"):c.startsWith("/x/")&&(i="MUI X"),(0,o.Z)((0,o.Z)({scope:a.scope,jsxPreview:a.jsxPreview},n===Fn.CODE_VARIANTS.TS&&a.rawTS?{codeVariant:Fn.CODE_VARIANTS.TS,githubLocation:e.replace(/\.js$/,".tsx"),raw:a.rawTS,Component:a.tsx,sourceLanguage:"tsx"}:{codeVariant:Fn.CODE_VARIANTS.JS,githubLocation:e,raw:a.raw,Component:a.js,sourceLanguage:"jsx"}),{},{title:"".concat(Hn(e)," demo \u2014 ").concat(i),product:t,language:s})}),[c,n,a,e,s])}(p,a,t),u=i.useState(!1),h=(0,m.Z)(u,2),v=h[0],f=h[1],k=function(n){f("mouseenter"===n.type)},y=Hn(l.githubLocation),x=i.useMemo((function(){return{maxWidth:e.maxWidth,height:e.height}}),[e.height,e.maxWidth]);null==e.bg&&(e.bg="outlined"),e.iframe&&(e.bg=!0);var C=i.useState(e.defaultCodeOpen||!1),S=(0,m.Z)(C,2),j=S[0],M=S[1],z=i.useRef(!1);j&&(z.current=!0),i.useEffect((function(){var n=Hn(window.location.hash);y===n&&M(!0)}),[y]);var T=!e.hideToolbar&&!1!==e.defaultCodeOpen&&Boolean(l.jsxPreview),Z=i.useReducer((function(n){return n+1}),0),A=(0,m.Z)(Z,2),F=A[0],D=A[1],B="demo-".concat((0,b.Z)()),P="demoSource-".concat((0,b.Z)()),V=j||T,R=i.useRef(null),H=i.useState(!1),G=(0,m.Z)(H,2),_=G[0],E=G[1],q=_&&!s&&!e.disableAd,L="joy-ui"===l.product?En:_n,$="joy-ui"===l.product?Dn.default:i.Fragment,N=!j&&T,O=N?l.jsxPreview:l.raw.replace(/\n$/,""),K=i.useState({value:O,isPreview:N}),U=(0,m.Z)(K,2),W=U[0],Y=U[1],X=function(){Y({value:O,isPreview:N}),D()};i.useEffect((function(){Y({value:O,isPreview:N})}),[O,N]);var an=i.useState(null),en=(0,m.Z)(an,2),sn=en[0],on=en[1],tn=function(n){var a,e=n.demoOptions,s=n.demoData,o=n.editorCode,t=n.initialEditorCode,c=n.setDebouncedError,r=i.useMemo((function(){return(0,g.Z)(c,300)}),[c]);return i.useEffect((function(){return function(){r.clear()}}),[r]),i.useMemo((function(){return o.value===t||e.disableLiveEdit?a||(a=(0,J.jsx)(s.Component,{})):(0,J.jsx)(hn,{scope:s.scope,onError:r,code:o.isPreview?Bn(s.raw).replace(Bn(s.jsxPreview),o.value):o.value})}),[s,e.disableLiveEdit,o,t,r])}({demoOptions:e,demoData:l,editorCode:W,initialEditorCode:O,setDebouncedError:on});return(0,J.jsxs)(Gn,{children:[(0,J.jsx)(Ln,{id:"".concat(y)}),(0,J.jsxs)(L,{hiddenToolbar:e.hideToolbar,bg:e.bg,id:B,onMouseEnter:k,onMouseLeave:k,children:[(0,J.jsx)($,(0,o.Z)((0,o.Z)({},"joy-ui"===l.product&&{mode:c}),{},{children:(0,J.jsx)($n,{"aria-label":r("initialFocusLabel"),action:R,tabIndex:-1})})),(0,J.jsx)(un,{style:x,iframe:e.iframe,name:y,onResetDemoClick:X,children:tn},F)]}),(0,J.jsx)(Ln,{id:"".concat(y,".js")}),(0,J.jsx)(Ln,{id:"".concat(y,".tsx")}),(0,J.jsxs)($,(0,o.Z)((0,o.Z)({},"joy-ui"===l.product?{mode:c}:{}),{},{children:[e.hideToolbar?null:(0,J.jsx)(I.Z,{defer:!0,fallback:Mn||(Mn=(0,J.jsx)(Rn,{})),children:(0,J.jsx)(i.Suspense,{fallback:zn||(zn=(0,J.jsx)(Rn,{})),children:(0,J.jsx)(Pn,{codeOpen:j,codeVariant:p,demo:a,demoData:l,demoHovered:v,demoId:B,demoName:y,demoOptions:e,demoSourceId:P,initialFocusRef:R,onCodeOpenChange:function(){M((function(n){return!n})),E(!0)},onResetDemoClick:X,openDemoSource:V,showPreview:T})})}),(0,J.jsx)(w.Z,{in:V,unmountOnExit:!0,children:e.disableLiveEdit?(0,J.jsx)(qn,{code:W.value,id:P,language:l.sourceLanguage,copyButtonProps:{"data-ga-event-category":j?"demo-expand":"demo","data-ga-event-label":e.demo,"data-ga-event-action":"copy-click"}}):(0,J.jsx)(Cn,{value:W.value,onChange:function(n){Y((0,o.Z)((0,o.Z)({},W),{},{value:n}))},id:P,language:l.sourceLanguage,copyButtonProps:{"data-ga-event-category":j?"demo-expand":"demo","data-ga-event-label":e.demo,"data-ga-event-action":"copy-click"},children:(0,J.jsx)(jn,{children:sn})})}),q?Tn||(Tn=(0,J.jsx)(Zn.c,{})):null]}))]})}var On=e(644450),Kn=e(557978);function Un(n){var a=n.mode,e=(0,Kn.tv)().setMode;return i.useEffect((function(){e(a)}),[a,e]),null}function Wn(n){var a=(0,h.Z)(),e=(0,d.useRouter)().asPath.replace(/^\/[a-zA-Z]{2}\//,"/"),s=n.disableAd,t=void 0!==s&&s,r=n.disableToc,p=void 0!==r&&r,l=n.demos,m=void 0===l?{}:l,v=n.docs,g=n.demoComponents,f=n.srcComponents,k=(0,Q.useUserLanguage)(),y=(0,Q.useTranslate)(),b=v[k]||v.en,x=b.description,w=b.location,I=b.rendered,C=b.title,S=b.toc,j=e.startsWith("/joy-ui"),M=j?Kn.lL:i.Fragment,z=j?Dn.default:i.Fragment;return(0,J.jsx)(On.Z,{description:x,disableAd:t,disableToc:p,location:w,title:C,toc:S,children:(0,J.jsxs)(M,{children:[j&&(0,J.jsx)(Un,{mode:a.palette.mode}),I.map((function(n,e){var s,i;if("string"===typeof n)return(0,J.jsx)(z,(0,o.Z)((0,o.Z)({},j&&{mode:a.palette.mode}),{},{children:(0,J.jsx)(yn.default,{renderedMarkdown:n})}),e);if(n.component){var r=n.component,p=null===f||void 0===f?void 0:f[r];if(void 0===p)throw new Error("No component found at the path ".concat(u().join("docs/src",r)));return(0,J.jsx)(z,(0,o.Z)((0,o.Z)({},j&&{mode:a.palette.mode}),{},{children:(0,J.jsx)(p,(0,o.Z)((0,o.Z)({},n),{},{markdown:b}))}),e)}var l=n.demo,d=null===m||void 0===m?void 0:m[l];if(void 0===d){var h=["Missing demo: ".concat(l,". You can use one of the following:"),c()(m)].join("\n");if("en"===k)throw new Error(h);0;var v=(0,J.jsx)("span",{role:"img","aria-label":y("emojiWarning"),children:"\u26a0\ufe0f"});return(0,J.jsxs)("div",{children:[v," Missing demo `",l,"` ",v]},e)}var x=w.split("/");x.pop();var I,C="".concat(x.join("/"),"/").concat(l);return(0,J.jsx)(Nn,{mode:a.palette.mode,demo:{raw:d.raw,js:null!==(s=g[d.module])&&void 0!==s?s:(I=d.module,function(){throw new Error("No demo component provided for '".concat(I,"'"))}),scope:m.scope,jsxPreview:d.jsxPreview,rawTS:d.rawTS,tsx:null!==(i=g[d.moduleTS])&&void 0!==i?i:null},disableAd:t,demoOptions:n,githubLocation:"".concat("https://github.com/mui/material-ui","/blob/v").concat("5.10.13").concat(C)},e)}))]})})}Un.propTypes={mode:p().oneOf(["light","dark"])}},314056:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return s.Z}});var s=e(375205)},382736:function(n,a,e){"use strict";e.r(a),e.d(a,{buttonClasses:function(){return o.Z},default:function(){return s.Z},getButtonUtilityClass:function(){return o.F}});var s=e(672511),o=e(914694)},243408:function(n,a,e){"use strict";e.r(a),e.d(a,{chipClasses:function(){return o.Z},default:function(){return s.Z},getChipUtilityClass:function(){return o.z}});var s=e(989657),o=e(510346)},912538:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return s.ZP},getGridUtilityClass:function(){return o.H},gridClasses:function(){return o.Z}});var s=e(772868),o=e(455477)},16339:function(n,a,e){"use strict";var s=e(295649),o=e(481936),t=e(827378),c=e(138944),i=e(501330),r=e(290763),p=e(906205),l=e(326162),u=e(45384),d=e(824246),h=["baseClassName","className","color","component","fontSize"],m=(0,r.ZP)("span",{name:"MuiIcon",slot:"Root",overridesResolver:function(n,a){var e=n.ownerState;return[a.root,"inherit"!==e.color&&a["color".concat((0,l.Z)(e.color))],a["fontSize".concat((0,l.Z)(e.fontSize))]]}})((function(n){var a=n.theme,e=n.ownerState;return{userSelect:"none",width:"1em",height:"1em",overflow:"hidden",display:"inline-block",textAlign:"center",flexShrink:0,fontSize:{inherit:"inherit",small:a.typography.pxToRem(20),medium:a.typography.pxToRem(24),large:a.typography.pxToRem(36)}[e.fontSize],color:{primary:(a.vars||a).palette.primary.main,secondary:(a.vars||a).palette.secondary.main,info:(a.vars||a).palette.info.main,success:(a.vars||a).palette.success.main,warning:(a.vars||a).palette.warning.main,action:(a.vars||a).palette.action.active,error:(a.vars||a).palette.error.main,disabled:(a.vars||a).palette.action.disabled,inherit:void 0}[e.color]}})),v=t.forwardRef((function(n,a){var e=(0,p.Z)({props:n,name:"MuiIcon"}),t=e.baseClassName,r=void 0===t?"material-icons":t,v=e.className,g=e.color,f=void 0===g?"inherit":g,k=e.component,y=void 0===k?"span":k,b=e.fontSize,x=void 0===b?"medium":b,w=(0,o.Z)(e,h),I=(0,s.Z)((0,s.Z)({},e),{},{baseClassName:r,color:f,component:y,fontSize:x}),C=function(n){var a=n.color,e=n.fontSize,s=n.classes,o={root:["root","inherit"!==a&&"color".concat((0,l.Z)(a)),"fontSize".concat((0,l.Z)(e))]};return(0,i.Z)(o,u.d,s)}(I);return(0,d.jsx)(m,(0,s.Z)({as:y,className:(0,c.default)(r,"notranslate",C.root,v),ownerState:I,"aria-hidden":!0,ref:a},w))}));v.muiName="Icon",a.Z=v},45384:function(n,a,e){"use strict";e.d(a,{d:function(){return t}});var s=e(761424),o=e(618932);function t(n){return(0,o.Z)("MuiIcon",n)}var c=(0,s.Z)("MuiIcon",["root","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeMedium","fontSizeLarge"]);a.Z=c},103965:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return s.Z},getIconUtilityClass:function(){return o.d},iconClasses:function(){return o.Z}});var s=e(16339),o=e(45384)},19564:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return s.Z},getIconButtonUtilityClass:function(){return o.r},iconButtonClasses:function(){return o.Z}});var s=e(757555),o=e(472577)},920499:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return s.Z},getSvgIconUtilityClass:function(){return o.h},svgIconClasses:function(){return o.Z}});var s=e(52551),o=e(152599)},522047:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return s.Z},getTypographyUtilityClass:function(){return o.f},typographyClasses:function(){return o.Z}});var s=e(601344),o=e(530534)},490326:function(n,a){"use strict";a.Z={50:"#fff8e1",100:"#ffecb3",200:"#ffe082",300:"#ffd54f",400:"#ffca28",500:"#ffc107",600:"#ffb300",700:"#ffa000",800:"#ff8f00",900:"#ff6f00",A100:"#ffe57f",A200:"#ffd740",A400:"#ffc400",A700:"#ffab00"}},140199:function(n,a){"use strict";a.Z={50:"#e0f7fa",100:"#b2ebf2",200:"#80deea",300:"#4dd0e1",400:"#26c6da",500:"#00bcd4",600:"#00acc1",700:"#0097a7",800:"#00838f",900:"#006064",A100:"#84ffff",A200:"#18ffff",A400:"#00e5ff",A700:"#00b8d4"}},452458:function(n,a){"use strict";a.Z={50:"#fbe9e7",100:"#ffccbc",200:"#ffab91",300:"#ff8a65",400:"#ff7043",500:"#ff5722",600:"#f4511e",700:"#e64a19",800:"#d84315",900:"#bf360c",A100:"#ff9e80",A200:"#ff6e40",A400:"#ff3d00",A700:"#dd2c00"}},385267:function(n,a){"use strict";a.Z={50:"#ede7f6",100:"#d1c4e9",200:"#b39ddb",300:"#9575cd",400:"#7e57c2",500:"#673ab7",600:"#5e35b1",700:"#512da8",800:"#4527a0",900:"#311b92",A100:"#b388ff",A200:"#7c4dff",A400:"#651fff",A700:"#6200ea"}},235215:function(n,a,e){"use strict";e.r(a),e.d(a,{amber:function(){return f.Z},blue:function(){return p.Z},blueGrey:function(){return w},brown:function(){return b},common:function(){return s.Z},cyan:function(){return u.Z},deepOrange:function(){return y.Z},deepPurple:function(){return i.Z},green:function(){return h.Z},grey:function(){return x.Z},indigo:function(){return r},lightBlue:function(){return l.Z},lightGreen:function(){return m},lime:function(){return v},orange:function(){return k.Z},pink:function(){return t.Z},purple:function(){return c.Z},red:function(){return o.Z},teal:function(){return d.Z},yellow:function(){return g}});var s=e(146681),o=e(128368),t=e(658295),c=e(722661),i=e(385267),r={50:"#e8eaf6",100:"#c5cae9",200:"#9fa8da",300:"#7986cb",400:"#5c6bc0",500:"#3f51b5",600:"#3949ab",700:"#303f9f",800:"#283593",900:"#1a237e",A100:"#8c9eff",A200:"#536dfe",A400:"#3d5afe",A700:"#304ffe"},p=e(175779),l=e(481903),u=e(140199),d=e(832999),h=e(191149),m={50:"#f1f8e9",100:"#dcedc8",200:"#c5e1a5",300:"#aed581",400:"#9ccc65",500:"#8bc34a",600:"#7cb342",700:"#689f38",800:"#558b2f",900:"#33691e",A100:"#ccff90",A200:"#b2ff59",A400:"#76ff03",A700:"#64dd17"},v={50:"#f9fbe7",100:"#f0f4c3",200:"#e6ee9c",300:"#dce775",400:"#d4e157",500:"#cddc39",600:"#c0ca33",700:"#afb42b",800:"#9e9d24",900:"#827717",A100:"#f4ff81",A200:"#eeff41",A400:"#c6ff00",A700:"#aeea00"},g={50:"#fffde7",100:"#fff9c4",200:"#fff59d",300:"#fff176",400:"#ffee58",500:"#ffeb3b",600:"#fdd835",700:"#fbc02d",800:"#f9a825",900:"#f57f17",A100:"#ffff8d",A200:"#ffff00",A400:"#ffea00",A700:"#ffd600"},f=e(490326),k=e(95951),y=e(452458),b={50:"#efebe9",100:"#d7ccc8",200:"#bcaaa4",300:"#a1887f",400:"#8d6e63",500:"#795548",600:"#6d4c41",700:"#5d4037",800:"#4e342e",900:"#3e2723",A100:"#d7ccc8",A200:"#bcaaa4",A400:"#8d6e63",A700:"#5d4037"},x=e(471840),w={50:"#eceff1",100:"#cfd8dc",200:"#b0bec5",300:"#90a4ae",400:"#78909c",500:"#607d8b",600:"#546e7a",700:"#455a64",800:"#37474f",900:"#263238",A100:"#cfd8dc",A200:"#b0bec5",A400:"#78909c",A700:"#455a64"}},658295:function(n,a){"use strict";a.Z={50:"#fce4ec",100:"#f8bbd0",200:"#f48fb1",300:"#f06292",400:"#ec407a",500:"#e91e63",600:"#d81b60",700:"#c2185b",800:"#ad1457",900:"#880e4f",A100:"#ff80ab",A200:"#ff4081",A400:"#f50057",A700:"#c51162"}},832999:function(n,a){"use strict";a.Z={50:"#e0f2f1",100:"#b2dfdb",200:"#80cbc4",300:"#4db6ac",400:"#26a69a",500:"#009688",600:"#00897b",700:"#00796b",800:"#00695c",900:"#004d40",A100:"#a7ffeb",A200:"#64ffda",A400:"#1de9b6",A700:"#00bfa5"}},176368:function(n,a,e){"use strict";e.d(a,{CM:function(){return d},JO:function(){return m},Jm:function(){return p},tv:function(){return h}});var s=e(295649),o=e(423515),t=e(189648),c=e(891096),i=e(823315),r=function(n){return[].concat((0,i.Z)((0,i.Z)(Array(24)).map((function(a,e){return"--".concat(n?"".concat(n,"-"):"","overlays-").concat(e+1)}))),["--".concat(n?"".concat(n,"-"):"","palette-AppBar-darkBg"),"--".concat(n?"".concat(n,"-"):"","palette-AppBar-darkColor")])},p=function(n){var a;return!!n[0].match(/(typography|mixins|breakpoints|direction|transitions)/)||"palette"===n[0]&&!(null===(a=n[1])||void 0===a||!a.match(/(mode|contrastThreshold|tonalOffset)/))},l=(0,t.Z)(),u=(0,o.Z)({theme:l,attribute:"data-mui-color-scheme",modeStorageKey:"mui-mode",colorSchemeStorageKey:"mui-color-scheme",defaultColorScheme:{light:"light",dark:"dark"},resolveTheme:function(n){return(0,s.Z)((0,s.Z)({},n),{},{typography:(0,c.Z)(n.palette,n.typography)})},shouldSkipGeneratingVar:p,excludeVariablesFromRoot:r}),d=u.CssVarsProvider,h=u.useColorScheme,m=u.getInitColorSchemeScript},271558:function(n,a,e){"use strict";e.r(a),e.d(a,{alignProperty:function(){return l},convertLength:function(){return p},fontGrid:function(){return u},getUnit:function(){return i},isUnitless:function(){return c},responsiveProperty:function(){return d},toUnitless:function(){return r}});var s=e(957379),o=e(42302),t=e.n(o);function c(n){return String(t()(n)).length===String(n).length}function i(n){return String(n).match(/[\d.\-+]*\s*(.*)/)[1]||""}function r(n){return t()(n)}function p(n){return function(a,e){var s=i(a);if(s===e)return a;var o=r(a);"px"!==s&&("em"===s||"rem"===s)&&(o=r(a)*r(n));var c=o;if("px"!==e)if("em"===e)c=o/r(n);else{if("rem"!==e)return a;c=o/r(n)}return t()(c.toFixed(5))+e}}function l(n){var a=n.size,e=n.grid,s=a-a%e,o=s+e;return a-s<o-a?s:o}function u(n){var a=n.lineHeight;return n.pixels/(a*n.htmlFontSize)}function d(n){var a=n.cssProperty,e=n.min,o=n.max,t=n.unit,c=void 0===t?"rem":t,i=n.breakpoints,r=void 0===i?[600,900,1200]:i,p=n.transform,l=void 0===p?null:p,u=(0,s.Z)({},a,"".concat(e).concat(c)),d=(o-e)/r[r.length-1];return r.forEach((function(n){var o=e+d*n;null!==l&&(o=l(o)),u["@media (min-width:".concat(n,"px)")]=(0,s.Z)({},a,"".concat(Math.round(1e4*o)/1e4).concat(c))})),u}},189648:function(n,a,e){"use strict";e.d(a,{Z:function(){return y}});var s=e(295649),o=e(481936),t=e(823315),c=e(696138),i=e.n(c),r=e(823965),p=e(53595),l=e(240120),u=e(620587),d=e(619357),h=["colorSchemes","cssVarPrefix"],m=["palette"],v=(0,t.Z)(Array(25)).map((function(n,a){if(0!==a){var e=(0,d.R)(a);return"linear-gradient(rgba(255 255 255 / ".concat(e,"), rgba(255 255 255 / ").concat(e,"))")}}));function g(n,a){a.forEach((function(a){n[a]||(n[a]={})}))}function f(n,a,e){n[a]=n[a]||e}var k=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"mui";return(0,p.Z)(n)};function y(){var n,a,e,t,c,p,d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},y=d.colorSchemes,b=void 0===y?{}:y,x=d.cssVarPrefix,w=void 0===x?"mui":x,I=(0,o.Z)(d,h),C=k(w),S=(0,u.Z)((0,s.Z)((0,s.Z)({},I),b.light&&{palette:null===(n=b.light)||void 0===n?void 0:n.palette})),j=S.palette,M=(0,o.Z)(S,m),z=(0,u.Z)({palette:(0,s.Z)({mode:"dark"},null===(a=b.dark)||void 0===a?void 0:a.palette)}),T=z.palette,Z=(0,s.Z)((0,s.Z)({},M),{},{cssVarPrefix:w,getCssVar:C,colorSchemes:(0,s.Z)((0,s.Z)({},b),{},{light:(0,s.Z)((0,s.Z)({},b.light),{},{palette:j,opacity:(0,s.Z)({inputPlaceholder:.42,inputUnderline:.42,switchTrackDisabled:.12,switchTrack:.38},null===(e=b.light)||void 0===e?void 0:e.opacity),overlays:(null===(t=b.light)||void 0===t?void 0:t.overlays)||[]}),dark:(0,s.Z)((0,s.Z)({},b.dark),{},{palette:T,opacity:(0,s.Z)({inputPlaceholder:.5,inputUnderline:.7,switchTrackDisabled:.2,switchTrack:.3},null===(c=b.dark)||void 0===c?void 0:c.opacity),overlays:(null===(p=b.dark)||void 0===p?void 0:p.overlays)||v})})});i()(Z.colorSchemes).forEach((function(n){var a=Z.colorSchemes[n].palette;if("light"===n?(f(a.common,"background","#fff"),f(a.common,"onBackground","#000")):(f(a.common,"background","#000"),f(a.common,"onBackground","#fff")),g(a,["Alert","AppBar","Avatar","Chip","FilledInput","LinearProgress","Skeleton","Slider","SnackbarContent","SpeedDialAction","StepConnector","StepContent","Switch","TableCell","Tooltip"]),"light"===n){f(a.Alert,"errorColor",(0,l._j)(a.error.light,.6)),f(a.Alert,"infoColor",(0,l._j)(a.info.light,.6)),f(a.Alert,"successColor",(0,l._j)(a.success.light,.6)),f(a.Alert,"warningColor",(0,l._j)(a.warning.light,.6)),f(a.Alert,"errorFilledBg",C("palette-error-main")),f(a.Alert,"infoFilledBg",C("palette-info-main")),f(a.Alert,"successFilledBg",C("palette-success-main")),f(a.Alert,"warningFilledBg",C("palette-warning-main")),f(a.Alert,"errorFilledColor",j.getContrastText(a.error.main)),f(a.Alert,"infoFilledColor",j.getContrastText(a.info.main)),f(a.Alert,"successFilledColor",j.getContrastText(a.success.main)),f(a.Alert,"warningFilledColor",j.getContrastText(a.warning.main)),f(a.Alert,"errorStandardBg",(0,l.$n)(a.error.light,.9)),f(a.Alert,"infoStandardBg",(0,l.$n)(a.info.light,.9)),f(a.Alert,"successStandardBg",(0,l.$n)(a.success.light,.9)),f(a.Alert,"warningStandardBg",(0,l.$n)(a.warning.light,.9)),f(a.Alert,"errorIconColor",C("palette-error-light")),f(a.Alert,"infoIconColor",C("palette-info-light")),f(a.Alert,"successIconColor",C("palette-success-light")),f(a.Alert,"warningIconColor",C("palette-warning-light")),f(a.AppBar,"defaultBg",C("palette-grey-100")),f(a.Avatar,"defaultBg",C("palette-grey-400")),f(a.Chip,"defaultBorder",C("palette-grey-400")),f(a.Chip,"defaultAvatarColor",C("palette-grey-700")),f(a.Chip,"defaultIconColor",C("palette-grey-700")),f(a.FilledInput,"bg","rgba(0, 0, 0, 0.06)"),f(a.FilledInput,"hoverBg","rgba(0, 0, 0, 0.09)"),f(a.FilledInput,"disabledBg","rgba(0, 0, 0, 0.12)"),f(a.LinearProgress,"primaryBg",(0,l.$n)(a.primary.main,.62)),f(a.LinearProgress,"secondaryBg",(0,l.$n)(a.secondary.main,.62)),f(a.LinearProgress,"errorBg",(0,l.$n)(a.error.main,.62)),f(a.LinearProgress,"infoBg",(0,l.$n)(a.info.main,.62)),f(a.LinearProgress,"successBg",(0,l.$n)(a.success.main,.62)),f(a.LinearProgress,"warningBg",(0,l.$n)(a.warning.main,.62)),f(a.Skeleton,"bg","rgba(".concat(C("palette-text-primaryChannel")," / 0.11)")),f(a.Slider,"primaryTrack",(0,l.$n)(a.primary.main,.62)),f(a.Slider,"secondaryTrack",(0,l.$n)(a.secondary.main,.62)),f(a.Slider,"errorTrack",(0,l.$n)(a.error.main,.62)),f(a.Slider,"infoTrack",(0,l.$n)(a.info.main,.62)),f(a.Slider,"successTrack",(0,l.$n)(a.success.main,.62)),f(a.Slider,"warningTrack",(0,l.$n)(a.warning.main,.62));var e=(0,l._4)(a.background.default,.8);f(a.SnackbarContent,"bg",e),f(a.SnackbarContent,"color",j.getContrastText(e)),f(a.SpeedDialAction,"fabHoverBg",(0,l._4)(a.background.paper,.15)),f(a.StepConnector,"border",C("palette-grey-400")),f(a.StepContent,"border",C("palette-grey-400")),f(a.Switch,"defaultColor",C("palette-common-white")),f(a.Switch,"defaultDisabledColor",C("palette-grey-100")),f(a.Switch,"primaryDisabledColor",(0,l.$n)(a.primary.main,.62)),f(a.Switch,"secondaryDisabledColor",(0,l.$n)(a.secondary.main,.62)),f(a.Switch,"errorDisabledColor",(0,l.$n)(a.error.main,.62)),f(a.Switch,"infoDisabledColor",(0,l.$n)(a.info.main,.62)),f(a.Switch,"successDisabledColor",(0,l.$n)(a.success.main,.62)),f(a.Switch,"warningDisabledColor",(0,l.$n)(a.warning.main,.62)),f(a.TableCell,"border",(0,l.$n)((0,l.Fq)(a.divider,1),.88)),f(a.Tooltip,"bg",(0,l.Fq)(a.grey[700],.92))}else{f(a.Alert,"errorColor",(0,l.$n)(a.error.light,.6)),f(a.Alert,"infoColor",(0,l.$n)(a.info.light,.6)),f(a.Alert,"successColor",(0,l.$n)(a.success.light,.6)),f(a.Alert,"warningColor",(0,l.$n)(a.warning.light,.6)),f(a.Alert,"errorFilledBg",C("palette-error-dark")),f(a.Alert,"infoFilledBg",C("palette-info-dark")),f(a.Alert,"successFilledBg",C("palette-success-dark")),f(a.Alert,"warningFilledBg",C("palette-warning-dark")),f(a.Alert,"errorFilledColor",T.getContrastText(a.error.dark)),f(a.Alert,"infoFilledColor",T.getContrastText(a.info.dark)),f(a.Alert,"successFilledColor",T.getContrastText(a.success.dark)),f(a.Alert,"warningFilledColor",T.getContrastText(a.warning.dark)),f(a.Alert,"errorStandardBg",(0,l._j)(a.error.light,.9)),f(a.Alert,"infoStandardBg",(0,l._j)(a.info.light,.9)),f(a.Alert,"successStandardBg",(0,l._j)(a.success.light,.9)),f(a.Alert,"warningStandardBg",(0,l._j)(a.warning.light,.9)),f(a.Alert,"errorIconColor",C("palette-error-main")),f(a.Alert,"infoIconColor",C("palette-info-main")),f(a.Alert,"successIconColor",C("palette-success-main")),f(a.Alert,"warningIconColor",C("palette-warning-main")),f(a.AppBar,"defaultBg",C("palette-grey-900")),f(a.AppBar,"darkBg",C("palette-background-paper")),f(a.AppBar,"darkColor",C("palette-text-primary")),f(a.Avatar,"defaultBg",C("palette-grey-600")),f(a.Chip,"defaultBorder",C("palette-grey-700")),f(a.Chip,"defaultAvatarColor",C("palette-grey-300")),f(a.Chip,"defaultIconColor",C("palette-grey-300")),f(a.FilledInput,"bg","rgba(255, 255, 255, 0.09)"),f(a.FilledInput,"hoverBg","rgba(255, 255, 255, 0.13)"),f(a.FilledInput,"disabledBg","rgba(255, 255, 255, 0.12)"),f(a.LinearProgress,"primaryBg",(0,l._j)(a.primary.main,.5)),f(a.LinearProgress,"secondaryBg",(0,l._j)(a.secondary.main,.5)),f(a.LinearProgress,"errorBg",(0,l._j)(a.error.main,.5)),f(a.LinearProgress,"infoBg",(0,l._j)(a.info.main,.5)),f(a.LinearProgress,"successBg",(0,l._j)(a.success.main,.5)),f(a.LinearProgress,"warningBg",(0,l._j)(a.warning.main,.5)),f(a.Skeleton,"bg","rgba(".concat(C("palette-text-primaryChannel")," / 0.13)")),f(a.Slider,"primaryTrack",(0,l._j)(a.primary.main,.5)),f(a.Slider,"secondaryTrack",(0,l._j)(a.secondary.main,.5)),f(a.Slider,"errorTrack",(0,l._j)(a.error.main,.5)),f(a.Slider,"infoTrack",(0,l._j)(a.info.main,.5)),f(a.Slider,"successTrack",(0,l._j)(a.success.main,.5)),f(a.Slider,"warningTrack",(0,l._j)(a.warning.main,.5));var s=(0,l._4)(a.background.default,.98);f(a.SnackbarContent,"bg",s),f(a.SnackbarContent,"color",T.getContrastText(s)),f(a.SpeedDialAction,"fabHoverBg",(0,l._4)(a.background.paper,.15)),f(a.StepConnector,"border",C("palette-grey-600")),f(a.StepContent,"border",C("palette-grey-600")),f(a.Switch,"defaultColor",C("palette-grey-300")),f(a.Switch,"defaultDisabledColor",C("palette-grey-600")),f(a.Switch,"primaryDisabledColor",(0,l._j)(a.primary.main,.55)),f(a.Switch,"secondaryDisabledColor",(0,l._j)(a.secondary.main,.55)),f(a.Switch,"errorDisabledColor",(0,l._j)(a.error.main,.55)),f(a.Switch,"infoDisabledColor",(0,l._j)(a.info.main,.55)),f(a.Switch,"successDisabledColor",(0,l._j)(a.success.main,.55)),f(a.Switch,"warningDisabledColor",(0,l._j)(a.warning.main,.55)),f(a.TableCell,"border",(0,l._j)((0,l.Fq)(a.divider,1),.68)),f(a.Tooltip,"bg",(0,l.Fq)(a.grey[700],.92))}a.common.backgroundChannel=(0,l.n8)(a.common.background),a.common.onBackgroundChannel=(0,l.n8)(a.common.onBackground),a.dividerChannel=(0,l.n8)(a.divider),i()(a).forEach((function(n){var e=a[n];e.main&&(a[n].mainChannel=(0,l.n8)(e.main)),e.light&&(a[n].lightChannel=(0,l.n8)(e.light)),e.dark&&(a[n].darkChannel=(0,l.n8)(e.dark)),e.contrastText&&(a[n].contrastTextChannel=(0,l.n8)(e.contrastText)),e.primary&&(a[n].primaryChannel=(0,l.n8)(e.primary)),e.secondary&&(a[n].secondaryChannel=(0,l.n8)(e.secondary)),e.active&&(a[n].activeChannel=(0,l.n8)(e.active)),e.selected&&(a[n].selectedChannel=(0,l.n8)(e.selected))}))}));for(var A=arguments.length,F=new Array(A>1?A-1:0),D=1;D<A;D++)F[D-1]=arguments[D];return Z=F.reduce((function(n,a){return(0,r.Z)(n,a)}),Z)}},189664:function(n,a,e){"use strict";e.r(a),e.d(a,{Experimental_CssVarsProvider:function(){return D.CM},StyledEngineProvider:function(){return z.Z},ThemeProvider:function(){return M.Z},adaptV4Theme:function(){return d},alpha:function(){return h.Fq},createMuiTheme:function(){return g.A},createStyles:function(){return b},createTheme:function(){return g.Z},css:function(){return m.css},darken:function(){return h._j},decomposeColor:function(){return h.tB},duration:function(){return I.x9},easing:function(){return I.Ui},emphasize:function(){return h._4},experimentalStyled:function(){return j.ZP},experimental_extendTheme:function(){return B.Z},experimental_sx:function(){return v.Z},getContrastRatio:function(){return h.mi},getInitColorSchemeScript:function(){return D.JO},getLuminance:function(){return h.H3},hexToRgb:function(){return h.oo},hslToRgb:function(){return h.ve},keyframes:function(){return m.keyframes},lighten:function(){return h.$n},makeStyles:function(){return Z},recomposeColor:function(){return h.wy},responsiveFontSizes:function(){return w.Z},rgbToHex:function(){return h.vq},shouldSkipGeneratingVar:function(){return D.Jm},styled:function(){return j.ZP},unstable_createMuiStrictModeTheme:function(){return k},unstable_getUnit:function(){return x.getUnit},unstable_toUnitless:function(){return x.toUnitless},useColorScheme:function(){return D.tv},useTheme:function(){return C.Z},useThemeProps:function(){return S.Z},withStyles:function(){return A},withTheme:function(){return F}});var s=e(957379),o=e(295649),t=e(481936),c=e(696138),i=e.n(c),r=e(606740),p=e(345375),l=["defaultProps","mixins","overrides","palette","props","styleOverrides"],u=["type","mode"];function d(n){var a=n.defaultProps,e=void 0===a?{}:a,c=n.mixins,d=void 0===c?{}:c,h=n.overrides,m=void 0===h?{}:h,v=n.palette,g=void 0===v?{}:v,f=n.props,k=void 0===f?{}:f,y=n.styleOverrides,b=void 0===y?{}:y,x=(0,t.Z)(n,l),w=(0,o.Z)((0,o.Z)({},x),{},{components:{}});i()(e).forEach((function(n){var a=w.components[n]||{};a.defaultProps=e[n],w.components[n]=a})),i()(k).forEach((function(n){var a=w.components[n]||{};a.defaultProps=k[n],w.components[n]=a})),i()(b).forEach((function(n){var a=w.components[n]||{};a.styleOverrides=b[n],w.components[n]=a})),i()(m).forEach((function(n){var a=w.components[n]||{};a.styleOverrides=m[n],w.components[n]=a})),w.spacing=(0,r.Z)(n.spacing);var I=(0,p.Z)(n.breakpoints||{}),C=w.spacing;w.mixins=(0,o.Z)({gutters:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,o.Z)((0,o.Z)({paddingLeft:C(2),paddingRight:C(2)},n),{},(0,s.Z)({},I.up("sm"),(0,o.Z)({paddingLeft:C(3),paddingRight:C(3)},n[I.up("sm")])))}},d);var S=g.type,j=g.mode,M=(0,t.Z)(g,u),z=j||S||"light";return w.palette=(0,o.Z)({text:{hint:"dark"===z?"rgba(255, 255, 255, 0.5)":"rgba(0, 0, 0, 0.38)"},mode:z,type:z},M),w}var h=e(240120),m=e(910043),v=e(439446),g=e(620587),f=e(823965);function k(n){for(var a=arguments.length,e=new Array(a>1?a-1:0),s=1;s<a;s++)e[s-1]=arguments[s];return g.Z.apply(void 0,[(0,f.Z)({unstable_strictMode:!0},n)].concat(e))}var y=!1;function b(n){return y||(console.warn(["MUI: createStyles from @mui/material/styles is deprecated.","Please use @mui/styles/createStyles"].join("\n")),y=!0),n}var x=e(271558),w=e(199017),I=e(7817),C=e(146010),S=e(906205),j=e(290763),M=e(720325),z=e(791014),T=e(416903);function Z(){throw new Error((0,T.Z)(14))}function A(){throw new Error((0,T.Z)(15))}function F(){throw new Error((0,T.Z)(16))}var D=e(176368),B=e(189648)},199017:function(n,a,e){"use strict";e.d(a,{Z:function(){return r}});var s=e(295649),o=e(416903),t=e(42302),c=e.n(t),i=e(271558);function r(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=a.breakpoints,t=void 0===e?["sm","md","lg"]:e,r=a.disableAlign,p=void 0!==r&&r,l=a.factor,u=void 0===l?2:l,d=a.variants,h=void 0===d?["h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","button","overline"]:d,m=(0,s.Z)({},n);m.typography=(0,s.Z)({},m.typography);var v=m.typography,g=(0,i.convertLength)(v.htmlFontSize),f=t.map((function(n){return m.breakpoints.values[n]}));return h.forEach((function(n){var a=v[n],e=c()(g(a.fontSize,"rem"));if(!(e<=1)){var t=e,r=1+(t-1)/u,l=a.lineHeight;if(!(0,i.isUnitless)(l)&&!p)throw new Error((0,o.Z)(6));(0,i.isUnitless)(l)||(l=c()(g(l,"rem"))/c()(e));var d=null;p||(d=function(n){return(0,i.alignProperty)({size:n,grid:(0,i.fontGrid)({pixels:4,lineHeight:l,htmlFontSize:v.htmlFontSize})})}),v[n]=(0,s.Z)((0,s.Z)({},a),(0,i.responsiveProperty)({cssProperty:"fontSize",min:r,max:t,unit:"rem",breakpoints:f,transform:d}))}})),m}},791014:function(n,a,e){"use strict";e.d(a,{Z:function(){return i}});e(827378);var s=e(13547),o=e(857958),t=e(824246),c=(0,o.default)({key:"css",prepend:!0});function i(n){var a=n.injectFirst,e=n.children;return a?(0,t.jsx)(s.C,{value:c,children:e}):e}},439446:function(n,a,e){"use strict";var s=e(253408);a.Z=function(n){return function(a){var e=a.theme;return(0,s.Z)({sx:n,theme:e})}}},869497:function(n,a,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/icons",function(){return e(158483)}])},766661:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}),"Delete");a.default=c},170784:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"}),"DeleteForever");a.default=c},317768:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M14.12 10.47 12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z"}),"DeleteForeverOutlined");a.default=c},890290:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm3.17-6.41a.9959.9959 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0L12 12.59l1.41-1.41c.39-.39 1.02-.39 1.41 0s.39 1.02 0 1.41L13.41 14l1.41 1.41c.39.39.39 1.02 0 1.41s-1.02.39-1.41 0L12 15.41l-1.41 1.41c-.39.39-1.02.39-1.41 0a.9959.9959 0 0 1 0-1.41L10.59 14l-1.42-1.41zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"}),"DeleteForeverRounded");a.default=c},192437:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M6 21h12V7H6v14zm2.46-9.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z"}),"DeleteForeverSharp");a.default=c},571650:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)([(0,t.jsx)("path",{d:"M16 9H8v10h8V9zm-.47 7.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12z",opacity:".3"},"0"),(0,t.jsx)("path",{d:"M14.12 10.47 12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z"},"1")],"DeleteForeverTwoTone");a.default=c},532566:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z"}),"DeleteOutlined");a.default=c},650170:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"}),"DeleteRounded");a.default=c},256437:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}),"DeleteSharp");a.default=c},800434:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)([(0,t.jsx)("path",{d:"M8 9h8v10H8z",opacity:".3"},"0"),(0,t.jsx)("path",{d:"m15.5 4-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z"},"1")],"DeleteTwoTone");a.default=c},304099:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 10.5h-1V15H9.5v-1.5h-3V9H8v3h1.5V9H11v3h1v1.5zm6 1.5h-1.75l-1.75-2.25V15H13V9h1.5v2.25L16.25 9H18l-2.25 3L18 15z"}),"FourK");a.default=c},635616:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"}),"Phone");a.default=c},556272:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z"}),"ThreeDRotation");a.default=c},386313:function(n,a,e){"use strict";var s=e(573203);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=s(e(122268)),t=e(824246),c=(0,o.default)((0,t.jsx)("path",{d:"M12 7C6.48 7 2 9.24 2 12c0 2.24 2.94 4.13 7 4.77V20l4-4-4-4v2.73c-3.15-.56-5-1.9-5-2.73 0-1.06 3.04-3 8-3s8 1.94 8 3c0 .73-1.46 1.89-4 2.53v2.05c3.53-.77 6-2.53 6-4.58 0-2.76-4.48-5-10-5z"}),"ThreeSixty");a.default=c}},function(n){n.O(0,[75760,31194,36634,35408,85992,56063,76957,26728,78491,3381,63756,94617,68182,9448,43785,55898,26035,35396,11486,10552,70121,59430,84445,34786,77756,49774,92888,40179],(function(){return a=869497,n(n.s=a);var a}));var a=n.O();_N_E=a}]);